/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import org.junit.jupiter.api.Test;

/**
 * Model tests for RowTypeParameter
 */
public class RowTypeParameterTest {
    private final RowTypeParameter model = new RowTypeParameter();

    /**
     * Model tests for RowTypeParameter
     */
    @Test
    public void testRowTypeParameter() {
        // TODO: test RowTypeParameter
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'rowType'
     */
    @Test
    public void rowTypeTest() {
        // TODO: test rowType
    }

    /**
     * Test the property 'entity'
     */
    @Test
    public void entityTest() {
        // TODO: test entity
    }

    /**
     * Test the property 'expenditureForReceipts'
     */
    @Test
    public void expenditureForReceiptsTest() {
        // TODO: test expenditureForReceipts
    }

    /**
     * Test the property 'expenditureForDebits'
     */
    @Test
    public void expenditureForDebitsTest() {
        // TODO: test expenditureForDebits
    }

    /**
     * Test the property 'revenueForReceipts'
     */
    @Test
    public void revenueForReceiptsTest() {
        // TODO: test revenueForReceipts
    }

    /**
     * Test the property 'revenueForDebits'
     */
    @Test
    public void revenueForDebitsTest() {
        // TODO: test revenueForDebits
    }

    /**
     * Test the property 'analyticalSection'
     */
    @Test
    public void analyticalSectionTest() {
        // TODO: test analyticalSection
    }

    /**
     * Test the property 'analyticalSection2'
     */
    @Test
    public void analyticalSection2Test() {
        // TODO: test analyticalSection2
    }

    /**
     * Test the property 'vatSystem'
     */
    @Test
    public void vatSystemTest() {
        // TODO: test vatSystem
    }

    /**
     * Test the property 'defaultExpenditureAmount'
     */
    @Test
    public void defaultExpenditureAmountTest() {
        // TODO: test defaultExpenditureAmount
    }

    /**
     * Test the property 'warrantyPeriod'
     */
    @Test
    public void warrantyPeriodTest() {
        // TODO: test warrantyPeriod
    }

    /**
     * Test the property 'baseUsedForSubscription'
     */
    @Test
    public void baseUsedForSubscriptionTest() {
        // TODO: test baseUsedForSubscription
    }

    /**
     * Test the property 'annualSubscriptionRate'
     */
    @Test
    public void annualSubscriptionRateTest() {
        // TODO: test annualSubscriptionRate
    }

    /**
     * Test the property 'defaultDurationSubscription'
     */
    @Test
    public void defaultDurationSubscriptionTest() {
        // TODO: test defaultDurationSubscription
    }

    /**
     * Test the property 'revisionIndex'
     */
    @Test
    public void revisionIndexTest() {
        // TODO: test revisionIndex
    }

    /**
     * Test the property 'revisionIndex2'
     */
    @Test
    public void revisionIndex2Test() {
        // TODO: test revisionIndex2
    }

    /**
     * Test the property 'profileForTimeRowGeneration'
     */
    @Test
    public void profileForTimeRowGenerationTest() {
        // TODO: test profileForTimeRowGeneration
    }

    /**
     * Test the property 'anticipatedOrder'
     */
    @Test
    public void anticipatedOrderTest() {
        // TODO: test anticipatedOrder
    }

    /**
     * Test the property 'expenseInputMode'
     */
    @Test
    public void expenseInputModeTest() {
        // TODO: test expenseInputMode
    }

    /**
     * Test the property 'vatInputModeForExpenses'
     */
    @Test
    public void vatInputModeForExpensesTest() {
        // TODO: test vatInputModeForExpenses
    }

    /**
     * Test the property 'vatManagementModeForExpenses'
     */
    @Test
    public void vatManagementModeForExpensesTest() {
        // TODO: test vatManagementModeForExpenses
    }

    /**
     * Test the property 'vatForExpenses'
     */
    @Test
    public void vatForExpensesTest() {
        // TODO: test vatForExpenses
    }

    /**
     * Test the property 'recoverableVatRate'
     */
    @Test
    public void recoverableVatRateTest() {
        // TODO: test recoverableVatRate
    }

    /**
     * Test the property 'vat2ForExpenses'
     */
    @Test
    public void vat2ForExpensesTest() {
        // TODO: test vat2ForExpenses
    }

    /**
     * Test the property 'recoverableVatRate2'
     */
    @Test
    public void recoverableVatRate2Test() {
        // TODO: test recoverableVatRate2
    }

    /**
     * Test the property 'vat3ForExpenses'
     */
    @Test
    public void vat3ForExpensesTest() {
        // TODO: test vat3ForExpenses
    }

    /**
     * Test the property 'recoverableVatRate3'
     */
    @Test
    public void recoverableVatRate3Test() {
        // TODO: test recoverableVatRate3
    }

    /**
     * Test the property 'invitationsLuncheonVouchers'
     */
    @Test
    public void invitationsLuncheonVouchersTest() {
        // TODO: test invitationsLuncheonVouchers
    }

    /**
     * Test the property 'expenseCeiling'
     */
    @Test
    public void expenseCeilingTest() {
        // TODO: test expenseCeiling
    }

    /**
     * Test the property 'mandatoryDocument'
     */
    @Test
    public void mandatoryDocumentTest() {
        // TODO: test mandatoryDocument
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'extraData'
     */
    @Test
    public void extraDataTest() {
        // TODO: test extraData
    }

}
