/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.AccountDataLink;
import fr.everwin.sx.client.model.CurrencyDataLink;
import fr.everwin.sx.client.model.DataLink;
import fr.everwin.sx.client.model.ExpenseSheetDataLink;
import fr.everwin.sx.client.model.ExpenseSheetLineMultiCurrency;
import fr.everwin.sx.client.model.MissionOrderDataLink;
import fr.everwin.sx.client.model.ProjectDataLink;
import fr.everwin.sx.client.model.ProjectLineDataLink;
import fr.everwin.sx.client.model.RowtypeDataLink;
import fr.everwin.sx.client.model.SpecificData;
import fr.everwin.sx.client.model.VehicleDataLink;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ExpenseSheetLine
 */
public class ExpenseSheetLineTest {
    private final ExpenseSheetLine model = new ExpenseSheetLine();

    /**
     * Model tests for ExpenseSheetLine
     */
    @Test
    public void testExpenseSheetLine() {
        // TODO: test ExpenseSheetLine
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'expenseSheet'
     */
    @Test
    public void expenseSheetTest() {
        // TODO: test expenseSheet
    }

    /**
     * Test the property 'date'
     */
    @Test
    public void dateTest() {
        // TODO: test date
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'projectLine'
     */
    @Test
    public void projectLineTest() {
        // TODO: test projectLine
    }

    /**
     * Test the property 'missionOrder'
     */
    @Test
    public void missionOrderTest() {
        // TODO: test missionOrder
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'place'
     */
    @Test
    public void placeTest() {
        // TODO: test place
    }

    /**
     * Test the property 'lettering'
     */
    @Test
    public void letteringTest() {
        // TODO: test lettering
    }

    /**
     * Test the property 'quantity'
     */
    @Test
    public void quantityTest() {
        // TODO: test quantity
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'totalIncludingVat'
     */
    @Test
    public void totalIncludingVatTest() {
        // TODO: test totalIncludingVat
    }

    /**
     * Test the property 'totalWithoutVatReal'
     */
    @Test
    public void totalWithoutVatRealTest() {
        // TODO: test totalWithoutVatReal
    }

    /**
     * Test the property 'totalVatNonRecoverable'
     */
    @Test
    public void totalVatNonRecoverableTest() {
        // TODO: test totalVatNonRecoverable
    }

    /**
     * Test the property 'accountingTotalWithoutVat'
     */
    @Test
    public void accountingTotalWithoutVatTest() {
        // TODO: test accountingTotalWithoutVat
    }

    /**
     * Test the property 'totalVat'
     */
    @Test
    public void totalVatTest() {
        // TODO: test totalVat
    }

    /**
     * Test the property 'totalVatRecoverable'
     */
    @Test
    public void totalVatRecoverableTest() {
        // TODO: test totalVatRecoverable
    }

    /**
     * Test the property 'totalInvoiceAgain'
     */
    @Test
    public void totalInvoiceAgainTest() {
        // TODO: test totalInvoiceAgain
    }

    /**
     * Test the property 'reinvoiceable'
     */
    @Test
    public void reinvoiceableTest() {
        // TODO: test reinvoiceable
    }

    /**
     * Test the property 'startingAddress'
     */
    @Test
    public void startingAddressTest() {
        // TODO: test startingAddress
    }

    /**
     * Test the property 'arrivalAddress'
     */
    @Test
    public void arrivalAddressTest() {
        // TODO: test arrivalAddress
    }

    /**
     * Test the property 'distanceFromOSM'
     */
    @Test
    public void distanceFromOSMTest() {
        // TODO: test distanceFromOSM
    }

    /**
     * Test the property 'roundTrip'
     */
    @Test
    public void roundTripTest() {
        // TODO: test roundTrip
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'vehicle'
     */
    @Test
    public void vehicleTest() {
        // TODO: test vehicle
    }

    /**
     * Test the property 'distanceToDate'
     */
    @Test
    public void distanceToDateTest() {
        // TODO: test distanceToDate
    }

    /**
     * Test the property 'nonRefundable'
     */
    @Test
    public void nonRefundableTest() {
        // TODO: test nonRefundable
    }

    /**
     * Test the property 'documentCount'
     */
    @Test
    public void documentCountTest() {
        // TODO: test documentCount
    }

    /**
     * Test the property 'updatedBy'
     */
    @Test
    public void updatedByTest() {
        // TODO: test updatedBy
    }

    /**
     * Test the property 'updatedOnTime'
     */
    @Test
    public void updatedOnTimeTest() {
        // TODO: test updatedOnTime
    }

    /**
     * Test the property 'createdOnTime'
     */
    @Test
    public void createdOnTimeTest() {
        // TODO: test createdOnTime
    }

    /**
     * Test the property 'extraData'
     */
    @Test
    public void extraDataTest() {
        // TODO: test extraData
    }

    /**
     * Test the property 'documentMandatory'
     */
    @Test
    public void documentMandatoryTest() {
        // TODO: test documentMandatory
    }

    /**
     * Test the property 'guestMandatory'
     */
    @Test
    public void guestMandatoryTest() {
        // TODO: test guestMandatory
    }

    /**
     * Test the property 'ceiling'
     */
    @Test
    public void ceilingTest() {
        // TODO: test ceiling
    }

    /**
     * Test the property 'totalWithoutVatReal1'
     */
    @Test
    public void totalWithoutVatReal1Test() {
        // TODO: test totalWithoutVatReal1
    }

    /**
     * Test the property 'totalWithoutVatReal2'
     */
    @Test
    public void totalWithoutVatReal2Test() {
        // TODO: test totalWithoutVatReal2
    }

    /**
     * Test the property 'totalWithoutVatReal3'
     */
    @Test
    public void totalWithoutVatReal3Test() {
        // TODO: test totalWithoutVatReal3
    }

    /**
     * Test the property 'totalVat1'
     */
    @Test
    public void totalVat1Test() {
        // TODO: test totalVat1
    }

    /**
     * Test the property 'totalVat2'
     */
    @Test
    public void totalVat2Test() {
        // TODO: test totalVat2
    }

    /**
     * Test the property 'totalVat3'
     */
    @Test
    public void totalVat3Test() {
        // TODO: test totalVat3
    }

    /**
     * Test the property 'vat1'
     */
    @Test
    public void vat1Test() {
        // TODO: test vat1
    }

    /**
     * Test the property 'vat2'
     */
    @Test
    public void vat2Test() {
        // TODO: test vat2
    }

    /**
     * Test the property 'vat3'
     */
    @Test
    public void vat3Test() {
        // TODO: test vat3
    }

    /**
     * Test the property 'totalVat1NonRecoverable'
     */
    @Test
    public void totalVat1NonRecoverableTest() {
        // TODO: test totalVat1NonRecoverable
    }

    /**
     * Test the property 'totalVat2NonRecoverable'
     */
    @Test
    public void totalVat2NonRecoverableTest() {
        // TODO: test totalVat2NonRecoverable
    }

    /**
     * Test the property 'totalVat3NonRecoverable'
     */
    @Test
    public void totalVat3NonRecoverableTest() {
        // TODO: test totalVat3NonRecoverable
    }

    /**
     * Test the property 'totalVat1Recoverable'
     */
    @Test
    public void totalVat1RecoverableTest() {
        // TODO: test totalVat1Recoverable
    }

    /**
     * Test the property 'totalVat2Recoverable'
     */
    @Test
    public void totalVat2RecoverableTest() {
        // TODO: test totalVat2Recoverable
    }

    /**
     * Test the property 'totalVat3Recoverable'
     */
    @Test
    public void totalVat3RecoverableTest() {
        // TODO: test totalVat3Recoverable
    }

}
