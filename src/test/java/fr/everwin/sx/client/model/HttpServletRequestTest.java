/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.AsyncContext;
import fr.everwin.sx.client.model.Cookie;
import fr.everwin.sx.client.model.HttpServletMapping;
import fr.everwin.sx.client.model.HttpServletRequestLocale;
import fr.everwin.sx.client.model.HttpServletRequestRequestURL;
import fr.everwin.sx.client.model.HttpServletRequestUserPrincipal;
import fr.everwin.sx.client.model.HttpSession;
import fr.everwin.sx.client.model.Part;
import fr.everwin.sx.client.model.ServletConnection;
import fr.everwin.sx.client.model.ServletContext;
import fr.everwin.sx.client.model.ServletInputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for HttpServletRequest
 */
public class HttpServletRequestTest {
    private final HttpServletRequest model = new HttpServletRequest();

    /**
     * Model tests for HttpServletRequest
     */
    @Test
    public void testHttpServletRequest() {
        // TODO: test HttpServletRequest
    }

    /**
     * Test the property 'method'
     */
    @Test
    public void methodTest() {
        // TODO: test method
    }

    /**
     * Test the property 'contextPath'
     */
    @Test
    public void contextPathTest() {
        // TODO: test contextPath
    }

    /**
     * Test the property 'queryString'
     */
    @Test
    public void queryStringTest() {
        // TODO: test queryString
    }

    /**
     * Test the property 'cookies'
     */
    @Test
    public void cookiesTest() {
        // TODO: test cookies
    }

    /**
     * Test the property 'requestURI'
     */
    @Test
    public void requestURITest() {
        // TODO: test requestURI
    }

    /**
     * Test the property 'requestURL'
     */
    @Test
    public void requestURLTest() {
        // TODO: test requestURL
    }

    /**
     * Test the property 'requestedSessionIdFromURL'
     */
    @Test
    public void requestedSessionIdFromURLTest() {
        // TODO: test requestedSessionIdFromURL
    }

    /**
     * Test the property 'requestedSessionIdFromCookie'
     */
    @Test
    public void requestedSessionIdFromCookieTest() {
        // TODO: test requestedSessionIdFromCookie
    }

    /**
     * Test the property 'session'
     */
    @Test
    public void sessionTest() {
        // TODO: test session
    }

    /**
     * Test the property 'requestedSessionIdValid'
     */
    @Test
    public void requestedSessionIdValidTest() {
        // TODO: test requestedSessionIdValid
    }

    /**
     * Test the property 'httpServletMapping'
     */
    @Test
    public void httpServletMappingTest() {
        // TODO: test httpServletMapping
    }

    /**
     * Test the property 'trailerFieldsReady'
     */
    @Test
    public void trailerFieldsReadyTest() {
        // TODO: test trailerFieldsReady
    }

    /**
     * Test the property 'parts'
     */
    @Test
    public void partsTest() {
        // TODO: test parts
    }

    /**
     * Test the property 'headerNames'
     */
    @Test
    public void headerNamesTest() {
        // TODO: test headerNames
    }

    /**
     * Test the property 'trailerFields'
     */
    @Test
    public void trailerFieldsTest() {
        // TODO: test trailerFields
    }

    /**
     * Test the property 'userPrincipal'
     */
    @Test
    public void userPrincipalTest() {
        // TODO: test userPrincipal
    }

    /**
     * Test the property 'pathTranslated'
     */
    @Test
    public void pathTranslatedTest() {
        // TODO: test pathTranslated
    }

    /**
     * Test the property 'authType'
     */
    @Test
    public void authTypeTest() {
        // TODO: test authType
    }

    /**
     * Test the property 'servletPath'
     */
    @Test
    public void servletPathTest() {
        // TODO: test servletPath
    }

    /**
     * Test the property 'pathInfo'
     */
    @Test
    public void pathInfoTest() {
        // TODO: test pathInfo
    }

    /**
     * Test the property 'remoteUser'
     */
    @Test
    public void remoteUserTest() {
        // TODO: test remoteUser
    }

    /**
     * Test the property 'requestedSessionId'
     */
    @Test
    public void requestedSessionIdTest() {
        // TODO: test requestedSessionId
    }

    /**
     * Test the property 'scheme'
     */
    @Test
    public void schemeTest() {
        // TODO: test scheme
    }

    /**
     * Test the property 'inputStream'
     */
    @Test
    public void inputStreamTest() {
        // TODO: test inputStream
    }

    /**
     * Test the property 'protocol'
     */
    @Test
    public void protocolTest() {
        // TODO: test protocol
    }

    /**
     * Test the property 'locale'
     */
    @Test
    public void localeTest() {
        // TODO: test locale
    }

    /**
     * Test the property 'contentLength'
     */
    @Test
    public void contentLengthTest() {
        // TODO: test contentLength
    }

    /**
     * Test the property 'servletContext'
     */
    @Test
    public void servletContextTest() {
        // TODO: test servletContext
    }

    /**
     * Test the property 'reader'
     */
    @Test
    public void readerTest() {
        // TODO: test reader
    }

    /**
     * Test the property 'remoteAddr'
     */
    @Test
    public void remoteAddrTest() {
        // TODO: test remoteAddr
    }

    /**
     * Test the property 'characterEncoding'
     */
    @Test
    public void characterEncodingTest() {
        // TODO: test characterEncoding
    }

    /**
     * Test the property 'protocolRequestId'
     */
    @Test
    public void protocolRequestIdTest() {
        // TODO: test protocolRequestId
    }

    /**
     * Test the property 'servletConnection'
     */
    @Test
    public void servletConnectionTest() {
        // TODO: test servletConnection
    }

    /**
     * Test the property 'locales'
     */
    @Test
    public void localesTest() {
        // TODO: test locales
    }

    /**
     * Test the property 'secure'
     */
    @Test
    public void secureTest() {
        // TODO: test secure
    }

    /**
     * Test the property 'localAddr'
     */
    @Test
    public void localAddrTest() {
        // TODO: test localAddr
    }

    /**
     * Test the property 'serverPort'
     */
    @Test
    public void serverPortTest() {
        // TODO: test serverPort
    }

    /**
     * Test the property 'asyncStarted'
     */
    @Test
    public void asyncStartedTest() {
        // TODO: test asyncStarted
    }

    /**
     * Test the property 'remotePort'
     */
    @Test
    public void remotePortTest() {
        // TODO: test remotePort
    }

    /**
     * Test the property 'attributeNames'
     */
    @Test
    public void attributeNamesTest() {
        // TODO: test attributeNames
    }

    /**
     * Test the property 'remoteHost'
     */
    @Test
    public void remoteHostTest() {
        // TODO: test remoteHost
    }

    /**
     * Test the property 'asyncSupported'
     */
    @Test
    public void asyncSupportedTest() {
        // TODO: test asyncSupported
    }

    /**
     * Test the property 'serverName'
     */
    @Test
    public void serverNameTest() {
        // TODO: test serverName
    }

    /**
     * Test the property 'parameterMap'
     */
    @Test
    public void parameterMapTest() {
        // TODO: test parameterMap
    }

    /**
     * Test the property 'localPort'
     */
    @Test
    public void localPortTest() {
        // TODO: test localPort
    }

    /**
     * Test the property 'dispatcherType'
     */
    @Test
    public void dispatcherTypeTest() {
        // TODO: test dispatcherType
    }

    /**
     * Test the property 'asyncContext'
     */
    @Test
    public void asyncContextTest() {
        // TODO: test asyncContext
    }

    /**
     * Test the property 'requestId'
     */
    @Test
    public void requestIdTest() {
        // TODO: test requestId
    }

    /**
     * Test the property 'contentLengthLong'
     */
    @Test
    public void contentLengthLongTest() {
        // TODO: test contentLengthLong
    }

    /**
     * Test the property 'contentType'
     */
    @Test
    public void contentTypeTest() {
        // TODO: test contentType
    }

    /**
     * Test the property 'localName'
     */
    @Test
    public void localNameTest() {
        // TODO: test localName
    }

    /**
     * Test the property 'parameterNames'
     */
    @Test
    public void parameterNamesTest() {
        // TODO: test parameterNames
    }

}
