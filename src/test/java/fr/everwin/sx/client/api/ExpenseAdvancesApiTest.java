/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.api;

import fr.everwin.sx.client.*;
import fr.everwin.sx.client.auth.*;
import fr.everwin.sx.client.model.Advance;
import fr.everwin.sx.client.model.AdvanceList;
import fr.everwin.sx.client.model.Comment;
import fr.everwin.sx.client.model.ErrorMessage;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExpenseAdvancesApi
 */
public class ExpenseAdvancesApiTest {

    private final ExpenseAdvancesApi api = new ExpenseAdvancesApi();

    /**
     * Cancel the advance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelTest() throws ApiException {
        //Long id = null;
        //Comment comment = null;
        //api.cancel(id, comment);
        // TODO: test validations
    }

    /**
     * Create an advance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        //Advance advance = null;
        //api.create(advance);
        // TODO: test validations
    }

    /**
     * Delete an advance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        //Long id = null;
        //api.delete(id);
        // TODO: test validations
    }

    /**
     * Get an advance by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        //Long id = null;
        //String fields = null;
        //Advance response = api.getById(id, fields);
        // TODO: test validations
    }

    /**
     * Test advances on expenses service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pingTest() throws ApiException {
        //String response = api.ping();
        // TODO: test validations
    }

    /**
     * Get an advances collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryTest() throws ApiException {
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //AdvanceList response = api.query(filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of affectations for the given advance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryAffectationListTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String fields = null;
        //api.queryAffectationList(id, filter, fields);
        // TODO: test validations
    }

    /**
     * Unvalidate the advance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unvalidateTest() throws ApiException {
        //Long id = null;
        //Comment comment = null;
        //api.unvalidate(id, comment);
        // TODO: test validations
    }

    /**
     * Full update of an advance. If the advance doesn&#39;t exist, it&#39;s created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        //Long id = null;
        //Advance advance = null;
        //api.update(id, advance);
        // TODO: test validations
    }

    /**
     * Partial update of an advance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePartialTest() throws ApiException {
        //Long id = null;
        //Advance advance = null;
        //api.updatePartial(id, advance);
        // TODO: test validations
    }

    /**
     * Validate the advance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validateTest() throws ApiException {
        //Long id = null;
        //Comment comment = null;
        //api.validate(id, comment);
        // TODO: test validations
    }

}
