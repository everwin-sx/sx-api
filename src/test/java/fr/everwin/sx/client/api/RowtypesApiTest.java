/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.api;

import fr.everwin.sx.client.ApiException;
import org.junit.jupiter.api.Test;

/**
 * API tests for RowtypesApi
 */
public class RowtypesApiTest {

    private final RowtypesApi api = new RowtypesApi();

    /**
     * Get a rowtype by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        //Long id = null;
        //String fields = null;
        //Rowtype response = api.getById(id, fields);
        // TODO: test validations
    }

    /**
     * Test rowtypes service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pingTest() throws ApiException {
        //String response = api.ping();
        // TODO: test validations
    }

    /**
     * Get a rowtypes collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryTest() throws ApiException {
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //RowtypeListV3 response = api.query(filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of rowtypes for external projects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryExternalTest() throws ApiException {
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //RowtypeListV3 response = api.queryExternal(filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of rowtypes for internal projects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryInternalTest() throws ApiException {
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //api.queryInternal(filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of rowtypes for internal activities
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryInternalActivitiesTest() throws ApiException {
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //RowtypeListV3 response = api.queryInternalActivities(filter, sort, offset, limit, fields);
        // TODO: test validations
    }

}
