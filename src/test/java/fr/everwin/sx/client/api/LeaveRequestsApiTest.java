/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.api;

import fr.everwin.sx.client.*;
import fr.everwin.sx.client.auth.*;
import fr.everwin.sx.client.model.Comment;
import fr.everwin.sx.client.model.Document;
import fr.everwin.sx.client.model.DocumentList;
import fr.everwin.sx.client.model.ErrorMessage;
import fr.everwin.sx.client.model.FormDataContentDisposition;
import fr.everwin.sx.client.model.LeaveRequest;
import fr.everwin.sx.client.model.LeaveRequestFlowHistoryList;
import fr.everwin.sx.client.model.LeaveRequestList;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LeaveRequestsApi
 */
public class LeaveRequestsApiTest {

    private final LeaveRequestsApi api = new LeaveRequestsApi();

    /**
     * Create an leave request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        //LeaveRequest leaveRequest = null;
        //api.create(leaveRequest);
        // TODO: test validations
    }

    /**
     * Create a new document for the leave request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDocumentTest() throws ApiException {
        //Long id = null;
        //Document document = null;
        //api.createDocument(id, document);
        // TODO: test validations
    }

    /**
     * Delete an leave request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        //Long id = null;
        //api.delete(id);
        // TODO: test validations
    }

    /**
     * Delete a leave request document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //api.deleteDocument(id, did);
        // TODO: test validations
    }

    /**
     * Get physical file linked to the leave request document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //api.downloadDocument(id, did);
        // TODO: test validations
    }

    /**
     * Get a leave request by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        //Long id = null;
        //String fields = null;
        //LeaveRequest response = api.getById(id, fields);
        // TODO: test validations
    }

    /**
     * Get a leave request document by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentByIdTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //String fields = null;
        //Document response = api.getDocumentById(id, did, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of documents for the given leave request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //DocumentList response = api.getDocuments(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Test Leave-request service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pingTest() throws ApiException {
        //String response = api.ping();
        // TODO: test validations
    }

    /**
     * Get a leave request collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryTest() throws ApiException {
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //LeaveRequestList response = api.query(filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of flow history for the given leave request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryValidationHistoryListTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String fields = null;
        //LeaveRequestFlowHistoryList response = api.queryValidationHistoryList(id, filter, fields);
        // TODO: test validations
    }

    /**
     * Refuse the leave request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refuseTest() throws ApiException {
        //Long id = null;
        //Comment comment = null;
        //api.refuse(id, comment);
        // TODO: test validations
    }

    /**
     * Unvalidate the leave request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unvalidateTest() throws ApiException {
        //Long id = null;
        //Comment comment = null;
        //api.unvalidate(id, comment);
        // TODO: test validations
    }

    /**
     * Full update of an leave request. If leave request doesn&#39;t exist, it&#39;s created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        //Long id = null;
        //LeaveRequest leaveRequest = null;
        //api.update(id, leaveRequest);
        // TODO: test validations
    }

    /**
     * Full update of a leave request document. If document doesn&#39;t exist, it&#39;s created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //Document document = null;
        //api.updateDocument(id, did, document);
        // TODO: test validations
    }

    /**
     * Partial update of a leave request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePartialTest() throws ApiException {
        //Long id = null;
        //LeaveRequest leaveRequest = null;
        //api.updatePartial(id, leaveRequest);
        // TODO: test validations
    }

    /**
     * Partial update of a document leave request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePartialDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //Document document = null;
        //api.updatePartialDocument(id, did, document);
        // TODO: test validations
    }

    /**
     * Upload physical file linked to the leave request document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //FormDataContentDisposition _file = null;
        //api.uploadDocument(id, did, _file);
        // TODO: test validations
    }

    /**
     * Validate the leave request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validateTest() throws ApiException {
        //Long id = null;
        //Comment comment = null;
        //api.validate(id, comment);
        // TODO: test validations
    }

}
