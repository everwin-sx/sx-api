/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.api;

import fr.everwin.sx.client.*;
import fr.everwin.sx.client.auth.*;
import fr.everwin.sx.client.model.Comment;
import fr.everwin.sx.client.model.CommentList;
import fr.everwin.sx.client.model.Company;
import fr.everwin.sx.client.model.CompanyAccountList;
import fr.everwin.sx.client.model.CompanyList;
import fr.everwin.sx.client.model.ContactResponsibilityList;
import fr.everwin.sx.client.model.CustomerAccountList;
import fr.everwin.sx.client.model.CustomerAssetList;
import fr.everwin.sx.client.model.CustomerList;
import fr.everwin.sx.client.model.Document;
import fr.everwin.sx.client.model.DocumentList;
import fr.everwin.sx.client.model.ErrorMessage;
import fr.everwin.sx.client.model.FormDataContentDisposition;
import fr.everwin.sx.client.model.OpportunityList;
import fr.everwin.sx.client.model.ProjectList;
import fr.everwin.sx.client.model.SalesActionList;
import fr.everwin.sx.client.model.SupplierAccountList;
import fr.everwin.sx.client.model.Supplierlist;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CompaniesApi
 */
public class CompaniesApiTest {

    private final CompaniesApi api = new CompaniesApi();

    /**
     * Create a company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        //Company company = null;
        //api.create(company);
        // TODO: test validations
    }

    /**
     * Create a comment for the company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCommentTest() throws ApiException {
        //Long id = null;
        //Comment comment = null;
        //api.createComment(id, comment);
        // TODO: test validations
    }

    /**
     * Create a new document for the company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDocumentTest() throws ApiException {
        //Long id = null;
        //Document document = null;
        //api.createDocument(id, document);
        // TODO: test validations
    }

    /**
     * Delete a company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        //Long id = null;
        //api.delete(id);
        // TODO: test validations
    }

    /**
     * Delete a company comment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCommentTest() throws ApiException {
        //Long id = null;
        //Long cid = null;
        //api.deleteComment(id, cid);
        // TODO: test validations
    }

    /**
     * Delete a company document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //api.deleteDocument(id, did);
        // TODO: test validations
    }

    /**
     * Get physical file linked to the company document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //api.downloadDocument(id, did);
        // TODO: test validations
    }

    /**
     * Get company accounts of the company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //CompanyAccountList response = api.getAccounts(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a company by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        //Long id = null;
        //String fields = null;
        //Company response = api.getById(id, fields);
        // TODO: test validations
    }

    /**
     * Get a company comment by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCommentByIdTest() throws ApiException {
        //Long id = null;
        //Long cid = null;
        //String fields = null;
        //Comment response = api.getCommentById(id, cid, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of comments for the given company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCommentsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //CommentList response = api.getComments(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get contacts of the company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContactsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //ContactResponsibilityList response = api.getContacts(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of company customer accounts linked to the given company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomerAccountsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //CustomerAccountList response = api.getCustomerAccounts(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of assets for the given company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomerAssetsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //CustomerAssetList response = api.getCustomerAssets(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a company document by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentByIdTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //String fields = null;
        //Document response = api.getDocumentById(id, did, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of documents for the given company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //DocumentList response = api.getDocuments(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of opportunities for the given company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOpportunitiesTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //OpportunityList response = api.getOpportunities(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of projects for the given company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //ProjectList response = api.getProjects(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of sales actions for the given company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSalesActionsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //SalesActionList response = api.getSalesActions(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of company supplier accounts linked to the given company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSupplierAccountsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //SupplierAccountList response = api.getSupplierAccounts(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Test companies service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pingTest() throws ApiException {
        //String response = api.ping();
        // TODO: test validations
    }

    /**
     * Get a companies collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryTest() throws ApiException {
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //CompanyList response = api.query(filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a customers collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryCustomersTest() throws ApiException {
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //CustomerList response = api.queryCustomers(filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a suppliers collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void querySuppliersTest() throws ApiException {
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //Supplierlist response = api.querySuppliers(filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Full update of a company. If company doesn&#39;t exist, it&#39;s created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        //Long id = null;
        //Company company = null;
        //api.update(id, company);
        // TODO: test validations
    }

    /**
     * Full update of a company comment. If comment doesn&#39;t exist, it&#39;s created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCommentTest() throws ApiException {
        //Long id = null;
        //Long cid = null;
        //Comment comment = null;
        //api.updateComment(id, cid, comment);
        // TODO: test validations
    }

    /**
     * Full update of a company document. If document doesn&#39;t exist, it&#39;s created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //Document document = null;
        //api.updateDocument(id, did, document);
        // TODO: test validations
    }

    /**
     * Partial update of a company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePartialTest() throws ApiException {
        //Long id = null;
        //Company company = null;
        //api.updatePartial(id, company);
        // TODO: test validations
    }

    /**
     * Partial update of a company comment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePartialCommentTest() throws ApiException {
        //Long id = null;
        //Long cid = null;
        //Comment comment = null;
        //api.updatePartialComment(id, cid, comment);
        // TODO: test validations
    }

    /**
     * Partial update of a document company
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePartialDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //Document document = null;
        //api.updatePartialDocument(id, did, document);
        // TODO: test validations
    }

    /**
     * Upload physical file linked to the company document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //FormDataContentDisposition _file = null;
        //api.uploadDocument(id, did, _file);
        // TODO: test validations
    }

}
