/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.api;

import fr.everwin.sx.client.*;
import fr.everwin.sx.client.auth.*;
import fr.everwin.sx.client.model.Comment;
import fr.everwin.sx.client.model.CommentList;
import fr.everwin.sx.client.model.CustomerAssetList;
import fr.everwin.sx.client.model.Document;
import fr.everwin.sx.client.model.DocumentList;
import fr.everwin.sx.client.model.ErrorMessage;
import fr.everwin.sx.client.model.FormDataContentDisposition;
import fr.everwin.sx.client.model.Project;
import fr.everwin.sx.client.model.ProjectLineList;
import fr.everwin.sx.client.model.ProjectList;
import fr.everwin.sx.client.model.ProjectPhaseList;
import fr.everwin.sx.client.model.QuoteLines;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Cancel invoicing of the project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelInvoicingTest() throws ApiException {
        //Long id = null;
        //api.cancelInvoicing(id);
        // TODO: test validations
    }

    /**
     * Create a project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        //Project project = null;
        //api.create(project);
        // TODO: test validations
    }

    /**
     * Create a comment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCommentTest() throws ApiException {
        //Long id = null;
        //Comment comment = null;
        //api.createComment(id, comment);
        // TODO: test validations
    }

    /**
     * Create a new document for the project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDocumentTest() throws ApiException {
        //Long id = null;
        //Document document = null;
        //api.createDocument(id, document);
        // TODO: test validations
    }

    /**
     * Create a quote from given lines ids
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createQuoteTest() throws ApiException {
        //Long id = null;
        //QuoteLines quoteLines = null;
        //api.createQuote(id, quoteLines);
        // TODO: test validations
    }

    /**
     * Delete a project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        //Long id = null;
        //api.delete(id);
        // TODO: test validations
    }

    /**
     * Delete a comment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCommentTest() throws ApiException {
        //Long id = null;
        //Long cid = null;
        //api.deleteComment(id, cid);
        // TODO: test validations
    }

    /**
     * Delete a project document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //api.deleteDocument(id, did);
        // TODO: test validations
    }

    /**
     * Get physical file linked to the project document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //api.downloadDocument(id, did);
        // TODO: test validations
    }

    /**
     * Get a project by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        //Long id = null;
        //String fields = null;
        //Project response = api.getById(id, fields);
        // TODO: test validations
    }

    /**
     * Get a comment by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCommentByIdTest() throws ApiException {
        //Long id = null;
        //Long cid = null;
        //String fields = null;
        //Comment response = api.getCommentById(id, cid, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of comments for the given project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCommentsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //CommentList response = api.getComments(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of currencies for the given project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCurrenciesTest() throws ApiException {
        //Long id = null;
        //api.getCurrencies(id);
        // TODO: test validations
    }

    /**
     * Get a collection of customer assets for the given project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomerAssetsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //CustomerAssetList response = api.getCustomerAssets(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a project document by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentByIdTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //String fields = null;
        //Document response = api.getDocumentById(id, did, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of documents for the given project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentsTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //DocumentList response = api.getDocuments(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of project phases for the given project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPhasesTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //ProjectPhaseList response = api.getPhases(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of project lines for the given project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectLinesTest() throws ApiException {
        //Long id = null;
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //ProjectLineList response = api.getProjectLines(id, filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Get a collection of OCR rowtype for the given project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectRowtypesOCRTest() throws ApiException {
        //Long id = null;
        //String ocrCategory = null;
        //api.getProjectRowtypesOCR(id, ocrCategory);
        // TODO: test validations
    }

    /**
     * Invoicing to proforma
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoicingProformaTest() throws ApiException {
        //Long id = null;
        //api.invoicingProforma(id);
        // TODO: test validations
    }

    /**
     * Unvalidate invoicing of the project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoicingUnvalidateTest() throws ApiException {
        //Long id = null;
        //List<Long> projectLineId = null;
        //api.invoicingUnvalidate(id, projectLineId);
        // TODO: test validations
    }

    /**
     * Validate invoicing of the project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoicingValidateTest() throws ApiException {
        //Long id = null;
        //List<Long> projectLineId = null;
        //api.invoicingValidate(id, projectLineId);
        // TODO: test validations
    }

    /**
     * Test projects service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pingTest() throws ApiException {
        //String response = api.ping();
        // TODO: test validations
    }

    /**
     * Get a projects collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryTest() throws ApiException {
        //String filter = null;
        //String sort = null;
        //Integer offset = null;
        //Integer limit = null;
        //String fields = null;
        //ProjectList response = api.query(filter, sort, offset, limit, fields);
        // TODO: test validations
    }

    /**
     * Full update of a project. If project doesn&#39;t exist, it&#39;s created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        //Long id = null;
        //Project project = null;
        //api.update(id, project);
        // TODO: test validations
    }

    /**
     * Full update of a comment. If comment doesn&#39;t exist, it&#39;s created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCommentTest() throws ApiException {
        //Long id = null;
        //Long cid = null;
        //Comment comment = null;
        //api.updateComment(id, cid, comment);
        // TODO: test validations
    }

    /**
     * Full update of a project document. If document doesn&#39;t exist, it&#39;s created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //Document document = null;
        //api.updateDocument(id, did, document);
        // TODO: test validations
    }

    /**
     * Partial update of a project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePartialTest() throws ApiException {
        //Long id = null;
        //Project project = null;
        //api.updatePartial(id, project);
        // TODO: test validations
    }

    /**
     * Partial update of a comment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePartialCommentTest() throws ApiException {
        //Long id = null;
        //Long cid = null;
        //Comment comment = null;
        //api.updatePartialComment(id, cid, comment);
        // TODO: test validations
    }

    /**
     * Partial update of a document project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePartialDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //Document document = null;
        //api.updatePartialDocument(id, did, document);
        // TODO: test validations
    }

    /**
     * Upload physical file linked to the project document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadDocumentTest() throws ApiException {
        //Long id = null;
        //Long did = null;
        //FormDataContentDisposition _file = null;
        //api.uploadDocument(id, did, _file);
        // TODO: test validations
    }

}
