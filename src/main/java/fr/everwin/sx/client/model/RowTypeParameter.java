/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * RowTypeParameter
 */
@JsonPropertyOrder({
  RowTypeParameter.JSON_PROPERTY_ID,
  RowTypeParameter.JSON_PROPERTY_ROW_TYPE,
  RowTypeParameter.JSON_PROPERTY_ENTITY,
  RowTypeParameter.JSON_PROPERTY_EXPENDITURE_FOR_RECEIPTS,
  RowTypeParameter.JSON_PROPERTY_EXPENDITURE_FOR_DEBITS,
  RowTypeParameter.JSON_PROPERTY_REVENUE_FOR_RECEIPTS,
  RowTypeParameter.JSON_PROPERTY_REVENUE_FOR_DEBITS,
  RowTypeParameter.JSON_PROPERTY_ANALYTICAL_SECTION,
  RowTypeParameter.JSON_PROPERTY_ANALYTICAL_SECTION2,
  RowTypeParameter.JSON_PROPERTY_VAT_SYSTEM,
  RowTypeParameter.JSON_PROPERTY_DEFAULT_EXPENDITURE_AMOUNT,
  RowTypeParameter.JSON_PROPERTY_WARRANTY_PERIOD,
  RowTypeParameter.JSON_PROPERTY_BASE_USED_FOR_SUBSCRIPTION,
  RowTypeParameter.JSON_PROPERTY_ANNUAL_SUBSCRIPTION_RATE,
  RowTypeParameter.JSON_PROPERTY_DEFAULT_DURATION_SUBSCRIPTION,
  RowTypeParameter.JSON_PROPERTY_REVISION_INDEX,
  RowTypeParameter.JSON_PROPERTY_REVISION_INDEX2,
  RowTypeParameter.JSON_PROPERTY_PROFILE_FOR_TIME_ROW_GENERATION,
  RowTypeParameter.JSON_PROPERTY_ANTICIPATED_ORDER,
  RowTypeParameter.JSON_PROPERTY_EXPENSE_INPUT_MODE,
  RowTypeParameter.JSON_PROPERTY_VAT_INPUT_MODE_FOR_EXPENSES,
  RowTypeParameter.JSON_PROPERTY_VAT_MANAGEMENT_MODE_FOR_EXPENSES,
  RowTypeParameter.JSON_PROPERTY_VAT_FOR_EXPENSES,
  RowTypeParameter.JSON_PROPERTY_RECOVERABLE_VAT_RATE,
  RowTypeParameter.JSON_PROPERTY_VAT2_FOR_EXPENSES,
  RowTypeParameter.JSON_PROPERTY_RECOVERABLE_VAT_RATE2,
  RowTypeParameter.JSON_PROPERTY_VAT3_FOR_EXPENSES,
  RowTypeParameter.JSON_PROPERTY_RECOVERABLE_VAT_RATE3,
  RowTypeParameter.JSON_PROPERTY_INVITATIONS_LUNCHEON_VOUCHERS,
  RowTypeParameter.JSON_PROPERTY_EXPENSE_CEILING,
  RowTypeParameter.JSON_PROPERTY_MANDATORY_DOCUMENT,
  RowTypeParameter.JSON_PROPERTY_VISIBILITY,
  RowTypeParameter.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("row-type-parameter")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class RowTypeParameter {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_ROW_TYPE = "rowType";
  private RowtypeDataLink rowType;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private EntityDataLink entity;

  public static final String JSON_PROPERTY_EXPENDITURE_FOR_RECEIPTS = "expenditureForReceipts";
  private String expenditureForReceipts;

  public static final String JSON_PROPERTY_EXPENDITURE_FOR_DEBITS = "expenditureForDebits";
  private String expenditureForDebits;

  public static final String JSON_PROPERTY_REVENUE_FOR_RECEIPTS = "revenueForReceipts";
  private String revenueForReceipts;

  public static final String JSON_PROPERTY_REVENUE_FOR_DEBITS = "revenueForDebits";
  private String revenueForDebits;

  public static final String JSON_PROPERTY_ANALYTICAL_SECTION = "analyticalSection";
  private String analyticalSection;

  public static final String JSON_PROPERTY_ANALYTICAL_SECTION2 = "analyticalSection2";
  private String analyticalSection2;

  /**
   * Vat system. Empty : use the one of the entity, 1 : Receipts, 2 : Debits
   */
  public enum VatSystemEnum {
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    VatSystemEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VatSystemEnum fromValue(Integer value) {
      for (VatSystemEnum b : VatSystemEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VAT_SYSTEM = "vatSystem";
  private VatSystemEnum vatSystem;

  public static final String JSON_PROPERTY_DEFAULT_EXPENDITURE_AMOUNT = "defaultExpenditureAmount";
  private Double defaultExpenditureAmount;

  public static final String JSON_PROPERTY_WARRANTY_PERIOD = "warrantyPeriod";
  private Integer warrantyPeriod;

  /**
   * Base used for subscription. 0 : Receipts, 1 : Debits
   */
  public enum BaseUsedForSubscriptionEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    BaseUsedForSubscriptionEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BaseUsedForSubscriptionEnum fromValue(Integer value) {
      for (BaseUsedForSubscriptionEnum b : BaseUsedForSubscriptionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_BASE_USED_FOR_SUBSCRIPTION = "baseUsedForSubscription";
  private BaseUsedForSubscriptionEnum baseUsedForSubscription;

  public static final String JSON_PROPERTY_ANNUAL_SUBSCRIPTION_RATE = "annualSubscriptionRate";
  private Double annualSubscriptionRate;

  public static final String JSON_PROPERTY_DEFAULT_DURATION_SUBSCRIPTION = "defaultDurationSubscription";
  private Integer defaultDurationSubscription;

  public static final String JSON_PROPERTY_REVISION_INDEX = "revisionIndex";
  private Long revisionIndex;

  public static final String JSON_PROPERTY_REVISION_INDEX2 = "revisionIndex2";
  private Long revisionIndex2;

  public static final String JSON_PROPERTY_PROFILE_FOR_TIME_ROW_GENERATION = "profileForTimeRowGeneration";
  private ProfileDataLink profileForTimeRowGeneration;

  /**
   * Anticipated order. 0 : No, 5 : Yes, 10 : Yes on same type of row
   */
  public enum AnticipatedOrderEnum {
    NUMBER_0(0),
    
    NUMBER_5(5),
    
    NUMBER_10(10);

    private Integer value;

    AnticipatedOrderEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AnticipatedOrderEnum fromValue(Integer value) {
      for (AnticipatedOrderEnum b : AnticipatedOrderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ANTICIPATED_ORDER = "anticipatedOrder";
  private AnticipatedOrderEnum anticipatedOrder;

  /**
   * Expense input mode. 0 : Quantity x amount, 1 : Quantity + total, 2 : Total
   */
  public enum ExpenseInputModeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    ExpenseInputModeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExpenseInputModeEnum fromValue(Integer value) {
      for (ExpenseInputModeEnum b : ExpenseInputModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXPENSE_INPUT_MODE = "expenseInputMode";
  private ExpenseInputModeEnum expenseInputMode;

  /**
   * VAT input mode for expenses. 0 : Assisted free entry mode, 1 : Non-assisted free entry mode, 2 : Assisted free mandatory entry mode, 3 : Non-assisted free mandatory entry mode, 10 : Auto fill
   */
  public enum VatInputModeForExpensesEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_10(10);

    private Integer value;

    VatInputModeForExpensesEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VatInputModeForExpensesEnum fromValue(Integer value) {
      for (VatInputModeForExpensesEnum b : VatInputModeForExpensesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VAT_INPUT_MODE_FOR_EXPENSES = "vatInputModeForExpenses";
  private VatInputModeForExpensesEnum vatInputModeForExpenses;

  /**
   * VAT management mode for expenses. 0 : Recoverable VAT, 1 : Recoverable VAT, except for re-invoicing, 10 : Non-recoverable VAT
   */
  public enum VatManagementModeForExpensesEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_10(10);

    private Integer value;

    VatManagementModeForExpensesEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VatManagementModeForExpensesEnum fromValue(Integer value) {
      for (VatManagementModeForExpensesEnum b : VatManagementModeForExpensesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VAT_MANAGEMENT_MODE_FOR_EXPENSES = "vatManagementModeForExpenses";
  private VatManagementModeForExpensesEnum vatManagementModeForExpenses;

  public static final String JSON_PROPERTY_VAT_FOR_EXPENSES = "vatForExpenses";
  private Long vatForExpenses;

  public static final String JSON_PROPERTY_RECOVERABLE_VAT_RATE = "recoverableVatRate";
  private Double recoverableVatRate;

  public static final String JSON_PROPERTY_VAT2_FOR_EXPENSES = "vat2ForExpenses";
  private Long vat2ForExpenses;

  public static final String JSON_PROPERTY_RECOVERABLE_VAT_RATE2 = "recoverableVatRate2";
  private Double recoverableVatRate2;

  public static final String JSON_PROPERTY_VAT3_FOR_EXPENSES = "vat3ForExpenses";
  private Long vat3ForExpenses;

  public static final String JSON_PROPERTY_RECOVERABLE_VAT_RATE3 = "recoverableVatRate3";
  private Double recoverableVatRate3;

  /**
   * Invitation luncheon vouchers. 0 : No, 1 : Invitation, 2 : Luncheon voucher invitation
   */
  public enum InvitationsLuncheonVouchersEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    InvitationsLuncheonVouchersEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InvitationsLuncheonVouchersEnum fromValue(Integer value) {
      for (InvitationsLuncheonVouchersEnum b : InvitationsLuncheonVouchersEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INVITATIONS_LUNCHEON_VOUCHERS = "invitationsLuncheonVouchers";
  private InvitationsLuncheonVouchersEnum invitationsLuncheonVouchers;

  public static final String JSON_PROPERTY_EXPENSE_CEILING = "expenseCeiling";
  private Double expenseCeiling;

  /**
   * Is a document mandatory ? 0 : No, 1 : Yes
   */
  public enum MandatoryDocumentEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    MandatoryDocumentEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MandatoryDocumentEnum fromValue(Integer value) {
      for (MandatoryDocumentEnum b : MandatoryDocumentEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MANDATORY_DOCUMENT = "mandatoryDocument";
  private MandatoryDocumentEnum mandatoryDocument;

  /**
   * Indicates the visibility of the row type parameter. 0 : Active, 10 : Inactive
   */
  public enum VisibilityEnum {
    NUMBER_0(0),
    
    NUMBER_10(10);

    private Integer value;

    VisibilityEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VisibilityEnum fromValue(Integer value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VISIBILITY = "visibility";
  private VisibilityEnum visibility;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public RowTypeParameter() { 
  }

  public RowTypeParameter id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public RowTypeParameter rowType(RowtypeDataLink rowType) {
    this.rowType = rowType;
    return this;
  }

   /**
   * Get rowType
   * @return rowType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROW_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RowtypeDataLink getRowType() {
    return rowType;
  }


  @JsonProperty(JSON_PROPERTY_ROW_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRowType(RowtypeDataLink rowType) {
    this.rowType = rowType;
  }


  public RowTypeParameter entity(EntityDataLink entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntity(EntityDataLink entity) {
    this.entity = entity;
  }


  public RowTypeParameter expenditureForReceipts(String expenditureForReceipts) {
    this.expenditureForReceipts = expenditureForReceipts;
    return this;
  }

   /**
   * Expenditure for receipts
   * @return expenditureForReceipts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPENDITURE_FOR_RECEIPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpenditureForReceipts() {
    return expenditureForReceipts;
  }


  @JsonProperty(JSON_PROPERTY_EXPENDITURE_FOR_RECEIPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpenditureForReceipts(String expenditureForReceipts) {
    this.expenditureForReceipts = expenditureForReceipts;
  }


  public RowTypeParameter expenditureForDebits(String expenditureForDebits) {
    this.expenditureForDebits = expenditureForDebits;
    return this;
  }

   /**
   * Expenditure for debits
   * @return expenditureForDebits
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPENDITURE_FOR_DEBITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpenditureForDebits() {
    return expenditureForDebits;
  }


  @JsonProperty(JSON_PROPERTY_EXPENDITURE_FOR_DEBITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpenditureForDebits(String expenditureForDebits) {
    this.expenditureForDebits = expenditureForDebits;
  }


  public RowTypeParameter revenueForReceipts(String revenueForReceipts) {
    this.revenueForReceipts = revenueForReceipts;
    return this;
  }

   /**
   * Revenue for receipts
   * @return revenueForReceipts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVENUE_FOR_RECEIPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRevenueForReceipts() {
    return revenueForReceipts;
  }


  @JsonProperty(JSON_PROPERTY_REVENUE_FOR_RECEIPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevenueForReceipts(String revenueForReceipts) {
    this.revenueForReceipts = revenueForReceipts;
  }


  public RowTypeParameter revenueForDebits(String revenueForDebits) {
    this.revenueForDebits = revenueForDebits;
    return this;
  }

   /**
   * Revenue for debits
   * @return revenueForDebits
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVENUE_FOR_DEBITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRevenueForDebits() {
    return revenueForDebits;
  }


  @JsonProperty(JSON_PROPERTY_REVENUE_FOR_DEBITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevenueForDebits(String revenueForDebits) {
    this.revenueForDebits = revenueForDebits;
  }


  public RowTypeParameter analyticalSection(String analyticalSection) {
    this.analyticalSection = analyticalSection;
    return this;
  }

   /**
   * Analytical section
   * @return analyticalSection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANALYTICAL_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnalyticalSection() {
    return analyticalSection;
  }


  @JsonProperty(JSON_PROPERTY_ANALYTICAL_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnalyticalSection(String analyticalSection) {
    this.analyticalSection = analyticalSection;
  }


  public RowTypeParameter analyticalSection2(String analyticalSection2) {
    this.analyticalSection2 = analyticalSection2;
    return this;
  }

   /**
   * 2nd analytical section
   * @return analyticalSection2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANALYTICAL_SECTION2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnalyticalSection2() {
    return analyticalSection2;
  }


  @JsonProperty(JSON_PROPERTY_ANALYTICAL_SECTION2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnalyticalSection2(String analyticalSection2) {
    this.analyticalSection2 = analyticalSection2;
  }


  public RowTypeParameter vatSystem(VatSystemEnum vatSystem) {
    this.vatSystem = vatSystem;
    return this;
  }

   /**
   * Vat system. Empty : use the one of the entity, 1 : Receipts, 2 : Debits
   * @return vatSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VatSystemEnum getVatSystem() {
    return vatSystem;
  }


  @JsonProperty(JSON_PROPERTY_VAT_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatSystem(VatSystemEnum vatSystem) {
    this.vatSystem = vatSystem;
  }


  public RowTypeParameter defaultExpenditureAmount(Double defaultExpenditureAmount) {
    this.defaultExpenditureAmount = defaultExpenditureAmount;
    return this;
  }

   /**
   * Default expenditure amount
   * @return defaultExpenditureAmount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_EXPENDITURE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getDefaultExpenditureAmount() {
    return defaultExpenditureAmount;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_EXPENDITURE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultExpenditureAmount(Double defaultExpenditureAmount) {
    this.defaultExpenditureAmount = defaultExpenditureAmount;
  }


  public RowTypeParameter warrantyPeriod(Integer warrantyPeriod) {
    this.warrantyPeriod = warrantyPeriod;
    return this;
  }

   /**
   * Warranty period in months
   * @return warrantyPeriod
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WARRANTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWarrantyPeriod() {
    return warrantyPeriod;
  }


  @JsonProperty(JSON_PROPERTY_WARRANTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarrantyPeriod(Integer warrantyPeriod) {
    this.warrantyPeriod = warrantyPeriod;
  }


  public RowTypeParameter baseUsedForSubscription(BaseUsedForSubscriptionEnum baseUsedForSubscription) {
    this.baseUsedForSubscription = baseUsedForSubscription;
    return this;
  }

   /**
   * Base used for subscription. 0 : Receipts, 1 : Debits
   * @return baseUsedForSubscription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BASE_USED_FOR_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BaseUsedForSubscriptionEnum getBaseUsedForSubscription() {
    return baseUsedForSubscription;
  }


  @JsonProperty(JSON_PROPERTY_BASE_USED_FOR_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBaseUsedForSubscription(BaseUsedForSubscriptionEnum baseUsedForSubscription) {
    this.baseUsedForSubscription = baseUsedForSubscription;
  }


  public RowTypeParameter annualSubscriptionRate(Double annualSubscriptionRate) {
    this.annualSubscriptionRate = annualSubscriptionRate;
    return this;
  }

   /**
   * Annual subscription rate
   * @return annualSubscriptionRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNUAL_SUBSCRIPTION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAnnualSubscriptionRate() {
    return annualSubscriptionRate;
  }


  @JsonProperty(JSON_PROPERTY_ANNUAL_SUBSCRIPTION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnualSubscriptionRate(Double annualSubscriptionRate) {
    this.annualSubscriptionRate = annualSubscriptionRate;
  }


  public RowTypeParameter defaultDurationSubscription(Integer defaultDurationSubscription) {
    this.defaultDurationSubscription = defaultDurationSubscription;
    return this;
  }

   /**
   * Default duration of subscription in months
   * @return defaultDurationSubscription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_DURATION_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDefaultDurationSubscription() {
    return defaultDurationSubscription;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_DURATION_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultDurationSubscription(Integer defaultDurationSubscription) {
    this.defaultDurationSubscription = defaultDurationSubscription;
  }


  public RowTypeParameter revisionIndex(Long revisionIndex) {
    this.revisionIndex = revisionIndex;
    return this;
  }

   /**
   * Revision index
   * @return revisionIndex
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVISION_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRevisionIndex() {
    return revisionIndex;
  }


  @JsonProperty(JSON_PROPERTY_REVISION_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevisionIndex(Long revisionIndex) {
    this.revisionIndex = revisionIndex;
  }


  public RowTypeParameter revisionIndex2(Long revisionIndex2) {
    this.revisionIndex2 = revisionIndex2;
    return this;
  }

   /**
   * 2nd revision index
   * @return revisionIndex2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVISION_INDEX2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRevisionIndex2() {
    return revisionIndex2;
  }


  @JsonProperty(JSON_PROPERTY_REVISION_INDEX2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevisionIndex2(Long revisionIndex2) {
    this.revisionIndex2 = revisionIndex2;
  }


  public RowTypeParameter profileForTimeRowGeneration(ProfileDataLink profileForTimeRowGeneration) {
    this.profileForTimeRowGeneration = profileForTimeRowGeneration;
    return this;
  }

   /**
   * Get profileForTimeRowGeneration
   * @return profileForTimeRowGeneration
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFILE_FOR_TIME_ROW_GENERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProfileDataLink getProfileForTimeRowGeneration() {
    return profileForTimeRowGeneration;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE_FOR_TIME_ROW_GENERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfileForTimeRowGeneration(ProfileDataLink profileForTimeRowGeneration) {
    this.profileForTimeRowGeneration = profileForTimeRowGeneration;
  }


  public RowTypeParameter anticipatedOrder(AnticipatedOrderEnum anticipatedOrder) {
    this.anticipatedOrder = anticipatedOrder;
    return this;
  }

   /**
   * Anticipated order. 0 : No, 5 : Yes, 10 : Yes on same type of row
   * @return anticipatedOrder
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTICIPATED_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AnticipatedOrderEnum getAnticipatedOrder() {
    return anticipatedOrder;
  }


  @JsonProperty(JSON_PROPERTY_ANTICIPATED_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnticipatedOrder(AnticipatedOrderEnum anticipatedOrder) {
    this.anticipatedOrder = anticipatedOrder;
  }


  public RowTypeParameter expenseInputMode(ExpenseInputModeEnum expenseInputMode) {
    this.expenseInputMode = expenseInputMode;
    return this;
  }

   /**
   * Expense input mode. 0 : Quantity x amount, 1 : Quantity + total, 2 : Total
   * @return expenseInputMode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPENSE_INPUT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseInputModeEnum getExpenseInputMode() {
    return expenseInputMode;
  }


  @JsonProperty(JSON_PROPERTY_EXPENSE_INPUT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpenseInputMode(ExpenseInputModeEnum expenseInputMode) {
    this.expenseInputMode = expenseInputMode;
  }


  public RowTypeParameter vatInputModeForExpenses(VatInputModeForExpensesEnum vatInputModeForExpenses) {
    this.vatInputModeForExpenses = vatInputModeForExpenses;
    return this;
  }

   /**
   * VAT input mode for expenses. 0 : Assisted free entry mode, 1 : Non-assisted free entry mode, 2 : Assisted free mandatory entry mode, 3 : Non-assisted free mandatory entry mode, 10 : Auto fill
   * @return vatInputModeForExpenses
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_INPUT_MODE_FOR_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VatInputModeForExpensesEnum getVatInputModeForExpenses() {
    return vatInputModeForExpenses;
  }


  @JsonProperty(JSON_PROPERTY_VAT_INPUT_MODE_FOR_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatInputModeForExpenses(VatInputModeForExpensesEnum vatInputModeForExpenses) {
    this.vatInputModeForExpenses = vatInputModeForExpenses;
  }


  public RowTypeParameter vatManagementModeForExpenses(VatManagementModeForExpensesEnum vatManagementModeForExpenses) {
    this.vatManagementModeForExpenses = vatManagementModeForExpenses;
    return this;
  }

   /**
   * VAT management mode for expenses. 0 : Recoverable VAT, 1 : Recoverable VAT, except for re-invoicing, 10 : Non-recoverable VAT
   * @return vatManagementModeForExpenses
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_MANAGEMENT_MODE_FOR_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VatManagementModeForExpensesEnum getVatManagementModeForExpenses() {
    return vatManagementModeForExpenses;
  }


  @JsonProperty(JSON_PROPERTY_VAT_MANAGEMENT_MODE_FOR_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatManagementModeForExpenses(VatManagementModeForExpensesEnum vatManagementModeForExpenses) {
    this.vatManagementModeForExpenses = vatManagementModeForExpenses;
  }


  public RowTypeParameter vatForExpenses(Long vatForExpenses) {
    this.vatForExpenses = vatForExpenses;
    return this;
  }

   /**
   * VAT for expenses
   * @return vatForExpenses
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_FOR_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getVatForExpenses() {
    return vatForExpenses;
  }


  @JsonProperty(JSON_PROPERTY_VAT_FOR_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatForExpenses(Long vatForExpenses) {
    this.vatForExpenses = vatForExpenses;
  }


  public RowTypeParameter recoverableVatRate(Double recoverableVatRate) {
    this.recoverableVatRate = recoverableVatRate;
    return this;
  }

   /**
   * Recoverable VAT rate
   * @return recoverableVatRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECOVERABLE_VAT_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getRecoverableVatRate() {
    return recoverableVatRate;
  }


  @JsonProperty(JSON_PROPERTY_RECOVERABLE_VAT_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecoverableVatRate(Double recoverableVatRate) {
    this.recoverableVatRate = recoverableVatRate;
  }


  public RowTypeParameter vat2ForExpenses(Long vat2ForExpenses) {
    this.vat2ForExpenses = vat2ForExpenses;
    return this;
  }

   /**
   * 2nd VAT for expenses
   * @return vat2ForExpenses
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT2_FOR_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getVat2ForExpenses() {
    return vat2ForExpenses;
  }


  @JsonProperty(JSON_PROPERTY_VAT2_FOR_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVat2ForExpenses(Long vat2ForExpenses) {
    this.vat2ForExpenses = vat2ForExpenses;
  }


  public RowTypeParameter recoverableVatRate2(Double recoverableVatRate2) {
    this.recoverableVatRate2 = recoverableVatRate2;
    return this;
  }

   /**
   * 2nd recoverable VAT rate
   * @return recoverableVatRate2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECOVERABLE_VAT_RATE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getRecoverableVatRate2() {
    return recoverableVatRate2;
  }


  @JsonProperty(JSON_PROPERTY_RECOVERABLE_VAT_RATE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecoverableVatRate2(Double recoverableVatRate2) {
    this.recoverableVatRate2 = recoverableVatRate2;
  }


  public RowTypeParameter vat3ForExpenses(Long vat3ForExpenses) {
    this.vat3ForExpenses = vat3ForExpenses;
    return this;
  }

   /**
   * 3rd VAT for expenses
   * @return vat3ForExpenses
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT3_FOR_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getVat3ForExpenses() {
    return vat3ForExpenses;
  }


  @JsonProperty(JSON_PROPERTY_VAT3_FOR_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVat3ForExpenses(Long vat3ForExpenses) {
    this.vat3ForExpenses = vat3ForExpenses;
  }


  public RowTypeParameter recoverableVatRate3(Double recoverableVatRate3) {
    this.recoverableVatRate3 = recoverableVatRate3;
    return this;
  }

   /**
   * 3rd recoverable VAT rate
   * @return recoverableVatRate3
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECOVERABLE_VAT_RATE3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getRecoverableVatRate3() {
    return recoverableVatRate3;
  }


  @JsonProperty(JSON_PROPERTY_RECOVERABLE_VAT_RATE3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecoverableVatRate3(Double recoverableVatRate3) {
    this.recoverableVatRate3 = recoverableVatRate3;
  }


  public RowTypeParameter invitationsLuncheonVouchers(InvitationsLuncheonVouchersEnum invitationsLuncheonVouchers) {
    this.invitationsLuncheonVouchers = invitationsLuncheonVouchers;
    return this;
  }

   /**
   * Invitation luncheon vouchers. 0 : No, 1 : Invitation, 2 : Luncheon voucher invitation
   * @return invitationsLuncheonVouchers
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVITATIONS_LUNCHEON_VOUCHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvitationsLuncheonVouchersEnum getInvitationsLuncheonVouchers() {
    return invitationsLuncheonVouchers;
  }


  @JsonProperty(JSON_PROPERTY_INVITATIONS_LUNCHEON_VOUCHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvitationsLuncheonVouchers(InvitationsLuncheonVouchersEnum invitationsLuncheonVouchers) {
    this.invitationsLuncheonVouchers = invitationsLuncheonVouchers;
  }


  public RowTypeParameter expenseCeiling(Double expenseCeiling) {
    this.expenseCeiling = expenseCeiling;
    return this;
  }

   /**
   * Expense ceiling
   * @return expenseCeiling
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPENSE_CEILING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getExpenseCeiling() {
    return expenseCeiling;
  }


  @JsonProperty(JSON_PROPERTY_EXPENSE_CEILING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpenseCeiling(Double expenseCeiling) {
    this.expenseCeiling = expenseCeiling;
  }


  public RowTypeParameter mandatoryDocument(MandatoryDocumentEnum mandatoryDocument) {
    this.mandatoryDocument = mandatoryDocument;
    return this;
  }

   /**
   * Is a document mandatory ? 0 : No, 1 : Yes
   * @return mandatoryDocument
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANDATORY_DOCUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MandatoryDocumentEnum getMandatoryDocument() {
    return mandatoryDocument;
  }


  @JsonProperty(JSON_PROPERTY_MANDATORY_DOCUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMandatoryDocument(MandatoryDocumentEnum mandatoryDocument) {
    this.mandatoryDocument = mandatoryDocument;
  }


  public RowTypeParameter visibility(VisibilityEnum visibility) {
    this.visibility = visibility;
    return this;
  }

   /**
   * Indicates the visibility of the row type parameter. 0 : Active, 10 : Inactive
   * @return visibility
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


  public RowTypeParameter extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public RowTypeParameter addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the row type parameter. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this row-type-parameter object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RowTypeParameter rowTypeParameter = (RowTypeParameter) o;
    return Objects.equals(this.id, rowTypeParameter.id) &&
        Objects.equals(this.rowType, rowTypeParameter.rowType) &&
        Objects.equals(this.entity, rowTypeParameter.entity) &&
        Objects.equals(this.expenditureForReceipts, rowTypeParameter.expenditureForReceipts) &&
        Objects.equals(this.expenditureForDebits, rowTypeParameter.expenditureForDebits) &&
        Objects.equals(this.revenueForReceipts, rowTypeParameter.revenueForReceipts) &&
        Objects.equals(this.revenueForDebits, rowTypeParameter.revenueForDebits) &&
        Objects.equals(this.analyticalSection, rowTypeParameter.analyticalSection) &&
        Objects.equals(this.analyticalSection2, rowTypeParameter.analyticalSection2) &&
        Objects.equals(this.vatSystem, rowTypeParameter.vatSystem) &&
        Objects.equals(this.defaultExpenditureAmount, rowTypeParameter.defaultExpenditureAmount) &&
        Objects.equals(this.warrantyPeriod, rowTypeParameter.warrantyPeriod) &&
        Objects.equals(this.baseUsedForSubscription, rowTypeParameter.baseUsedForSubscription) &&
        Objects.equals(this.annualSubscriptionRate, rowTypeParameter.annualSubscriptionRate) &&
        Objects.equals(this.defaultDurationSubscription, rowTypeParameter.defaultDurationSubscription) &&
        Objects.equals(this.revisionIndex, rowTypeParameter.revisionIndex) &&
        Objects.equals(this.revisionIndex2, rowTypeParameter.revisionIndex2) &&
        Objects.equals(this.profileForTimeRowGeneration, rowTypeParameter.profileForTimeRowGeneration) &&
        Objects.equals(this.anticipatedOrder, rowTypeParameter.anticipatedOrder) &&
        Objects.equals(this.expenseInputMode, rowTypeParameter.expenseInputMode) &&
        Objects.equals(this.vatInputModeForExpenses, rowTypeParameter.vatInputModeForExpenses) &&
        Objects.equals(this.vatManagementModeForExpenses, rowTypeParameter.vatManagementModeForExpenses) &&
        Objects.equals(this.vatForExpenses, rowTypeParameter.vatForExpenses) &&
        Objects.equals(this.recoverableVatRate, rowTypeParameter.recoverableVatRate) &&
        Objects.equals(this.vat2ForExpenses, rowTypeParameter.vat2ForExpenses) &&
        Objects.equals(this.recoverableVatRate2, rowTypeParameter.recoverableVatRate2) &&
        Objects.equals(this.vat3ForExpenses, rowTypeParameter.vat3ForExpenses) &&
        Objects.equals(this.recoverableVatRate3, rowTypeParameter.recoverableVatRate3) &&
        Objects.equals(this.invitationsLuncheonVouchers, rowTypeParameter.invitationsLuncheonVouchers) &&
        Objects.equals(this.expenseCeiling, rowTypeParameter.expenseCeiling) &&
        Objects.equals(this.mandatoryDocument, rowTypeParameter.mandatoryDocument) &&
        Objects.equals(this.visibility, rowTypeParameter.visibility) &&
        Objects.equals(this.extraData, rowTypeParameter.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, rowType, entity, expenditureForReceipts, expenditureForDebits, revenueForReceipts, revenueForDebits, analyticalSection, analyticalSection2, vatSystem, defaultExpenditureAmount, warrantyPeriod, baseUsedForSubscription, annualSubscriptionRate, defaultDurationSubscription, revisionIndex, revisionIndex2, profileForTimeRowGeneration, anticipatedOrder, expenseInputMode, vatInputModeForExpenses, vatManagementModeForExpenses, vatForExpenses, recoverableVatRate, vat2ForExpenses, recoverableVatRate2, vat3ForExpenses, recoverableVatRate3, invitationsLuncheonVouchers, expenseCeiling, mandatoryDocument, visibility, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RowTypeParameter {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    rowType: ").append(toIndentedString(rowType)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    expenditureForReceipts: ").append(toIndentedString(expenditureForReceipts)).append("\n");
    sb.append("    expenditureForDebits: ").append(toIndentedString(expenditureForDebits)).append("\n");
    sb.append("    revenueForReceipts: ").append(toIndentedString(revenueForReceipts)).append("\n");
    sb.append("    revenueForDebits: ").append(toIndentedString(revenueForDebits)).append("\n");
    sb.append("    analyticalSection: ").append(toIndentedString(analyticalSection)).append("\n");
    sb.append("    analyticalSection2: ").append(toIndentedString(analyticalSection2)).append("\n");
    sb.append("    vatSystem: ").append(toIndentedString(vatSystem)).append("\n");
    sb.append("    defaultExpenditureAmount: ").append(toIndentedString(defaultExpenditureAmount)).append("\n");
    sb.append("    warrantyPeriod: ").append(toIndentedString(warrantyPeriod)).append("\n");
    sb.append("    baseUsedForSubscription: ").append(toIndentedString(baseUsedForSubscription)).append("\n");
    sb.append("    annualSubscriptionRate: ").append(toIndentedString(annualSubscriptionRate)).append("\n");
    sb.append("    defaultDurationSubscription: ").append(toIndentedString(defaultDurationSubscription)).append("\n");
    sb.append("    revisionIndex: ").append(toIndentedString(revisionIndex)).append("\n");
    sb.append("    revisionIndex2: ").append(toIndentedString(revisionIndex2)).append("\n");
    sb.append("    profileForTimeRowGeneration: ").append(toIndentedString(profileForTimeRowGeneration)).append("\n");
    sb.append("    anticipatedOrder: ").append(toIndentedString(anticipatedOrder)).append("\n");
    sb.append("    expenseInputMode: ").append(toIndentedString(expenseInputMode)).append("\n");
    sb.append("    vatInputModeForExpenses: ").append(toIndentedString(vatInputModeForExpenses)).append("\n");
    sb.append("    vatManagementModeForExpenses: ").append(toIndentedString(vatManagementModeForExpenses)).append("\n");
    sb.append("    vatForExpenses: ").append(toIndentedString(vatForExpenses)).append("\n");
    sb.append("    recoverableVatRate: ").append(toIndentedString(recoverableVatRate)).append("\n");
    sb.append("    vat2ForExpenses: ").append(toIndentedString(vat2ForExpenses)).append("\n");
    sb.append("    recoverableVatRate2: ").append(toIndentedString(recoverableVatRate2)).append("\n");
    sb.append("    vat3ForExpenses: ").append(toIndentedString(vat3ForExpenses)).append("\n");
    sb.append("    recoverableVatRate3: ").append(toIndentedString(recoverableVatRate3)).append("\n");
    sb.append("    invitationsLuncheonVouchers: ").append(toIndentedString(invitationsLuncheonVouchers)).append("\n");
    sb.append("    expenseCeiling: ").append(toIndentedString(expenseCeiling)).append("\n");
    sb.append("    mandatoryDocument: ").append(toIndentedString(mandatoryDocument)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

