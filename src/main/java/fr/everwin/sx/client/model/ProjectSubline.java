/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ProjectSubline
 */
@JsonPropertyOrder({
  ProjectSubline.JSON_PROPERTY_ID,
  ProjectSubline.JSON_PROPERTY_LABEL,
  ProjectSubline.JSON_PROPERTY_PROJECT_LINE,
  ProjectSubline.JSON_PROPERTY_RESOURCE,
  ProjectSubline.JSON_PROPERTY_INITIAL_START_DATE,
  ProjectSubline.JSON_PROPERTY_INITIAL_END_DATE,
  ProjectSubline.JSON_PROPERTY_UPDATED_START_DATE,
  ProjectSubline.JSON_PROPERTY_UPDATED_END_DATE,
  ProjectSubline.JSON_PROPERTY_ACTUAL_START_DATE,
  ProjectSubline.JSON_PROPERTY_ACTUAL_END_DATE,
  ProjectSubline.JSON_PROPERTY_EXPECTED_TOTAL,
  ProjectSubline.JSON_PROPERTY_INITIAL_TOTAL,
  ProjectSubline.JSON_PROPERTY_UPDATED_TOTAL,
  ProjectSubline.JSON_PROPERTY_STATUS,
  ProjectSubline.JSON_PROPERTY_TYPE,
  ProjectSubline.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("project-subline")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class ProjectSubline {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_PROJECT_LINE = "projectLine";
  private ProjectLineDataLink projectLine;

  public static final String JSON_PROPERTY_RESOURCE = "resource";
  private EmployeeDataLink resource;

  public static final String JSON_PROPERTY_INITIAL_START_DATE = "initialStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialStartDate;

  public static final String JSON_PROPERTY_INITIAL_END_DATE = "initialEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialEndDate;

  public static final String JSON_PROPERTY_UPDATED_START_DATE = "updatedStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedStartDate;

  public static final String JSON_PROPERTY_UPDATED_END_DATE = "updatedEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedEndDate;

  public static final String JSON_PROPERTY_ACTUAL_START_DATE = "actualStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime actualStartDate;

  public static final String JSON_PROPERTY_ACTUAL_END_DATE = "actualEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime actualEndDate;

  public static final String JSON_PROPERTY_EXPECTED_TOTAL = "expectedTotal";
  private Double expectedTotal;

  public static final String JSON_PROPERTY_INITIAL_TOTAL = "initialTotal";
  private Double initialTotal;

  public static final String JSON_PROPERTY_UPDATED_TOTAL = "updatedTotal";
  private Double updatedTotal;

  /**
   * Status of the project subline
   */
  public enum StatusEnum {
    NUMBER_0(0),
    
    NUMBER_5(5),
    
    NUMBER_10(10);

    private Integer value;

    StatusEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(Integer value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  /**
   * Type of the project subline
   */
  public enum TypeEnum {
    NUMBER_0(0),
    
    NUMBER_5(5);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(Integer value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public ProjectSubline() { 
  }

  public ProjectSubline id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public ProjectSubline label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label of the project subline
   * @return label
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public ProjectSubline projectLine(ProjectLineDataLink projectLine) {
    this.projectLine = projectLine;
    return this;
  }

   /**
   * Get projectLine
   * @return projectLine
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProjectLineDataLink getProjectLine() {
    return projectLine;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectLine(ProjectLineDataLink projectLine) {
    this.projectLine = projectLine;
  }


  public ProjectSubline resource(EmployeeDataLink resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EmployeeDataLink getResource() {
    return resource;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResource(EmployeeDataLink resource) {
    this.resource = resource;
  }


  public ProjectSubline initialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
    return this;
  }

   /**
   * Initial start date
   * @return initialStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialStartDate() {
    return initialStartDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
  }


  public ProjectSubline initialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
    return this;
  }

   /**
   * Initial end date
   * @return initialEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialEndDate() {
    return initialEndDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
  }


  public ProjectSubline updatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
    return this;
  }

   /**
   * Updated start date
   * @return updatedStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedStartDate() {
    return updatedStartDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
  }


  public ProjectSubline updatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
    return this;
  }

   /**
   * Updated end date
   * @return updatedEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedEndDate() {
    return updatedEndDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
  }


  public ProjectSubline actualStartDate(java.time.LocalDateTime actualStartDate) {
    this.actualStartDate = actualStartDate;
    return this;
  }

   /**
   * Actual start date
   * @return actualStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getActualStartDate() {
    return actualStartDate;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActualStartDate(java.time.LocalDateTime actualStartDate) {
    this.actualStartDate = actualStartDate;
  }


  public ProjectSubline actualEndDate(java.time.LocalDateTime actualEndDate) {
    this.actualEndDate = actualEndDate;
    return this;
  }

   /**
   * Actual end date
   * @return actualEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getActualEndDate() {
    return actualEndDate;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActualEndDate(java.time.LocalDateTime actualEndDate) {
    this.actualEndDate = actualEndDate;
  }


  public ProjectSubline expectedTotal(Double expectedTotal) {
    this.expectedTotal = expectedTotal;
    return this;
  }

   /**
   * Expected total
   * @return expectedTotal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getExpectedTotal() {
    return expectedTotal;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedTotal(Double expectedTotal) {
    this.expectedTotal = expectedTotal;
  }


  public ProjectSubline initialTotal(Double initialTotal) {
    this.initialTotal = initialTotal;
    return this;
  }

   /**
   * Initial total
   * @return initialTotal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getInitialTotal() {
    return initialTotal;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialTotal(Double initialTotal) {
    this.initialTotal = initialTotal;
  }


  public ProjectSubline updatedTotal(Double updatedTotal) {
    this.updatedTotal = updatedTotal;
    return this;
  }

   /**
   * Updated total
   * @return updatedTotal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getUpdatedTotal() {
    return updatedTotal;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedTotal(Double updatedTotal) {
    this.updatedTotal = updatedTotal;
  }


  public ProjectSubline status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the project subline
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ProjectSubline type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the project subline
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ProjectSubline extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public ProjectSubline addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the subline. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this project-subline object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectSubline projectSubline = (ProjectSubline) o;
    return Objects.equals(this.id, projectSubline.id) &&
        Objects.equals(this.label, projectSubline.label) &&
        Objects.equals(this.projectLine, projectSubline.projectLine) &&
        Objects.equals(this.resource, projectSubline.resource) &&
        Objects.equals(this.initialStartDate, projectSubline.initialStartDate) &&
        Objects.equals(this.initialEndDate, projectSubline.initialEndDate) &&
        Objects.equals(this.updatedStartDate, projectSubline.updatedStartDate) &&
        Objects.equals(this.updatedEndDate, projectSubline.updatedEndDate) &&
        Objects.equals(this.actualStartDate, projectSubline.actualStartDate) &&
        Objects.equals(this.actualEndDate, projectSubline.actualEndDate) &&
        Objects.equals(this.expectedTotal, projectSubline.expectedTotal) &&
        Objects.equals(this.initialTotal, projectSubline.initialTotal) &&
        Objects.equals(this.updatedTotal, projectSubline.updatedTotal) &&
        Objects.equals(this.status, projectSubline.status) &&
        Objects.equals(this.type, projectSubline.type) &&
        Objects.equals(this.extraData, projectSubline.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, label, projectLine, resource, initialStartDate, initialEndDate, updatedStartDate, updatedEndDate, actualStartDate, actualEndDate, expectedTotal, initialTotal, updatedTotal, status, type, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectSubline {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    projectLine: ").append(toIndentedString(projectLine)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    initialStartDate: ").append(toIndentedString(initialStartDate)).append("\n");
    sb.append("    initialEndDate: ").append(toIndentedString(initialEndDate)).append("\n");
    sb.append("    updatedStartDate: ").append(toIndentedString(updatedStartDate)).append("\n");
    sb.append("    updatedEndDate: ").append(toIndentedString(updatedEndDate)).append("\n");
    sb.append("    actualStartDate: ").append(toIndentedString(actualStartDate)).append("\n");
    sb.append("    actualEndDate: ").append(toIndentedString(actualEndDate)).append("\n");
    sb.append("    expectedTotal: ").append(toIndentedString(expectedTotal)).append("\n");
    sb.append("    initialTotal: ").append(toIndentedString(initialTotal)).append("\n");
    sb.append("    updatedTotal: ").append(toIndentedString(updatedTotal)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

