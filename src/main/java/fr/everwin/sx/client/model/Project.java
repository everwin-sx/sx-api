/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Project
 */
@JsonPropertyOrder({
  Project.JSON_PROPERTY_ID,
  Project.JSON_PROPERTY_CODE,
  Project.JSON_PROPERTY_LABEL,
  Project.JSON_PROPERTY_TYPE,
  Project.JSON_PROPERTY_CUSTOMER,
  Project.JSON_PROPERTY_MAIN_CONTACT,
  Project.JSON_PROPERTY_ENTITY,
  Project.JSON_PROPERTY_FINANCIAL_ENTITY,
  Project.JSON_PROPERTY_PROJECT_DIRECTOR,
  Project.JSON_PROPERTY_PROJECT_MANAGER,
  Project.JSON_PROPERTY_OPPORTUNITY_MANAGER,
  Project.JSON_PROPERTY_ADMINISTRATOR,
  Project.JSON_PROPERTY_CATEGORY,
  Project.JSON_PROPERTY_SUB_CATEGORY,
  Project.JSON_PROPERTY_PRODUCTION_STATUS,
  Project.JSON_PROPERTY_INVOICING_MODE,
  Project.JSON_PROPERTY_EXPENSE_MANAGEMENT_MODE,
  Project.JSON_PROPERTY_PAYMENT_TERMS,
  Project.JSON_PROPERTY_SITE,
  Project.JSON_PROPERTY_OPERATION,
  Project.JSON_PROPERTY_MAIN_PROJECT,
  Project.JSON_PROPERTY_BANK,
  Project.JSON_PROPERTY_ANALYTICAL_CODE,
  Project.JSON_PROPERTY_INITIAL_START_DATE,
  Project.JSON_PROPERTY_INITIAL_END_DATE,
  Project.JSON_PROPERTY_UPDATED_START_DATE,
  Project.JSON_PROPERTY_UPDATED_END_DATE,
  Project.JSON_PROPERTY_REAL_START_DATE,
  Project.JSON_PROPERTY_REAL_END_DATE,
  Project.JSON_PROPERTY_DURATION_UNIT,
  Project.JSON_PROPERTY_SECONDARY_CONTACTS,
  Project.JSON_PROPERTY_PROVIDED_BY,
  Project.JSON_PROPERTY_DESCRIPTION,
  Project.JSON_PROPERTY_COMMENT,
  Project.JSON_PROPERTY_UPDATED_BY,
  Project.JSON_PROPERTY_UPDATED_ON_TIME,
  Project.JSON_PROPERTY_CREATED_ON_TIME,
  Project.JSON_PROPERTY_MANAGEMENT_CURRENCY,
  Project.JSON_PROPERTY_ACCOUNT_CURRENCY,
  Project.JSON_PROPERTY_REPORTING_CURRENCY,
  Project.JSON_PROPERTY_PLANNING_MODE,
  Project.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("project")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class Project {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_TYPE = "type";
  private Integer type;

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private CompanyDataLink customer;

  public static final String JSON_PROPERTY_MAIN_CONTACT = "mainContact";
  private ContactResponsibilityDataLink mainContact;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private EntityDataLink entity;

  public static final String JSON_PROPERTY_FINANCIAL_ENTITY = "financialEntity";
  private EntityDataLink financialEntity;

  public static final String JSON_PROPERTY_PROJECT_DIRECTOR = "projectDirector";
  private EmployeeDataLink projectDirector;

  public static final String JSON_PROPERTY_PROJECT_MANAGER = "projectManager";
  private EmployeeDataLink projectManager;

  public static final String JSON_PROPERTY_OPPORTUNITY_MANAGER = "opportunityManager";
  private EmployeeDataLink opportunityManager;

  public static final String JSON_PROPERTY_ADMINISTRATOR = "administrator";
  private EmployeeDataLink administrator;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private ProjectCategoryDataLink category;

  public static final String JSON_PROPERTY_SUB_CATEGORY = "subCategory";
  private ProjectSubCategoryDataLink subCategory;

  public static final String JSON_PROPERTY_PRODUCTION_STATUS = "productionStatus";
  private Integer productionStatus;

  public static final String JSON_PROPERTY_INVOICING_MODE = "invoicingMode";
  private Integer invoicingMode;

  public static final String JSON_PROPERTY_EXPENSE_MANAGEMENT_MODE = "expenseManagementMode";
  private Integer expenseManagementMode;

  public static final String JSON_PROPERTY_PAYMENT_TERMS = "paymentTerms";
  private DataLink paymentTerms;

  public static final String JSON_PROPERTY_SITE = "site";
  private DataLink site;

  public static final String JSON_PROPERTY_OPERATION = "operation";
  private DataLink operation;

  public static final String JSON_PROPERTY_MAIN_PROJECT = "mainProject";
  private ProjectDataLink mainProject;

  public static final String JSON_PROPERTY_BANK = "bank";
  private DataLink bank;

  public static final String JSON_PROPERTY_ANALYTICAL_CODE = "analyticalCode";
  private String analyticalCode;

  public static final String JSON_PROPERTY_INITIAL_START_DATE = "initialStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialStartDate;

  public static final String JSON_PROPERTY_INITIAL_END_DATE = "initialEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialEndDate;

  public static final String JSON_PROPERTY_UPDATED_START_DATE = "updatedStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedStartDate;

  public static final String JSON_PROPERTY_UPDATED_END_DATE = "updatedEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedEndDate;

  public static final String JSON_PROPERTY_REAL_START_DATE = "realStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime realStartDate;

  public static final String JSON_PROPERTY_REAL_END_DATE = "realEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime realEndDate;

  public static final String JSON_PROPERTY_DURATION_UNIT = "durationUnit";
  private Integer durationUnit;

  public static final String JSON_PROPERTY_SECONDARY_CONTACTS = "secondaryContacts";
  private List<ContactResponsibilityDataLink> secondaryContacts;

  public static final String JSON_PROPERTY_PROVIDED_BY = "providedBy";
  private CompanyDataLink providedBy;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_MANAGEMENT_CURRENCY = "managementCurrency";
  private String managementCurrency;

  public static final String JSON_PROPERTY_ACCOUNT_CURRENCY = "accountCurrency";
  private String accountCurrency;

  public static final String JSON_PROPERTY_REPORTING_CURRENCY = "reportingCurrency";
  private String reportingCurrency;

  public static final String JSON_PROPERTY_PLANNING_MODE = "planningMode";
  private Integer planningMode;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Project() { 
  }

  public Project id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Project code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the project
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Project label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Mandatory label of the project
   * @return label
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLabel(String label) {
    this.label = label;
  }


  public Project type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Mandatory type of the project
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(Integer type) {
    this.type = type;
  }


  public Project customer(CompanyDataLink customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CompanyDataLink getCustomer() {
    return customer;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomer(CompanyDataLink customer) {
    this.customer = customer;
  }


  public Project mainContact(ContactResponsibilityDataLink mainContact) {
    this.mainContact = mainContact;
    return this;
  }

   /**
   * Get mainContact
   * @return mainContact
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContactResponsibilityDataLink getMainContact() {
    return mainContact;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainContact(ContactResponsibilityDataLink mainContact) {
    this.mainContact = mainContact;
  }


  public Project entity(EntityDataLink entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EntityDataLink getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntity(EntityDataLink entity) {
    this.entity = entity;
  }


  public Project financialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
    return this;
  }

   /**
   * Get financialEntity
   * @return financialEntity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getFinancialEntity() {
    return financialEntity;
  }


  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinancialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
  }


  public Project projectDirector(EmployeeDataLink projectDirector) {
    this.projectDirector = projectDirector;
    return this;
  }

   /**
   * Get projectDirector
   * @return projectDirector
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_DIRECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getProjectDirector() {
    return projectDirector;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_DIRECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectDirector(EmployeeDataLink projectDirector) {
    this.projectDirector = projectDirector;
  }


  public Project projectManager(EmployeeDataLink projectManager) {
    this.projectManager = projectManager;
    return this;
  }

   /**
   * Get projectManager
   * @return projectManager
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getProjectManager() {
    return projectManager;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectManager(EmployeeDataLink projectManager) {
    this.projectManager = projectManager;
  }


  public Project opportunityManager(EmployeeDataLink opportunityManager) {
    this.opportunityManager = opportunityManager;
    return this;
  }

   /**
   * Get opportunityManager
   * @return opportunityManager
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPPORTUNITY_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getOpportunityManager() {
    return opportunityManager;
  }


  @JsonProperty(JSON_PROPERTY_OPPORTUNITY_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpportunityManager(EmployeeDataLink opportunityManager) {
    this.opportunityManager = opportunityManager;
  }


  public Project administrator(EmployeeDataLink administrator) {
    this.administrator = administrator;
    return this;
  }

   /**
   * Get administrator
   * @return administrator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getAdministrator() {
    return administrator;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrator(EmployeeDataLink administrator) {
    this.administrator = administrator;
  }


  public Project category(ProjectCategoryDataLink category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectCategoryDataLink getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(ProjectCategoryDataLink category) {
    this.category = category;
  }


  public Project subCategory(ProjectSubCategoryDataLink subCategory) {
    this.subCategory = subCategory;
    return this;
  }

   /**
   * Get subCategory
   * @return subCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectSubCategoryDataLink getSubCategory() {
    return subCategory;
  }


  @JsonProperty(JSON_PROPERTY_SUB_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubCategory(ProjectSubCategoryDataLink subCategory) {
    this.subCategory = subCategory;
  }


  public Project productionStatus(Integer productionStatus) {
    this.productionStatus = productionStatus;
    return this;
  }

   /**
   * Production status of the project
   * @return productionStatus
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRODUCTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getProductionStatus() {
    return productionStatus;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductionStatus(Integer productionStatus) {
    this.productionStatus = productionStatus;
  }


  public Project invoicingMode(Integer invoicingMode) {
    this.invoicingMode = invoicingMode;
    return this;
  }

   /**
   * Invoicing mode of the opportunity. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Projects-InvoicingModes\&quot;);&#39;&gt;Projects Invoicing Modes&lt;/a&gt; in System data section
   * @return invoicingMode
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INVOICING_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getInvoicingMode() {
    return invoicingMode;
  }


  @JsonProperty(JSON_PROPERTY_INVOICING_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInvoicingMode(Integer invoicingMode) {
    this.invoicingMode = invoicingMode;
  }


  public Project expenseManagementMode(Integer expenseManagementMode) {
    this.expenseManagementMode = expenseManagementMode;
    return this;
  }

   /**
   * Expense management mode of the project. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Projects-ExpenseManagementModes\&quot;);&#39;&gt;Projects Invoicing Modes&lt;/a&gt; in System data section
   * @return expenseManagementMode
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPENSE_MANAGEMENT_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getExpenseManagementMode() {
    return expenseManagementMode;
  }


  @JsonProperty(JSON_PROPERTY_EXPENSE_MANAGEMENT_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpenseManagementMode(Integer expenseManagementMode) {
    this.expenseManagementMode = expenseManagementMode;
  }


  public Project paymentTerms(DataLink paymentTerms) {
    this.paymentTerms = paymentTerms;
    return this;
  }

   /**
   * Get paymentTerms
   * @return paymentTerms
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getPaymentTerms() {
    return paymentTerms;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentTerms(DataLink paymentTerms) {
    this.paymentTerms = paymentTerms;
  }


  public Project site(DataLink site) {
    this.site = site;
    return this;
  }

   /**
   * Get site
   * @return site
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getSite() {
    return site;
  }


  @JsonProperty(JSON_PROPERTY_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSite(DataLink site) {
    this.site = site;
  }


  public Project operation(DataLink operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getOperation() {
    return operation;
  }


  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperation(DataLink operation) {
    this.operation = operation;
  }


  public Project mainProject(ProjectDataLink mainProject) {
    this.mainProject = mainProject;
    return this;
  }

   /**
   * Get mainProject
   * @return mainProject
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectDataLink getMainProject() {
    return mainProject;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainProject(ProjectDataLink mainProject) {
    this.mainProject = mainProject;
  }


  public Project bank(DataLink bank) {
    this.bank = bank;
    return this;
  }

   /**
   * Get bank
   * @return bank
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getBank() {
    return bank;
  }


  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBank(DataLink bank) {
    this.bank = bank;
  }


  public Project analyticalCode(String analyticalCode) {
    this.analyticalCode = analyticalCode;
    return this;
  }

   /**
   * Analytical code of the project
   * @return analyticalCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANALYTICAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnalyticalCode() {
    return analyticalCode;
  }


  @JsonProperty(JSON_PROPERTY_ANALYTICAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnalyticalCode(String analyticalCode) {
    this.analyticalCode = analyticalCode;
  }


  public Project initialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
    return this;
  }

   /**
   * Initial start date of the project
   * @return initialStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialStartDate() {
    return initialStartDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
  }


  public Project initialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
    return this;
  }

   /**
   * Initial end date of the project
   * @return initialEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialEndDate() {
    return initialEndDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
  }


  public Project updatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
    return this;
  }

   /**
   * Updated start date of the project
   * @return updatedStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedStartDate() {
    return updatedStartDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
  }


  public Project updatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
    return this;
  }

   /**
   * Updated end date of the project
   * @return updatedEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedEndDate() {
    return updatedEndDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
  }


  public Project realStartDate(java.time.LocalDateTime realStartDate) {
    this.realStartDate = realStartDate;
    return this;
  }

   /**
   * Real start date of the project
   * @return realStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getRealStartDate() {
    return realStartDate;
  }


  @JsonProperty(JSON_PROPERTY_REAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealStartDate(java.time.LocalDateTime realStartDate) {
    this.realStartDate = realStartDate;
  }


  public Project realEndDate(java.time.LocalDateTime realEndDate) {
    this.realEndDate = realEndDate;
    return this;
  }

   /**
   * Real end date of the project
   * @return realEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getRealEndDate() {
    return realEndDate;
  }


  @JsonProperty(JSON_PROPERTY_REAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealEndDate(java.time.LocalDateTime realEndDate) {
    this.realEndDate = realEndDate;
  }


  public Project durationUnit(Integer durationUnit) {
    this.durationUnit = durationUnit;
    return this;
  }

   /**
   * Unit of duration of the project. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Projects-DurationUnits\&quot;);&#39;&gt;Duration Units&lt;/a&gt; in System data section
   * @return durationUnit
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DURATION_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDurationUnit() {
    return durationUnit;
  }


  @JsonProperty(JSON_PROPERTY_DURATION_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDurationUnit(Integer durationUnit) {
    this.durationUnit = durationUnit;
  }


  public Project secondaryContacts(List<ContactResponsibilityDataLink> secondaryContacts) {
    this.secondaryContacts = secondaryContacts;
    return this;
  }

  public Project addSecondaryContactsItem(ContactResponsibilityDataLink secondaryContactsItem) {
    if (this.secondaryContacts == null) {
      this.secondaryContacts = new ArrayList<>();
    }
    this.secondaryContacts.add(secondaryContactsItem);
    return this;
  }

   /**
   * Link to the secondary contacts of the project
   * @return secondaryContacts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ContactResponsibilityDataLink> getSecondaryContacts() {
    return secondaryContacts;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryContacts(List<ContactResponsibilityDataLink> secondaryContacts) {
    this.secondaryContacts = secondaryContacts;
  }


  public Project providedBy(CompanyDataLink providedBy) {
    this.providedBy = providedBy;
    return this;
  }

   /**
   * Get providedBy
   * @return providedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROVIDED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyDataLink getProvidedBy() {
    return providedBy;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvidedBy(CompanyDataLink providedBy) {
    this.providedBy = providedBy;
  }


  public Project description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the project
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Project comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment of the project
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public Project updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Login of the user doing the last update on the project
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public Project updatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
    return this;
  }

   /**
   * Date &amp; time of the last update of the contact
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
  }


  public Project createdOnTime(java.time.LocalDateTime createdOnTime) {
    this.createdOnTime = createdOnTime;
    return this;
  }

   /**
   * Date &amp; time of creation of the contact
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedOnTime(java.time.LocalDateTime createdOnTime) {
    this.createdOnTime = createdOnTime;
  }


  public Project managementCurrency(String managementCurrency) {
    this.managementCurrency = managementCurrency;
    return this;
  }

   /**
   * Management currency (ISO code)
   * @return managementCurrency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManagementCurrency() {
    return managementCurrency;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementCurrency(String managementCurrency) {
    this.managementCurrency = managementCurrency;
  }


  public Project accountCurrency(String accountCurrency) {
    this.accountCurrency = accountCurrency;
    return this;
  }

   /**
   * Account currency (ISO code)
   * @return accountCurrency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountCurrency() {
    return accountCurrency;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountCurrency(String accountCurrency) {
    this.accountCurrency = accountCurrency;
  }


  public Project reportingCurrency(String reportingCurrency) {
    this.reportingCurrency = reportingCurrency;
    return this;
  }

   /**
   * Reporting currency (ISO code)
   * @return reportingCurrency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORTING_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportingCurrency() {
    return reportingCurrency;
  }


  @JsonProperty(JSON_PROPERTY_REPORTING_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportingCurrency(String reportingCurrency) {
    this.reportingCurrency = reportingCurrency;
  }


  public Project planningMode(Integer planningMode) {
    this.planningMode = planningMode;
    return this;
  }

   /**
   * Planning mode
   * @return planningMode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLANNING_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPlanningMode() {
    return planningMode;
  }


  @JsonProperty(JSON_PROPERTY_PLANNING_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanningMode(Integer planningMode) {
    this.planningMode = planningMode;
  }


  public Project extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Project addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the company. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this project object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Project project = (Project) o;
    return Objects.equals(this.id, project.id) &&
        Objects.equals(this.code, project.code) &&
        Objects.equals(this.label, project.label) &&
        Objects.equals(this.type, project.type) &&
        Objects.equals(this.customer, project.customer) &&
        Objects.equals(this.mainContact, project.mainContact) &&
        Objects.equals(this.entity, project.entity) &&
        Objects.equals(this.financialEntity, project.financialEntity) &&
        Objects.equals(this.projectDirector, project.projectDirector) &&
        Objects.equals(this.projectManager, project.projectManager) &&
        Objects.equals(this.opportunityManager, project.opportunityManager) &&
        Objects.equals(this.administrator, project.administrator) &&
        Objects.equals(this.category, project.category) &&
        Objects.equals(this.subCategory, project.subCategory) &&
        Objects.equals(this.productionStatus, project.productionStatus) &&
        Objects.equals(this.invoicingMode, project.invoicingMode) &&
        Objects.equals(this.expenseManagementMode, project.expenseManagementMode) &&
        Objects.equals(this.paymentTerms, project.paymentTerms) &&
        Objects.equals(this.site, project.site) &&
        Objects.equals(this.operation, project.operation) &&
        Objects.equals(this.mainProject, project.mainProject) &&
        Objects.equals(this.bank, project.bank) &&
        Objects.equals(this.analyticalCode, project.analyticalCode) &&
        Objects.equals(this.initialStartDate, project.initialStartDate) &&
        Objects.equals(this.initialEndDate, project.initialEndDate) &&
        Objects.equals(this.updatedStartDate, project.updatedStartDate) &&
        Objects.equals(this.updatedEndDate, project.updatedEndDate) &&
        Objects.equals(this.realStartDate, project.realStartDate) &&
        Objects.equals(this.realEndDate, project.realEndDate) &&
        Objects.equals(this.durationUnit, project.durationUnit) &&
        Objects.equals(this.secondaryContacts, project.secondaryContacts) &&
        Objects.equals(this.providedBy, project.providedBy) &&
        Objects.equals(this.description, project.description) &&
        Objects.equals(this.comment, project.comment) &&
        Objects.equals(this.updatedBy, project.updatedBy) &&
        Objects.equals(this.updatedOnTime, project.updatedOnTime) &&
        Objects.equals(this.createdOnTime, project.createdOnTime) &&
        Objects.equals(this.managementCurrency, project.managementCurrency) &&
        Objects.equals(this.accountCurrency, project.accountCurrency) &&
        Objects.equals(this.reportingCurrency, project.reportingCurrency) &&
        Objects.equals(this.planningMode, project.planningMode) &&
        Objects.equals(this.extraData, project.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, label, type, customer, mainContact, entity, financialEntity, projectDirector, projectManager, opportunityManager, administrator, category, subCategory, productionStatus, invoicingMode, expenseManagementMode, paymentTerms, site, operation, mainProject, bank, analyticalCode, initialStartDate, initialEndDate, updatedStartDate, updatedEndDate, realStartDate, realEndDate, durationUnit, secondaryContacts, providedBy, description, comment, updatedBy, updatedOnTime, createdOnTime, managementCurrency, accountCurrency, reportingCurrency, planningMode, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Project {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    mainContact: ").append(toIndentedString(mainContact)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    financialEntity: ").append(toIndentedString(financialEntity)).append("\n");
    sb.append("    projectDirector: ").append(toIndentedString(projectDirector)).append("\n");
    sb.append("    projectManager: ").append(toIndentedString(projectManager)).append("\n");
    sb.append("    opportunityManager: ").append(toIndentedString(opportunityManager)).append("\n");
    sb.append("    administrator: ").append(toIndentedString(administrator)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    subCategory: ").append(toIndentedString(subCategory)).append("\n");
    sb.append("    productionStatus: ").append(toIndentedString(productionStatus)).append("\n");
    sb.append("    invoicingMode: ").append(toIndentedString(invoicingMode)).append("\n");
    sb.append("    expenseManagementMode: ").append(toIndentedString(expenseManagementMode)).append("\n");
    sb.append("    paymentTerms: ").append(toIndentedString(paymentTerms)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    mainProject: ").append(toIndentedString(mainProject)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("    analyticalCode: ").append(toIndentedString(analyticalCode)).append("\n");
    sb.append("    initialStartDate: ").append(toIndentedString(initialStartDate)).append("\n");
    sb.append("    initialEndDate: ").append(toIndentedString(initialEndDate)).append("\n");
    sb.append("    updatedStartDate: ").append(toIndentedString(updatedStartDate)).append("\n");
    sb.append("    updatedEndDate: ").append(toIndentedString(updatedEndDate)).append("\n");
    sb.append("    realStartDate: ").append(toIndentedString(realStartDate)).append("\n");
    sb.append("    realEndDate: ").append(toIndentedString(realEndDate)).append("\n");
    sb.append("    durationUnit: ").append(toIndentedString(durationUnit)).append("\n");
    sb.append("    secondaryContacts: ").append(toIndentedString(secondaryContacts)).append("\n");
    sb.append("    providedBy: ").append(toIndentedString(providedBy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    managementCurrency: ").append(toIndentedString(managementCurrency)).append("\n");
    sb.append("    accountCurrency: ").append(toIndentedString(accountCurrency)).append("\n");
    sb.append("    reportingCurrency: ").append(toIndentedString(reportingCurrency)).append("\n");
    sb.append("    planningMode: ").append(toIndentedString(planningMode)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

