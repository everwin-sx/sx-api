/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;


/**
 * ProjectLineInvoicing
 */
@JsonPropertyOrder({
  ProjectLineInvoicing.JSON_PROPERTY_OUTSTANDING_QUANTITY,
  ProjectLineInvoicing.JSON_PROPERTY_QUANTITY_TO_INVOICE,
  ProjectLineInvoicing.JSON_PROPERTY_TIME_TO_INVOICE_DETAILS,
  ProjectLineInvoicing.JSON_PROPERTY_BONUS_MALUS_QUANTITY,
  ProjectLineInvoicing.JSON_PROPERTY_OUTSTANDING_TOTAL,
  ProjectLineInvoicing.JSON_PROPERTY_PURCHASE_EXPENSE_TO_INVOICE_DETAILS,
  ProjectLineInvoicing.JSON_PROPERTY_TOTAL_TO_INVOICE,
  ProjectLineInvoicing.JSON_PROPERTY_PROFORMA,
  ProjectLineInvoicing.JSON_PROPERTY_INVOICED,
  ProjectLineInvoicing.JSON_PROPERTY_BONUS_MALUS_TOTAL,
  ProjectLineInvoicing.JSON_PROPERTY_TO_INVOICE_UNIT,
  ProjectLineInvoicing.JSON_PROPERTY_PREINVOICED,
  ProjectLineInvoicing.JSON_PROPERTY_PROJECT_LINE
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class ProjectLineInvoicing {
  public static final String JSON_PROPERTY_OUTSTANDING_QUANTITY = "outstandingQuantity";
  private ProjectLineInvoicing outstandingQuantity;

  public static final String JSON_PROPERTY_QUANTITY_TO_INVOICE = "quantityToInvoice";
  private ProjectLineInvoicing quantityToInvoice;

  public static final String JSON_PROPERTY_TIME_TO_INVOICE_DETAILS = "timeToInvoiceDetails";
  private ProjectLineInvoicing timeToInvoiceDetails;

  public static final String JSON_PROPERTY_BONUS_MALUS_QUANTITY = "bonusMalusQuantity";
  private ProjectLineInvoicing bonusMalusQuantity;

  public static final String JSON_PROPERTY_OUTSTANDING_TOTAL = "outstandingTotal";
  private ProjectLineInvoicing outstandingTotal;

  public static final String JSON_PROPERTY_PURCHASE_EXPENSE_TO_INVOICE_DETAILS = "purchaseExpenseToInvoiceDetails";
  private ProjectLineInvoicing purchaseExpenseToInvoiceDetails;

  public static final String JSON_PROPERTY_TOTAL_TO_INVOICE = "totalToInvoice";
  private ProjectLineInvoicing totalToInvoice;

  public static final String JSON_PROPERTY_PROFORMA = "proforma";
  private ProjectLineInvoicing proforma;

  public static final String JSON_PROPERTY_INVOICED = "invoiced";
  private ProjectLineInvoicing invoiced;

  public static final String JSON_PROPERTY_BONUS_MALUS_TOTAL = "bonusMalusTotal";
  private ProjectLineInvoicing bonusMalusTotal;

  public static final String JSON_PROPERTY_TO_INVOICE_UNIT = "toInvoiceUnit";
  private ProjectLineInvoicing toInvoiceUnit;

  public static final String JSON_PROPERTY_PREINVOICED = "preinvoiced";
  private ProjectLineInvoicing preinvoiced;

  public static final String JSON_PROPERTY_PROJECT_LINE = "projectLine";
  private ProjectLineInvoicing projectLine;

  public ProjectLineInvoicing() { 
  }

  public ProjectLineInvoicing outstandingQuantity(ProjectLineInvoicing outstandingQuantity) {
    this.outstandingQuantity = outstandingQuantity;
    return this;
  }

   /**
   * Get outstandingQuantity
   * @return outstandingQuantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTSTANDING_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getOutstandingQuantity() {
    return outstandingQuantity;
  }


  @JsonProperty(JSON_PROPERTY_OUTSTANDING_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutstandingQuantity(ProjectLineInvoicing outstandingQuantity) {
    this.outstandingQuantity = outstandingQuantity;
  }


  public ProjectLineInvoicing quantityToInvoice(ProjectLineInvoicing quantityToInvoice) {
    this.quantityToInvoice = quantityToInvoice;
    return this;
  }

   /**
   * Get quantityToInvoice
   * @return quantityToInvoice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY_TO_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getQuantityToInvoice() {
    return quantityToInvoice;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY_TO_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantityToInvoice(ProjectLineInvoicing quantityToInvoice) {
    this.quantityToInvoice = quantityToInvoice;
  }


  public ProjectLineInvoicing timeToInvoiceDetails(ProjectLineInvoicing timeToInvoiceDetails) {
    this.timeToInvoiceDetails = timeToInvoiceDetails;
    return this;
  }

   /**
   * Get timeToInvoiceDetails
   * @return timeToInvoiceDetails
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_TO_INVOICE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getTimeToInvoiceDetails() {
    return timeToInvoiceDetails;
  }


  @JsonProperty(JSON_PROPERTY_TIME_TO_INVOICE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeToInvoiceDetails(ProjectLineInvoicing timeToInvoiceDetails) {
    this.timeToInvoiceDetails = timeToInvoiceDetails;
  }


  public ProjectLineInvoicing bonusMalusQuantity(ProjectLineInvoicing bonusMalusQuantity) {
    this.bonusMalusQuantity = bonusMalusQuantity;
    return this;
  }

   /**
   * Get bonusMalusQuantity
   * @return bonusMalusQuantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BONUS_MALUS_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getBonusMalusQuantity() {
    return bonusMalusQuantity;
  }


  @JsonProperty(JSON_PROPERTY_BONUS_MALUS_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBonusMalusQuantity(ProjectLineInvoicing bonusMalusQuantity) {
    this.bonusMalusQuantity = bonusMalusQuantity;
  }


  public ProjectLineInvoicing outstandingTotal(ProjectLineInvoicing outstandingTotal) {
    this.outstandingTotal = outstandingTotal;
    return this;
  }

   /**
   * Get outstandingTotal
   * @return outstandingTotal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTSTANDING_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getOutstandingTotal() {
    return outstandingTotal;
  }


  @JsonProperty(JSON_PROPERTY_OUTSTANDING_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutstandingTotal(ProjectLineInvoicing outstandingTotal) {
    this.outstandingTotal = outstandingTotal;
  }


  public ProjectLineInvoicing purchaseExpenseToInvoiceDetails(ProjectLineInvoicing purchaseExpenseToInvoiceDetails) {
    this.purchaseExpenseToInvoiceDetails = purchaseExpenseToInvoiceDetails;
    return this;
  }

   /**
   * Get purchaseExpenseToInvoiceDetails
   * @return purchaseExpenseToInvoiceDetails
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_EXPENSE_TO_INVOICE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getPurchaseExpenseToInvoiceDetails() {
    return purchaseExpenseToInvoiceDetails;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_EXPENSE_TO_INVOICE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseExpenseToInvoiceDetails(ProjectLineInvoicing purchaseExpenseToInvoiceDetails) {
    this.purchaseExpenseToInvoiceDetails = purchaseExpenseToInvoiceDetails;
  }


  public ProjectLineInvoicing totalToInvoice(ProjectLineInvoicing totalToInvoice) {
    this.totalToInvoice = totalToInvoice;
    return this;
  }

   /**
   * Get totalToInvoice
   * @return totalToInvoice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_TO_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getTotalToInvoice() {
    return totalToInvoice;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_TO_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalToInvoice(ProjectLineInvoicing totalToInvoice) {
    this.totalToInvoice = totalToInvoice;
  }


  public ProjectLineInvoicing proforma(ProjectLineInvoicing proforma) {
    this.proforma = proforma;
    return this;
  }

   /**
   * Get proforma
   * @return proforma
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFORMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getProforma() {
    return proforma;
  }


  @JsonProperty(JSON_PROPERTY_PROFORMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProforma(ProjectLineInvoicing proforma) {
    this.proforma = proforma;
  }


  public ProjectLineInvoicing invoiced(ProjectLineInvoicing invoiced) {
    this.invoiced = invoiced;
    return this;
  }

   /**
   * Get invoiced
   * @return invoiced
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getInvoiced() {
    return invoiced;
  }


  @JsonProperty(JSON_PROPERTY_INVOICED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiced(ProjectLineInvoicing invoiced) {
    this.invoiced = invoiced;
  }


  public ProjectLineInvoicing bonusMalusTotal(ProjectLineInvoicing bonusMalusTotal) {
    this.bonusMalusTotal = bonusMalusTotal;
    return this;
  }

   /**
   * Get bonusMalusTotal
   * @return bonusMalusTotal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BONUS_MALUS_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getBonusMalusTotal() {
    return bonusMalusTotal;
  }


  @JsonProperty(JSON_PROPERTY_BONUS_MALUS_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBonusMalusTotal(ProjectLineInvoicing bonusMalusTotal) {
    this.bonusMalusTotal = bonusMalusTotal;
  }


  public ProjectLineInvoicing toInvoiceUnit(ProjectLineInvoicing toInvoiceUnit) {
    this.toInvoiceUnit = toInvoiceUnit;
    return this;
  }

   /**
   * Get toInvoiceUnit
   * @return toInvoiceUnit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_INVOICE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getToInvoiceUnit() {
    return toInvoiceUnit;
  }


  @JsonProperty(JSON_PROPERTY_TO_INVOICE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToInvoiceUnit(ProjectLineInvoicing toInvoiceUnit) {
    this.toInvoiceUnit = toInvoiceUnit;
  }


  public ProjectLineInvoicing preinvoiced(ProjectLineInvoicing preinvoiced) {
    this.preinvoiced = preinvoiced;
    return this;
  }

   /**
   * Get preinvoiced
   * @return preinvoiced
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREINVOICED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getPreinvoiced() {
    return preinvoiced;
  }


  @JsonProperty(JSON_PROPERTY_PREINVOICED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreinvoiced(ProjectLineInvoicing preinvoiced) {
    this.preinvoiced = preinvoiced;
  }


  public ProjectLineInvoicing projectLine(ProjectLineInvoicing projectLine) {
    this.projectLine = projectLine;
    return this;
  }

   /**
   * Get projectLine
   * @return projectLine
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineInvoicing getProjectLine() {
    return projectLine;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectLine(ProjectLineInvoicing projectLine) {
    this.projectLine = projectLine;
  }


  /**
   * Return true if this ProjectLineInvoicing object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectLineInvoicing projectLineInvoicing = (ProjectLineInvoicing) o;
    return Objects.equals(this.outstandingQuantity, projectLineInvoicing.outstandingQuantity) &&
        Objects.equals(this.quantityToInvoice, projectLineInvoicing.quantityToInvoice) &&
        Objects.equals(this.timeToInvoiceDetails, projectLineInvoicing.timeToInvoiceDetails) &&
        Objects.equals(this.bonusMalusQuantity, projectLineInvoicing.bonusMalusQuantity) &&
        Objects.equals(this.outstandingTotal, projectLineInvoicing.outstandingTotal) &&
        Objects.equals(this.purchaseExpenseToInvoiceDetails, projectLineInvoicing.purchaseExpenseToInvoiceDetails) &&
        Objects.equals(this.totalToInvoice, projectLineInvoicing.totalToInvoice) &&
        Objects.equals(this.proforma, projectLineInvoicing.proforma) &&
        Objects.equals(this.invoiced, projectLineInvoicing.invoiced) &&
        Objects.equals(this.bonusMalusTotal, projectLineInvoicing.bonusMalusTotal) &&
        Objects.equals(this.toInvoiceUnit, projectLineInvoicing.toInvoiceUnit) &&
        Objects.equals(this.preinvoiced, projectLineInvoicing.preinvoiced) &&
        Objects.equals(this.projectLine, projectLineInvoicing.projectLine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outstandingQuantity, quantityToInvoice, timeToInvoiceDetails, bonusMalusQuantity, outstandingTotal, purchaseExpenseToInvoiceDetails, totalToInvoice, proforma, invoiced, bonusMalusTotal, toInvoiceUnit, preinvoiced, projectLine);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectLineInvoicing {\n");
    sb.append("    outstandingQuantity: ").append(toIndentedString(outstandingQuantity)).append("\n");
    sb.append("    quantityToInvoice: ").append(toIndentedString(quantityToInvoice)).append("\n");
    sb.append("    timeToInvoiceDetails: ").append(toIndentedString(timeToInvoiceDetails)).append("\n");
    sb.append("    bonusMalusQuantity: ").append(toIndentedString(bonusMalusQuantity)).append("\n");
    sb.append("    outstandingTotal: ").append(toIndentedString(outstandingTotal)).append("\n");
    sb.append("    purchaseExpenseToInvoiceDetails: ").append(toIndentedString(purchaseExpenseToInvoiceDetails)).append("\n");
    sb.append("    totalToInvoice: ").append(toIndentedString(totalToInvoice)).append("\n");
    sb.append("    proforma: ").append(toIndentedString(proforma)).append("\n");
    sb.append("    invoiced: ").append(toIndentedString(invoiced)).append("\n");
    sb.append("    bonusMalusTotal: ").append(toIndentedString(bonusMalusTotal)).append("\n");
    sb.append("    toInvoiceUnit: ").append(toIndentedString(toInvoiceUnit)).append("\n");
    sb.append("    preinvoiced: ").append(toIndentedString(preinvoiced)).append("\n");
    sb.append("    projectLine: ").append(toIndentedString(projectLine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

