/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.ContactResponsibilityDataLink;
import fr.everwin.sx.client.model.CountryDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * Person
 */
@JsonPropertyOrder({
  Person.JSON_PROPERTY_ID,
  Person.JSON_PROPERTY_CODE,
  Person.JSON_PROPERTY_CIVILITY,
  Person.JSON_PROPERTY_FIRST_NAME,
  Person.JSON_PROPERTY_LAST_NAME,
  Person.JSON_PROPERTY_BIRTH_NAME,
  Person.JSON_PROPERTY_BIRTH_DATE_OF_THE_CONTACT,
  Person.JSON_PROPERTY_BIRTH_CITY,
  Person.JSON_PROPERTY_PHONE,
  Person.JSON_PROPERTY_MOBILE,
  Person.JSON_PROPERTY_EMAIL,
  Person.JSON_PROPERTY_ADDRESS,
  Person.JSON_PROPERTY_ADDRESS2,
  Person.JSON_PROPERTY_ADDRESS3,
  Person.JSON_PROPERTY_POSTAL_CODE,
  Person.JSON_PROPERTY_CITY,
  Person.JSON_PROPERTY_COUNTRY,
  Person.JSON_PROPERTY_MAIN_RESPONSIBILITY,
  Person.JSON_PROPERTY_UPDATED_ON_TIME,
  Person.JSON_PROPERTY_CREATED_ON_TIME,
  Person.JSON_PROPERTY_UPDATED_BY,
  Person.JSON_PROPERTY_PICTURE,
  Person.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("person")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Person {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  /**
   * Civility of the contact.
   */
  public enum CivilityEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    CivilityEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CivilityEnum fromValue(Integer value) {
      for (CivilityEnum b : CivilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CIVILITY = "civility";
  private CivilityEnum civility;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_BIRTH_NAME = "birthName";
  private String birthName;

  public static final String JSON_PROPERTY_BIRTH_DATE_OF_THE_CONTACT = "Birth date of the contact";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime birthDateOfTheContact;

  public static final String JSON_PROPERTY_BIRTH_CITY = "birthCity";
  private String birthCity;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private String phone;

  public static final String JSON_PROPERTY_MOBILE = "mobile";
  private String mobile;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private String address;

  public static final String JSON_PROPERTY_ADDRESS2 = "address2";
  private String address2;

  public static final String JSON_PROPERTY_ADDRESS3 = "address3";
  private String address3;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private CountryDataLink country;

  public static final String JSON_PROPERTY_MAIN_RESPONSIBILITY = "mainResponsibility";
  private ContactResponsibilityDataLink mainResponsibility;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_PICTURE = "picture";
  private String picture;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Person() { 
  }

  public Person id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Person code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the contact
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Person civility(CivilityEnum civility) {
    this.civility = civility;
    return this;
  }

   /**
   * Civility of the contact.
   * @return civility
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CIVILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CivilityEnum getCivility() {
    return civility;
  }


  @JsonProperty(JSON_PROPERTY_CIVILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCivility(CivilityEnum civility) {
    this.civility = civility;
  }


  public Person firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name of the contact
   * @return firstName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public Person lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name of the contact
   * @return lastName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public Person birthName(String birthName) {
    this.birthName = birthName;
    return this;
  }

   /**
   * Birth name of the contact
   * @return birthName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTH_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBirthName() {
    return birthName;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthName(String birthName) {
    this.birthName = birthName;
  }


  public Person birthDateOfTheContact(java.time.LocalDateTime birthDateOfTheContact) {
    this.birthDateOfTheContact = birthDateOfTheContact;
    return this;
  }

   /**
   * Get birthDateOfTheContact
   * @return birthDateOfTheContact
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTH_DATE_OF_THE_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getBirthDateOfTheContact() {
    return birthDateOfTheContact;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_DATE_OF_THE_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthDateOfTheContact(java.time.LocalDateTime birthDateOfTheContact) {
    this.birthDateOfTheContact = birthDateOfTheContact;
  }


  public Person birthCity(String birthCity) {
    this.birthCity = birthCity;
    return this;
  }

   /**
   * City of birth of the contact
   * @return birthCity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTH_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBirthCity() {
    return birthCity;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthCity(String birthCity) {
    this.birthCity = birthCity;
  }


  public Person phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Direct phone number of the contact
   * @return phone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(String phone) {
    this.phone = phone;
  }


  public Person mobile(String mobile) {
    this.mobile = mobile;
    return this;
  }

   /**
   * Mobile phone number of the contact
   * @return mobile
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOBILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMobile() {
    return mobile;
  }


  @JsonProperty(JSON_PROPERTY_MOBILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMobile(String mobile) {
    this.mobile = mobile;
  }


  public Person email(String email) {
    this.email = email;
    return this;
  }

   /**
   * E-mail of the contact
   * @return email
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public Person address(String address) {
    this.address = address;
    return this;
  }

   /**
   * First address line of the contact (only if different from company adress)
   * @return address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(String address) {
    this.address = address;
  }


  public Person address2(String address2) {
    this.address2 = address2;
    return this;
  }

   /**
   * Second address line
   * @return address2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress2() {
    return address2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress2(String address2) {
    this.address2 = address2;
  }


  public Person address3(String address3) {
    this.address3 = address3;
    return this;
  }

   /**
   * Third adress line
   * @return address3
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress3() {
    return address3;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress3(String address3) {
    this.address3 = address3;
  }


  public Person postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal code of the contact
   * @return postalCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public Person city(String city) {
    this.city = city;
    return this;
  }

   /**
   * City of the contact
   * @return city
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public Person country(CountryDataLink country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CountryDataLink getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(CountryDataLink country) {
    this.country = country;
  }


  public Person mainResponsibility(ContactResponsibilityDataLink mainResponsibility) {
    this.mainResponsibility = mainResponsibility;
    return this;
  }

   /**
   * Get mainResponsibility
   * @return mainResponsibility
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_RESPONSIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContactResponsibilityDataLink getMainResponsibility() {
    return mainResponsibility;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_RESPONSIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainResponsibility(ContactResponsibilityDataLink mainResponsibility) {
    this.mainResponsibility = mainResponsibility;
  }


  public Person updatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
    return this;
  }

   /**
   * Date &amp; time of the last update of the contact
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
  }


  public Person createdOnTime(java.time.LocalDateTime createdOnTime) {
    this.createdOnTime = createdOnTime;
    return this;
  }

   /**
   * Date &amp; time of creation of the contact
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedOnTime(java.time.LocalDateTime createdOnTime) {
    this.createdOnTime = createdOnTime;
  }


  public Person updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Login of the user doing the last update on the contact
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public Person picture(String picture) {
    this.picture = picture;
    return this;
  }

   /**
   * Picture of the contact (Base64 without line feed)
   * @return picture
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PICTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPicture() {
    return picture;
  }


  @JsonProperty(JSON_PROPERTY_PICTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPicture(String picture) {
    this.picture = picture;
  }


  public Person extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Person addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the contact. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this person object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Person person = (Person) o;
    return Objects.equals(this.id, person.id) &&
        Objects.equals(this.code, person.code) &&
        Objects.equals(this.civility, person.civility) &&
        Objects.equals(this.firstName, person.firstName) &&
        Objects.equals(this.lastName, person.lastName) &&
        Objects.equals(this.birthName, person.birthName) &&
        Objects.equals(this.birthDateOfTheContact, person.birthDateOfTheContact) &&
        Objects.equals(this.birthCity, person.birthCity) &&
        Objects.equals(this.phone, person.phone) &&
        Objects.equals(this.mobile, person.mobile) &&
        Objects.equals(this.email, person.email) &&
        Objects.equals(this.address, person.address) &&
        Objects.equals(this.address2, person.address2) &&
        Objects.equals(this.address3, person.address3) &&
        Objects.equals(this.postalCode, person.postalCode) &&
        Objects.equals(this.city, person.city) &&
        Objects.equals(this.country, person.country) &&
        Objects.equals(this.mainResponsibility, person.mainResponsibility) &&
        Objects.equals(this.updatedOnTime, person.updatedOnTime) &&
        Objects.equals(this.createdOnTime, person.createdOnTime) &&
        Objects.equals(this.updatedBy, person.updatedBy) &&
        Objects.equals(this.picture, person.picture) &&
        Objects.equals(this.extraData, person.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, civility, firstName, lastName, birthName, birthDateOfTheContact, birthCity, phone, mobile, email, address, address2, address3, postalCode, city, country, mainResponsibility, updatedOnTime, createdOnTime, updatedBy, picture, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Person {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    civility: ").append(toIndentedString(civility)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    birthName: ").append(toIndentedString(birthName)).append("\n");
    sb.append("    birthDateOfTheContact: ").append(toIndentedString(birthDateOfTheContact)).append("\n");
    sb.append("    birthCity: ").append(toIndentedString(birthCity)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    address3: ").append(toIndentedString(address3)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    mainResponsibility: ").append(toIndentedString(mainResponsibility)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

