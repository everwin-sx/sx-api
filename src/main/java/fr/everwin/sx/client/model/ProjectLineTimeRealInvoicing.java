/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;


/**
 * ProjectLineTimeRealInvoicing
 */
@JsonPropertyOrder({
  ProjectLineTimeRealInvoicing.JSON_PROPERTY_EMPLOYEE,
  ProjectLineTimeRealInvoicing.JSON_PROPERTY_QUANTITY,
  ProjectLineTimeRealInvoicing.JSON_PROPERTY_BONUS_MALUS
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class ProjectLineTimeRealInvoicing {
  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private EmployeeDataLink employee;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Double quantity;

  public static final String JSON_PROPERTY_BONUS_MALUS = "bonusMalus";
  private Double bonusMalus;

  public ProjectLineTimeRealInvoicing() { 
  }

  public ProjectLineTimeRealInvoicing employee(EmployeeDataLink employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EmployeeDataLink getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmployee(EmployeeDataLink employee) {
    this.employee = employee;
  }


  public ProjectLineTimeRealInvoicing quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Invoicing quantity
   * @return quantity
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  public ProjectLineTimeRealInvoicing bonusMalus(Double bonusMalus) {
    this.bonusMalus = bonusMalus;
    return this;
  }

   /**
   * Invoicing bonus / malus
   * @return bonusMalus
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BONUS_MALUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getBonusMalus() {
    return bonusMalus;
  }


  @JsonProperty(JSON_PROPERTY_BONUS_MALUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBonusMalus(Double bonusMalus) {
    this.bonusMalus = bonusMalus;
  }


  /**
   * Return true if this ProjectLineTimeRealInvoicing object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectLineTimeRealInvoicing projectLineTimeRealInvoicing = (ProjectLineTimeRealInvoicing) o;
    return Objects.equals(this.employee, projectLineTimeRealInvoicing.employee) &&
        Objects.equals(this.quantity, projectLineTimeRealInvoicing.quantity) &&
        Objects.equals(this.bonusMalus, projectLineTimeRealInvoicing.bonusMalus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employee, quantity, bonusMalus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectLineTimeRealInvoicing {\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    bonusMalus: ").append(toIndentedString(bonusMalus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

