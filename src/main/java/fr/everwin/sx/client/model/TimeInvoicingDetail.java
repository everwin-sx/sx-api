/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.DataLink;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * TimeInvoicingDetail
 */
@JsonPropertyOrder({
  TimeInvoicingDetail.JSON_PROPERTY_EMPLOYEE,
  TimeInvoicingDetail.JSON_PROPERTY_QUANTITY,
  TimeInvoicingDetail.JSON_PROPERTY_AMOUNT,
  TimeInvoicingDetail.JSON_PROPERTY_UNIT,
  TimeInvoicingDetail.JSON_PROPERTY_OUTSTANDING_QUANTITY,
  TimeInvoicingDetail.JSON_PROPERTY_BONUS_MALUS_QUANTITY
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-21T16:37:39.682984900+02:00[Europe/Paris]")
public class TimeInvoicingDetail {
  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private DataLink employee;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Double quantity;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Double amount;

  public static final String JSON_PROPERTY_UNIT = "unit";
  private String unit;

  public static final String JSON_PROPERTY_OUTSTANDING_QUANTITY = "outstandingQuantity";
  private Double outstandingQuantity;

  public static final String JSON_PROPERTY_BONUS_MALUS_QUANTITY = "bonusMalusQuantity";
  private Double bonusMalusQuantity;

  public TimeInvoicingDetail() { 
  }

  public TimeInvoicingDetail employee(DataLink employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmployee(DataLink employee) {
    this.employee = employee;
  }


  public TimeInvoicingDetail quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity to invoice
   * @return quantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  public TimeInvoicingDetail amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Amount to invoice
   * @return amount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(Double amount) {
    this.amount = amount;
  }


  public TimeInvoicingDetail unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Unit for quantity to invoice
   * @return unit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnit(String unit) {
    this.unit = unit;
  }


  public TimeInvoicingDetail outstandingQuantity(Double outstandingQuantity) {
    this.outstandingQuantity = outstandingQuantity;
    return this;
  }

   /**
   * Oustanding quantity
   * @return outstandingQuantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTSTANDING_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getOutstandingQuantity() {
    return outstandingQuantity;
  }


  @JsonProperty(JSON_PROPERTY_OUTSTANDING_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutstandingQuantity(Double outstandingQuantity) {
    this.outstandingQuantity = outstandingQuantity;
  }


  public TimeInvoicingDetail bonusMalusQuantity(Double bonusMalusQuantity) {
    this.bonusMalusQuantity = bonusMalusQuantity;
    return this;
  }

   /**
   * Bonus/malus quantity
   * @return bonusMalusQuantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BONUS_MALUS_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getBonusMalusQuantity() {
    return bonusMalusQuantity;
  }


  @JsonProperty(JSON_PROPERTY_BONUS_MALUS_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBonusMalusQuantity(Double bonusMalusQuantity) {
    this.bonusMalusQuantity = bonusMalusQuantity;
  }


  /**
   * Return true if this TimeInvoicingDetail object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeInvoicingDetail timeInvoicingDetail = (TimeInvoicingDetail) o;
    return Objects.equals(this.employee, timeInvoicingDetail.employee) &&
        Objects.equals(this.quantity, timeInvoicingDetail.quantity) &&
        Objects.equals(this.amount, timeInvoicingDetail.amount) &&
        Objects.equals(this.unit, timeInvoicingDetail.unit) &&
        Objects.equals(this.outstandingQuantity, timeInvoicingDetail.outstandingQuantity) &&
        Objects.equals(this.bonusMalusQuantity, timeInvoicingDetail.bonusMalusQuantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employee, quantity, amount, unit, outstandingQuantity, bonusMalusQuantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeInvoicingDetail {\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    outstandingQuantity: ").append(toIndentedString(outstandingQuantity)).append("\n");
    sb.append("    bonusMalusQuantity: ").append(toIndentedString(bonusMalusQuantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

