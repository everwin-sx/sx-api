/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * ServletRegistration
 */
@JsonPropertyOrder({
  ServletRegistration.JSON_PROPERTY_MAPPINGS,
  ServletRegistration.JSON_PROPERTY_RUN_AS_ROLE,
  ServletRegistration.JSON_PROPERTY_NAME,
  ServletRegistration.JSON_PROPERTY_CLASS_NAME,
  ServletRegistration.JSON_PROPERTY_INIT_PARAMETERS
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-21T16:37:39.682984900+02:00[Europe/Paris]")
public class ServletRegistration {
  public static final String JSON_PROPERTY_MAPPINGS = "mappings";
  private List<String> mappings;

  public static final String JSON_PROPERTY_RUN_AS_ROLE = "runAsRole";
  private String runAsRole;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CLASS_NAME = "className";
  private String className;

  public static final String JSON_PROPERTY_INIT_PARAMETERS = "initParameters";
  private Map<String, String> initParameters = new HashMap<>();

  public ServletRegistration() { 
  }

  public ServletRegistration mappings(List<String> mappings) {
    this.mappings = mappings;
    return this;
  }

  public ServletRegistration addMappingsItem(String mappingsItem) {
    if (this.mappings == null) {
      this.mappings = new ArrayList<>();
    }
    this.mappings.add(mappingsItem);
    return this;
  }

   /**
   * Get mappings
   * @return mappings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getMappings() {
    return mappings;
  }


  @JsonProperty(JSON_PROPERTY_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMappings(List<String> mappings) {
    this.mappings = mappings;
  }


  public ServletRegistration runAsRole(String runAsRole) {
    this.runAsRole = runAsRole;
    return this;
  }

   /**
   * Get runAsRole
   * @return runAsRole
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RUN_AS_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRunAsRole() {
    return runAsRole;
  }


  @JsonProperty(JSON_PROPERTY_RUN_AS_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRunAsRole(String runAsRole) {
    this.runAsRole = runAsRole;
  }


  public ServletRegistration name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ServletRegistration className(String className) {
    this.className = className;
    return this;
  }

   /**
   * Get className
   * @return className
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClassName() {
    return className;
  }


  @JsonProperty(JSON_PROPERTY_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClassName(String className) {
    this.className = className;
  }


  public ServletRegistration initParameters(Map<String, String> initParameters) {
    this.initParameters = initParameters;
    return this;
  }

  public ServletRegistration putInitParametersItem(String key, String initParametersItem) {
    if (this.initParameters == null) {
      this.initParameters = new HashMap<>();
    }
    this.initParameters.put(key, initParametersItem);
    return this;
  }

   /**
   * Get initParameters
   * @return initParameters
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INIT_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getInitParameters() {
    return initParameters;
  }


  @JsonProperty(JSON_PROPERTY_INIT_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitParameters(Map<String, String> initParameters) {
    this.initParameters = initParameters;
  }


  /**
   * Return true if this ServletRegistration object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServletRegistration servletRegistration = (ServletRegistration) o;
    return Objects.equals(this.mappings, servletRegistration.mappings) &&
        Objects.equals(this.runAsRole, servletRegistration.runAsRole) &&
        Objects.equals(this.name, servletRegistration.name) &&
        Objects.equals(this.className, servletRegistration.className) &&
        Objects.equals(this.initParameters, servletRegistration.initParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mappings, runAsRole, name, className, initParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServletRegistration {\n");
    sb.append("    mappings: ").append(toIndentedString(mappings)).append("\n");
    sb.append("    runAsRole: ").append(toIndentedString(runAsRole)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    initParameters: ").append(toIndentedString(initParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

