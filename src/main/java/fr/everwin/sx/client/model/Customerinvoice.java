/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Customerinvoice
 */
@JsonPropertyOrder({
  Customerinvoice.JSON_PROPERTY_ID,
  Customerinvoice.JSON_PROPERTY_VALIDATION_STEP,
  Customerinvoice.JSON_PROPERTY_CODE,
  Customerinvoice.JSON_PROPERTY_TYPE,
  Customerinvoice.JSON_PROPERTY_ACCOUNTING_TYPE,
  Customerinvoice.JSON_PROPERTY_STATUS,
  Customerinvoice.JSON_PROPERTY_DATE,
  Customerinvoice.JSON_PROPERTY_PERIOD_DATE,
  Customerinvoice.JSON_PROPERTY_ENTITY,
  Customerinvoice.JSON_PROPERTY_FINANCIAL_ENTITY,
  Customerinvoice.JSON_PROPERTY_ACCOUNTING_ENTITY,
  Customerinvoice.JSON_PROPERTY_PROJECT,
  Customerinvoice.JSON_PROPERTY_SECONDARY_PROJECTS,
  Customerinvoice.JSON_PROPERTY_CUSTOMER,
  Customerinvoice.JSON_PROPERTY_INVOICED_CUSTOMER,
  Customerinvoice.JSON_PROPERTY_CONTACT,
  Customerinvoice.JSON_PROPERTY_SENDING_BY_EMAIL_CONTACTS,
  Customerinvoice.JSON_PROPERTY_COMPANY_ACCOUNT,
  Customerinvoice.JSON_PROPERTY_DESCRIPTION,
  Customerinvoice.JSON_PROPERTY_COMMENT,
  Customerinvoice.JSON_PROPERTY_BOTTOM_OF_PAGE,
  Customerinvoice.JSON_PROPERTY_OUR_REFERENCES,
  Customerinvoice.JSON_PROPERTY_YOUR_REFERENCES,
  Customerinvoice.JSON_PROPERTY_PAYMENT_TERMS,
  Customerinvoice.JSON_PROPERTY_DUE_DATE,
  Customerinvoice.JSON_PROPERTY_CURRENCY,
  Customerinvoice.JSON_PROPERTY_CURRENCY_RATE,
  Customerinvoice.JSON_PROPERTY_CREATOR,
  Customerinvoice.JSON_PROPERTY_GOBAL_LINE_PRINT_MODE,
  Customerinvoice.JSON_PROPERTY_GOBAL_LINE_LABEL,
  Customerinvoice.JSON_PROPERTY_GOBAL_LINE_COMMENT,
  Customerinvoice.JSON_PROPERTY_BANK,
  Customerinvoice.JSON_PROPERTY_FISCAL_POSITION,
  Customerinvoice.JSON_PROPERTY_VAT_SYSTEM,
  Customerinvoice.JSON_PROPERTY_BOOK_CODE,
  Customerinvoice.JSON_PROPERTY_CREATED_ON_TIME,
  Customerinvoice.JSON_PROPERTY_UPDATED_ON_TIME,
  Customerinvoice.JSON_PROPERTY_UPDATED_BY,
  Customerinvoice.JSON_PROPERTY_LINKED_INVOICES,
  Customerinvoice.JSON_PROPERTY_CREDIT_NOTE_MOTIVE,
  Customerinvoice.JSON_PROPERTY_CUSTOMER_ORDERS,
  Customerinvoice.JSON_PROPERTY_END_YEAR_DISCOUNT,
  Customerinvoice.JSON_PROPERTY_INVOICE_CHANNEL,
  Customerinvoice.JSON_PROPERTY_CHORUS_FLOW_NUMBER,
  Customerinvoice.JSON_PROPERTY_CHORUS_STATUS,
  Customerinvoice.JSON_PROPERTY_CHORUS_STATUS_UPDATE_DATE,
  Customerinvoice.JSON_PROPERTY_CHORUS_ERROR,
  Customerinvoice.JSON_PROPERTY_CHORUS_ISSUER,
  Customerinvoice.JSON_PROPERTY_CHORUS_EXPORT_DATE,
  Customerinvoice.JSON_PROPERTY_CHORUS_RECIPIENT_DEPARTMENT_CODE,
  Customerinvoice.JSON_PROPERTY_CHORUS_DEPARTMENT_NAME,
  Customerinvoice.JSON_PROPERTY_MESSAGE_TO_SEND_TO_CHORUS,
  Customerinvoice.JSON_PROPERTY_CHORUS_RECIPIENT,
  Customerinvoice.JSON_PROPERTY_CHORUS_INVOICING_FRAMEWORK,
  Customerinvoice.JSON_PROPERTY_CHORUS_VALIDATOR,
  Customerinvoice.JSON_PROPERTY_CHORUS_MARKET_NUMBER,
  Customerinvoice.JSON_PROPERTY_CHORUS_CONTRACT_NUMBER,
  Customerinvoice.JSON_PROPERTY_CHORUS_COMMITMENT_NUMBER,
  Customerinvoice.JSON_PROPERTY_CHORUS_EFFECTIVE_DATE,
  Customerinvoice.JSON_PROPERTY_CLEAR_INVOICE_STATUS,
  Customerinvoice.JSON_PROPERTY_CLEAR_INVOICE_CONTACT_FOR_ACCESSING_PORTAL,
  Customerinvoice.JSON_PROPERTY_CLEAR_INVOICE_ERROR,
  Customerinvoice.JSON_PROPERTY_AMOUNTS_PRECISION,
  Customerinvoice.JSON_PROPERTY_PRINT_UNIT,
  Customerinvoice.JSON_PROPERTY_PRINT_UNIT_CONVERSION_RATE,
  Customerinvoice.JSON_PROPERTY_PRINT_LEVELS,
  Customerinvoice.JSON_PROPERTY_PHASES_DISPLAY_FOR_PRINTING,
  Customerinvoice.JSON_PROPERTY_ACTIVITIES_DISPLAY_FOR_PRINTING,
  Customerinvoice.JSON_PROPERTY_ROWS_DISPLAY_FOR_PRINTING,
  Customerinvoice.JSON_PROPERTY_PRINTING_SCOPE,
  Customerinvoice.JSON_PROPERTY_CUSTOMER_REMINDER,
  Customerinvoice.JSON_PROPERTY_VISIBILITY,
  Customerinvoice.JSON_PROPERTY_VISIBILITY_DATE,
  Customerinvoice.JSON_PROPERTY_TOTAL_WITHOUT_VAT,
  Customerinvoice.JSON_PROPERTY_TOTAL_VAT,
  Customerinvoice.JSON_PROPERTY_TOTAL_INCLUDING_VAT,
  Customerinvoice.JSON_PROPERTY_OUTSTANDING_BALANCE,
  Customerinvoice.JSON_PROPERTY_PARTNERS_TOTAL_WITHOUT_VAT,
  Customerinvoice.JSON_PROPERTY_PARTNERS_TOTAL_INCLUDING_VAT,
  Customerinvoice.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("customerinvoice")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class Customerinvoice {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_VALIDATION_STEP = "validationStep";
  private String validationStep;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  /**
   * Customer invoice type. 0 : Invoice; 2 : Credit note; 4 : Instalment
   */
  public enum TypeEnum {
    NUMBER_0(0),
    
    NUMBER_2(2),
    
    NUMBER_4(4);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(Integer value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * Type of movement. 0 : Customer invoicing; 1 : Accounting entity invoicing; 10 : Internal invoicing
   */
  public enum AccountingTypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_10(10);

    private Integer value;

    AccountingTypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AccountingTypeEnum fromValue(Integer value) {
      for (AccountingTypeEnum b : AccountingTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACCOUNTING_TYPE = "accountingType";
  private AccountingTypeEnum accountingType;

  /**
   * Invoice status. 2 : Pro Forma; 4 : Validated; 5 : Partially settled; 6 : Settled
   */
  public enum StatusEnum {
    NUMBER_2(2),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6);

    private Integer value;

    StatusEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(Integer value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_DATE = "date";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime date;

  public static final String JSON_PROPERTY_PERIOD_DATE = "periodDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime periodDate;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private EntityDataLink entity;

  public static final String JSON_PROPERTY_FINANCIAL_ENTITY = "financialEntity";
  private EntityDataLink financialEntity;

  public static final String JSON_PROPERTY_ACCOUNTING_ENTITY = "accountingEntity";
  private EntityDataLink accountingEntity;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private ProjectDataLink project;

  public static final String JSON_PROPERTY_SECONDARY_PROJECTS = "secondaryProjects";
  private List<ProjectDataLink> secondaryProjects;

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private CompanyDataLink customer;

  public static final String JSON_PROPERTY_INVOICED_CUSTOMER = "invoicedCustomer";
  private CompanyDataLink invoicedCustomer;

  public static final String JSON_PROPERTY_CONTACT = "contact";
  private ContactResponsibilityDataLink contact;

  public static final String JSON_PROPERTY_SENDING_BY_EMAIL_CONTACTS = "sendingByEmailContacts";
  private List<ContactResponsibilityDataLink> sendingByEmailContacts;

  public static final String JSON_PROPERTY_COMPANY_ACCOUNT = "companyAccount";
  private CompanyAccountDataLink companyAccount;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_BOTTOM_OF_PAGE = "bottomOfPage";
  private String bottomOfPage;

  public static final String JSON_PROPERTY_OUR_REFERENCES = "ourReferences";
  private String ourReferences;

  public static final String JSON_PROPERTY_YOUR_REFERENCES = "yourReferences";
  private String yourReferences;

  public static final String JSON_PROPERTY_PAYMENT_TERMS = "paymentTerms";
  private PaymentTermDataLink paymentTerms;

  public static final String JSON_PROPERTY_DUE_DATE = "dueDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime dueDate;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private CurrencyDataLink currency;

  public static final String JSON_PROPERTY_CURRENCY_RATE = "currencyRate";
  private Double currencyRate;

  public static final String JSON_PROPERTY_CREATOR = "creator";
  private EmployeeDataLink creator;

  /**
   * Global line printing mode. 0 : Hidden, 2 : Label, 4 : Total, 6 : Label/Total, 8 : Label/Com./Details/Total, 10 : Label/Com./Total, 12 : Label/Comments, 18 : Comments, 22 : Comments/Total, 24 : Comments/Details/Total
   */
  public enum GobalLinePrintModeEnum {
    NUMBER_0(0),
    
    NUMBER_2(2),
    
    NUMBER_4(4),
    
    NUMBER_6(6),
    
    NUMBER_8(8),
    
    NUMBER_10(10),
    
    NUMBER_12(12),
    
    NUMBER_18(18),
    
    NUMBER_22(22),
    
    NUMBER_24(24);

    private Integer value;

    GobalLinePrintModeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GobalLinePrintModeEnum fromValue(Integer value) {
      for (GobalLinePrintModeEnum b : GobalLinePrintModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GOBAL_LINE_PRINT_MODE = "gobalLinePrintMode";
  private GobalLinePrintModeEnum gobalLinePrintMode;

  public static final String JSON_PROPERTY_GOBAL_LINE_LABEL = "gobalLineLabel";
  private String gobalLineLabel;

  public static final String JSON_PROPERTY_GOBAL_LINE_COMMENT = "gobalLineComment";
  private String gobalLineComment;

  public static final String JSON_PROPERTY_BANK = "bank";
  private DataLink bank;

  public static final String JSON_PROPERTY_FISCAL_POSITION = "fiscalPosition";
  private DataLink fiscalPosition;

  /**
   * VAT system of the customer invoice. 1 : Receipts; 2 : Debits
   */
  public enum VatSystemEnum {
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    VatSystemEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VatSystemEnum fromValue(Integer value) {
      for (VatSystemEnum b : VatSystemEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VAT_SYSTEM = "vatSystem";
  private VatSystemEnum vatSystem;

  public static final String JSON_PROPERTY_BOOK_CODE = "bookCode";
  private BookCodeDataLink bookCode;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_LINKED_INVOICES = "linkedInvoices";
  private List<CustomerInvoiceDataLink> linkedInvoices;

  public static final String JSON_PROPERTY_CREDIT_NOTE_MOTIVE = "creditNoteMotive";
  private CreditNoteMotiveDataLink creditNoteMotive;

  public static final String JSON_PROPERTY_CUSTOMER_ORDERS = "customerOrders";
  private List<CustomerOrderDataLink> customerOrders;

  /**
   * RFA. 0 : No; 1 : Yes
   */
  public enum EndYearDiscountEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    EndYearDiscountEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EndYearDiscountEnum fromValue(Integer value) {
      for (EndYearDiscountEnum b : EndYearDiscountEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_END_YEAR_DISCOUNT = "endYearDiscount";
  private EndYearDiscountEnum endYearDiscount;

  public static final String JSON_PROPERTY_INVOICE_CHANNEL = "invoiceChannel";
  private DataLink invoiceChannel;

  public static final String JSON_PROPERTY_CHORUS_FLOW_NUMBER = "chorusFlowNumber";
  private String chorusFlowNumber;

  public static final String JSON_PROPERTY_CHORUS_STATUS = "chorusStatus";
  private String chorusStatus;

  public static final String JSON_PROPERTY_CHORUS_STATUS_UPDATE_DATE = "chorusStatusUpdateDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime chorusStatusUpdateDate;

  public static final String JSON_PROPERTY_CHORUS_ERROR = "chorusError";
  private String chorusError;

  public static final String JSON_PROPERTY_CHORUS_ISSUER = "chorusIssuer";
  private ChorusSenderDataLink chorusIssuer;

  public static final String JSON_PROPERTY_CHORUS_EXPORT_DATE = "chorusExportDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime chorusExportDate;

  public static final String JSON_PROPERTY_CHORUS_RECIPIENT_DEPARTMENT_CODE = "chorusRecipientDepartmentCode";
  private String chorusRecipientDepartmentCode;

  public static final String JSON_PROPERTY_CHORUS_DEPARTMENT_NAME = "chorusDepartmentName";
  private String chorusDepartmentName;

  public static final String JSON_PROPERTY_MESSAGE_TO_SEND_TO_CHORUS = "messageToSendToChorus";
  private String messageToSendToChorus;

  public static final String JSON_PROPERTY_CHORUS_RECIPIENT = "chorusRecipient";
  private ChorusStructureDataLink chorusRecipient;

  /**
   * Chorus invoicing framework. 1 : A1 - Invoice; 2 : A2 - Invoice already paid; 4 : A4 - Monthly draft bill; 7 : A7 - Draft final statement; 8 : A8 - Final general statement; 9 : A9 - Payment request; 12 : A12 - Invoice; 13 : A13 - Monthly draft bill; 14 : A14 - Draft final statement
   */
  public enum ChorusInvoicingFrameworkEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_4(4),
    
    NUMBER_7(7),
    
    NUMBER_8(8),
    
    NUMBER_9(9),
    
    NUMBER_12(12),
    
    NUMBER_13(13),
    
    NUMBER_14(14);

    private Integer value;

    ChorusInvoicingFrameworkEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChorusInvoicingFrameworkEnum fromValue(Integer value) {
      for (ChorusInvoicingFrameworkEnum b : ChorusInvoicingFrameworkEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHORUS_INVOICING_FRAMEWORK = "chorusInvoicingFramework";
  private ChorusInvoicingFrameworkEnum chorusInvoicingFramework;

  public static final String JSON_PROPERTY_CHORUS_VALIDATOR = "chorusValidator";
  private ChorusStructureDataLink chorusValidator;

  public static final String JSON_PROPERTY_CHORUS_MARKET_NUMBER = "chorusMarketNumber";
  private String chorusMarketNumber;

  public static final String JSON_PROPERTY_CHORUS_CONTRACT_NUMBER = "chorusContractNumber";
  private String chorusContractNumber;

  public static final String JSON_PROPERTY_CHORUS_COMMITMENT_NUMBER = "chorusCommitmentNumber";
  private String chorusCommitmentNumber;

  public static final String JSON_PROPERTY_CHORUS_EFFECTIVE_DATE = "chorusEffectiveDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime chorusEffectiveDate;

  /**
   * Clear&#39;Invoice status. 0 : Sending queued; 1 : Sending queued after correction; 10 : Error data SX during sending attempt; 11 : Error when sending to Clear&#39;Invoice; 20 : Sent; 30 : Deposit rejected; 40 : Deposit confirmed
   */
  public enum ClearInvoiceStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_10(10),
    
    NUMBER_11(11),
    
    NUMBER_20(20),
    
    NUMBER_30(30),
    
    NUMBER_40(40);

    private Integer value;

    ClearInvoiceStatusEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ClearInvoiceStatusEnum fromValue(Integer value) {
      for (ClearInvoiceStatusEnum b : ClearInvoiceStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CLEAR_INVOICE_STATUS = "clearInvoiceStatus";
  private ClearInvoiceStatusEnum clearInvoiceStatus;

  public static final String JSON_PROPERTY_CLEAR_INVOICE_CONTACT_FOR_ACCESSING_PORTAL = "clearInvoiceContactForAccessingPortal";
  private ContactResponsibilityDataLink clearInvoiceContactForAccessingPortal;

  public static final String JSON_PROPERTY_CLEAR_INVOICE_ERROR = "clearInvoiceError";
  private String clearInvoiceError;

  /**
   * Decimals for amounts upon printing. &#39;&#39; : Automatic; 0 : 0; 1 : 1; 2 : 2; 3 : 3; 4 : 4; 5 : 5; 6 : 6
   */
  public enum AmountsPrecisionEnum {
    NUMBER_null(null),
    
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6);

    private Integer value;

    AmountsPrecisionEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AmountsPrecisionEnum fromValue(Integer value) {
      for (AmountsPrecisionEnum b : AmountsPrecisionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AMOUNTS_PRECISION = "amountsPrecision";
  private AmountsPrecisionEnum amountsPrecision;

  /**
   * Print unit of the invoice. &#39;&#39; : Print unit of the project; 0 : Hour; 1 : Day
   */
  public enum PrintUnitEnum {
    NUMBER_null(null),
    
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    PrintUnitEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PrintUnitEnum fromValue(Integer value) {
      for (PrintUnitEnum b : PrintUnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PRINT_UNIT = "printUnit";
  private PrintUnitEnum printUnit;

  public static final String JSON_PROPERTY_PRINT_UNIT_CONVERSION_RATE = "printUnitConversionRate";
  private Double printUnitConversionRate;

  /**
   * Print levels. 0 : Phases / Activity / Row; 1 : Phases / Activity; 2 : Phases / Row; 3 : Phases; 4 : Activity; 5 : Activity / Row; 6 : Row
   */
  public enum PrintLevelsEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6);

    private Integer value;

    PrintLevelsEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PrintLevelsEnum fromValue(Integer value) {
      for (PrintLevelsEnum b : PrintLevelsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PRINT_LEVELS = "printLevels";
  private PrintLevelsEnum printLevels;

  /**
   * Phase display for printing. 0 : Label / Totals; 1 : Label; 2 : Totals; 3 : Comment; 4 : Label / Comment; 5 : Label / Comment / Totals; 6 : Comment / Totals
   */
  public enum PhasesDisplayForPrintingEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6);

    private Integer value;

    PhasesDisplayForPrintingEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PhasesDisplayForPrintingEnum fromValue(Integer value) {
      for (PhasesDisplayForPrintingEnum b : PhasesDisplayForPrintingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PHASES_DISPLAY_FOR_PRINTING = "phasesDisplayForPrinting";
  private PhasesDisplayForPrintingEnum phasesDisplayForPrinting;

  /**
   * Activity display for printing. 0 : Label / Totals; 1 : Label; 2 : Totals; 3 : Comment; 4 : Libellé / Comment; 5 : Label / Comment / Totals; 6 : Comment / Totals
   */
  public enum ActivitiesDisplayForPrintingEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6);

    private Integer value;

    ActivitiesDisplayForPrintingEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActivitiesDisplayForPrintingEnum fromValue(Integer value) {
      for (ActivitiesDisplayForPrintingEnum b : ActivitiesDisplayForPrintingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACTIVITIES_DISPLAY_FOR_PRINTING = "activitiesDisplayForPrinting";
  private ActivitiesDisplayForPrintingEnum activitiesDisplayForPrinting;

  /**
   * Row display for printing. 0 : Label / Totals; 1 : Label; 2 : Totals
   */
  public enum RowsDisplayForPrintingEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    RowsDisplayForPrintingEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RowsDisplayForPrintingEnum fromValue(Integer value) {
      for (RowsDisplayForPrintingEnum b : RowsDisplayForPrintingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ROWS_DISPLAY_FOR_PRINTING = "rowsDisplayForPrinting";
  private RowsDisplayForPrintingEnum rowsDisplayForPrinting;

  /**
   * Printing scope. 0 : Project; 1 : Invoice; 2 : Invoice with previous invoices
   */
  public enum PrintingScopeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    PrintingScopeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PrintingScopeEnum fromValue(Integer value) {
      for (PrintingScopeEnum b : PrintingScopeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PRINTING_SCOPE = "printingScope";
  private PrintingScopeEnum printingScope;

  /**
   * Customer reminder. 0 : No; 5 : Manual; 10 : Automatic and manual
   */
  public enum CustomerReminderEnum {
    NUMBER_0(0),
    
    NUMBER_5(5),
    
    NUMBER_10(10);

    private Integer value;

    CustomerReminderEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CustomerReminderEnum fromValue(Integer value) {
      for (CustomerReminderEnum b : CustomerReminderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CUSTOMER_REMINDER = "customerReminder";
  private CustomerReminderEnum customerReminder;

  /**
   * Visibility. 0 : Active; 10 : Unavailable; 50 : Archived; 60 : Forgotten; 100 : Anonymized
   */
  public enum VisibilityEnum {
    NUMBER_0(0),
    
    NUMBER_10(10),
    
    NUMBER_50(50),
    
    NUMBER_60(60),
    
    NUMBER_100(100);

    private Integer value;

    VisibilityEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VisibilityEnum fromValue(Integer value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VISIBILITY = "visibility";
  private VisibilityEnum visibility;

  public static final String JSON_PROPERTY_VISIBILITY_DATE = "visibilityDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime visibilityDate;

  public static final String JSON_PROPERTY_TOTAL_WITHOUT_VAT = "totalWithoutVat";
  private CustomerInvoiceMultiCurrency totalWithoutVat;

  public static final String JSON_PROPERTY_TOTAL_VAT = "totalVat";
  private CustomerInvoiceMultiCurrency totalVat;

  public static final String JSON_PROPERTY_TOTAL_INCLUDING_VAT = "totalIncludingVat";
  private CustomerInvoiceMultiCurrency totalIncludingVat;

  public static final String JSON_PROPERTY_OUTSTANDING_BALANCE = "outstandingBalance";
  private CustomerInvoiceMultiCurrency outstandingBalance;

  public static final String JSON_PROPERTY_PARTNERS_TOTAL_WITHOUT_VAT = "partnersTotalWithoutVat";
  private Double partnersTotalWithoutVat;

  public static final String JSON_PROPERTY_PARTNERS_TOTAL_INCLUDING_VAT = "partnersTotalIncludingVat";
  private Double partnersTotalIncludingVat;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Customerinvoice() { 
  }

  @JsonCreator
  public Customerinvoice(
    @JsonProperty(JSON_PROPERTY_CODE) String code, 
    @JsonProperty(JSON_PROPERTY_ACCOUNTING_TYPE) AccountingTypeEnum accountingType, 
    @JsonProperty(JSON_PROPERTY_PERIOD_DATE) java.time.LocalDateTime periodDate, 
    @JsonProperty(JSON_PROPERTY_SECONDARY_PROJECTS) List<ProjectDataLink> secondaryProjects, 
    @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME) java.time.LocalDateTime createdOnTime, 
    @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME) java.time.LocalDateTime updatedOnTime, 
    @JsonProperty(JSON_PROPERTY_UPDATED_BY) String updatedBy, 
    @JsonProperty(JSON_PROPERTY_CUSTOMER_ORDERS) List<CustomerOrderDataLink> customerOrders, 
    @JsonProperty(JSON_PROPERTY_CHORUS_EXPORT_DATE) java.time.LocalDateTime chorusExportDate, 
    @JsonProperty(JSON_PROPERTY_CLEAR_INVOICE_ERROR) String clearInvoiceError, 
    @JsonProperty(JSON_PROPERTY_VISIBILITY_DATE) java.time.LocalDateTime visibilityDate, 
    @JsonProperty(JSON_PROPERTY_PARTNERS_TOTAL_WITHOUT_VAT) Double partnersTotalWithoutVat, 
    @JsonProperty(JSON_PROPERTY_PARTNERS_TOTAL_INCLUDING_VAT) Double partnersTotalIncludingVat
  ) {
    this();
    this.code = code;
    this.accountingType = accountingType;
    this.periodDate = periodDate;
    this.secondaryProjects = secondaryProjects;
    this.createdOnTime = createdOnTime;
    this.updatedOnTime = updatedOnTime;
    this.updatedBy = updatedBy;
    this.customerOrders = customerOrders;
    this.chorusExportDate = chorusExportDate;
    this.clearInvoiceError = clearInvoiceError;
    this.visibilityDate = visibilityDate;
    this.partnersTotalWithoutVat = partnersTotalWithoutVat;
    this.partnersTotalIncludingVat = partnersTotalIncludingVat;
  }

  public Customerinvoice id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Customerinvoice validationStep(String validationStep) {
    this.validationStep = validationStep;
    return this;
  }

   /**
   * Validation step of the element
   * @return validationStep
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getValidationStep() {
    return validationStep;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidationStep(String validationStep) {
    this.validationStep = validationStep;
  }


   /**
   * Code of the customer invoice
   * @return code
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }




  public Customerinvoice type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Customer invoice type. 0 : Invoice; 2 : Credit note; 4 : Instalment
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


   /**
   * Type of movement. 0 : Customer invoicing; 1 : Accounting entity invoicing; 10 : Internal invoicing
   * @return accountingType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNTING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountingTypeEnum getAccountingType() {
    return accountingType;
  }




  public Customerinvoice status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Invoice status. 2 : Pro Forma; 4 : Validated; 5 : Partially settled; 6 : Settled
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Customerinvoice date(java.time.LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the customer invoice
   * @return date
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(java.time.LocalDateTime date) {
    this.date = date;
  }


   /**
   * Customer invoice period date
   * @return periodDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getPeriodDate() {
    return periodDate;
  }




  public Customerinvoice entity(EntityDataLink entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntity(EntityDataLink entity) {
    this.entity = entity;
  }


  public Customerinvoice financialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
    return this;
  }

   /**
   * Get financialEntity
   * @return financialEntity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getFinancialEntity() {
    return financialEntity;
  }


  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinancialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
  }


  public Customerinvoice accountingEntity(EntityDataLink accountingEntity) {
    this.accountingEntity = accountingEntity;
    return this;
  }

   /**
   * Get accountingEntity
   * @return accountingEntity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNTING_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getAccountingEntity() {
    return accountingEntity;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNTING_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountingEntity(EntityDataLink accountingEntity) {
    this.accountingEntity = accountingEntity;
  }


  public Customerinvoice project(ProjectDataLink project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectDataLink getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProject(ProjectDataLink project) {
    this.project = project;
  }


   /**
   * Link to the secondary projects of the customer invoice. For more informations see the /projects resource
   * @return secondaryProjects
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_PROJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ProjectDataLink> getSecondaryProjects() {
    return secondaryProjects;
  }




  public Customerinvoice customer(CompanyDataLink customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyDataLink getCustomer() {
    return customer;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomer(CompanyDataLink customer) {
    this.customer = customer;
  }


  public Customerinvoice invoicedCustomer(CompanyDataLink invoicedCustomer) {
    this.invoicedCustomer = invoicedCustomer;
    return this;
  }

   /**
   * Get invoicedCustomer
   * @return invoicedCustomer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICED_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyDataLink getInvoicedCustomer() {
    return invoicedCustomer;
  }


  @JsonProperty(JSON_PROPERTY_INVOICED_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoicedCustomer(CompanyDataLink invoicedCustomer) {
    this.invoicedCustomer = invoicedCustomer;
  }


  public Customerinvoice contact(ContactResponsibilityDataLink contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContactResponsibilityDataLink getContact() {
    return contact;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContact(ContactResponsibilityDataLink contact) {
    this.contact = contact;
  }


  public Customerinvoice sendingByEmailContacts(List<ContactResponsibilityDataLink> sendingByEmailContacts) {
    this.sendingByEmailContacts = sendingByEmailContacts;
    return this;
  }

  public Customerinvoice addSendingByEmailContactsItem(ContactResponsibilityDataLink sendingByEmailContactsItem) {
    if (this.sendingByEmailContacts == null) {
      this.sendingByEmailContacts = new ArrayList<>();
    }
    this.sendingByEmailContacts.add(sendingByEmailContactsItem);
    return this;
  }

   /**
   * Link to contacts for sending the customer invoice by email. For more informations see the /contact-responsibilities resource
   * @return sendingByEmailContacts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SENDING_BY_EMAIL_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ContactResponsibilityDataLink> getSendingByEmailContacts() {
    return sendingByEmailContacts;
  }


  @JsonProperty(JSON_PROPERTY_SENDING_BY_EMAIL_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendingByEmailContacts(List<ContactResponsibilityDataLink> sendingByEmailContacts) {
    this.sendingByEmailContacts = sendingByEmailContacts;
  }


  public Customerinvoice companyAccount(CompanyAccountDataLink companyAccount) {
    this.companyAccount = companyAccount;
    return this;
  }

   /**
   * Get companyAccount
   * @return companyAccount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPANY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyAccountDataLink getCompanyAccount() {
    return companyAccount;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyAccount(CompanyAccountDataLink companyAccount) {
    this.companyAccount = companyAccount;
  }


  public Customerinvoice description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the customer invoice
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Customerinvoice comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Commentary of the customer invoice
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public Customerinvoice bottomOfPage(String bottomOfPage) {
    this.bottomOfPage = bottomOfPage;
    return this;
  }

   /**
   * Footer of the customer invoice
   * @return bottomOfPage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOTTOM_OF_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBottomOfPage() {
    return bottomOfPage;
  }


  @JsonProperty(JSON_PROPERTY_BOTTOM_OF_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBottomOfPage(String bottomOfPage) {
    this.bottomOfPage = bottomOfPage;
  }


  public Customerinvoice ourReferences(String ourReferences) {
    this.ourReferences = ourReferences;
    return this;
  }

   /**
   * Our references
   * @return ourReferences
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUR_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOurReferences() {
    return ourReferences;
  }


  @JsonProperty(JSON_PROPERTY_OUR_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOurReferences(String ourReferences) {
    this.ourReferences = ourReferences;
  }


  public Customerinvoice yourReferences(String yourReferences) {
    this.yourReferences = yourReferences;
    return this;
  }

   /**
   * Your references
   * @return yourReferences
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YOUR_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getYourReferences() {
    return yourReferences;
  }


  @JsonProperty(JSON_PROPERTY_YOUR_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYourReferences(String yourReferences) {
    this.yourReferences = yourReferences;
  }


  public Customerinvoice paymentTerms(PaymentTermDataLink paymentTerms) {
    this.paymentTerms = paymentTerms;
    return this;
  }

   /**
   * Get paymentTerms
   * @return paymentTerms
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentTermDataLink getPaymentTerms() {
    return paymentTerms;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentTerms(PaymentTermDataLink paymentTerms) {
    this.paymentTerms = paymentTerms;
  }


  public Customerinvoice dueDate(java.time.LocalDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Due date of the customer invoice
   * @return dueDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getDueDate() {
    return dueDate;
  }


  @JsonProperty(JSON_PROPERTY_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDueDate(java.time.LocalDateTime dueDate) {
    this.dueDate = dueDate;
  }


  public Customerinvoice currency(CurrencyDataLink currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CurrencyDataLink getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(CurrencyDataLink currency) {
    this.currency = currency;
  }


  public Customerinvoice currencyRate(Double currencyRate) {
    this.currencyRate = currencyRate;
    return this;
  }

   /**
   * Conversion rate
   * @return currencyRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCurrencyRate() {
    return currencyRate;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyRate(Double currencyRate) {
    this.currencyRate = currencyRate;
  }


  public Customerinvoice creator(EmployeeDataLink creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getCreator() {
    return creator;
  }


  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreator(EmployeeDataLink creator) {
    this.creator = creator;
  }


  public Customerinvoice gobalLinePrintMode(GobalLinePrintModeEnum gobalLinePrintMode) {
    this.gobalLinePrintMode = gobalLinePrintMode;
    return this;
  }

   /**
   * Global line printing mode. 0 : Hidden, 2 : Label, 4 : Total, 6 : Label/Total, 8 : Label/Com./Details/Total, 10 : Label/Com./Total, 12 : Label/Comments, 18 : Comments, 22 : Comments/Total, 24 : Comments/Details/Total
   * @return gobalLinePrintMode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GOBAL_LINE_PRINT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GobalLinePrintModeEnum getGobalLinePrintMode() {
    return gobalLinePrintMode;
  }


  @JsonProperty(JSON_PROPERTY_GOBAL_LINE_PRINT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGobalLinePrintMode(GobalLinePrintModeEnum gobalLinePrintMode) {
    this.gobalLinePrintMode = gobalLinePrintMode;
  }


  public Customerinvoice gobalLineLabel(String gobalLineLabel) {
    this.gobalLineLabel = gobalLineLabel;
    return this;
  }

   /**
   * Global line label
   * @return gobalLineLabel
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GOBAL_LINE_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGobalLineLabel() {
    return gobalLineLabel;
  }


  @JsonProperty(JSON_PROPERTY_GOBAL_LINE_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGobalLineLabel(String gobalLineLabel) {
    this.gobalLineLabel = gobalLineLabel;
  }


  public Customerinvoice gobalLineComment(String gobalLineComment) {
    this.gobalLineComment = gobalLineComment;
    return this;
  }

   /**
   * Global line commentary
   * @return gobalLineComment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GOBAL_LINE_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGobalLineComment() {
    return gobalLineComment;
  }


  @JsonProperty(JSON_PROPERTY_GOBAL_LINE_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGobalLineComment(String gobalLineComment) {
    this.gobalLineComment = gobalLineComment;
  }


  public Customerinvoice bank(DataLink bank) {
    this.bank = bank;
    return this;
  }

   /**
   * Get bank
   * @return bank
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getBank() {
    return bank;
  }


  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBank(DataLink bank) {
    this.bank = bank;
  }


  public Customerinvoice fiscalPosition(DataLink fiscalPosition) {
    this.fiscalPosition = fiscalPosition;
    return this;
  }

   /**
   * Get fiscalPosition
   * @return fiscalPosition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FISCAL_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getFiscalPosition() {
    return fiscalPosition;
  }


  @JsonProperty(JSON_PROPERTY_FISCAL_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFiscalPosition(DataLink fiscalPosition) {
    this.fiscalPosition = fiscalPosition;
  }


  public Customerinvoice vatSystem(VatSystemEnum vatSystem) {
    this.vatSystem = vatSystem;
    return this;
  }

   /**
   * VAT system of the customer invoice. 1 : Receipts; 2 : Debits
   * @return vatSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VatSystemEnum getVatSystem() {
    return vatSystem;
  }


  @JsonProperty(JSON_PROPERTY_VAT_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatSystem(VatSystemEnum vatSystem) {
    this.vatSystem = vatSystem;
  }


  public Customerinvoice bookCode(BookCodeDataLink bookCode) {
    this.bookCode = bookCode;
    return this;
  }

   /**
   * Get bookCode
   * @return bookCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOOK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BookCodeDataLink getBookCode() {
    return bookCode;
  }


  @JsonProperty(JSON_PROPERTY_BOOK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBookCode(BookCodeDataLink bookCode) {
    this.bookCode = bookCode;
  }


   /**
   * Creation date
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }




   /**
   * Update date
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }




   /**
   * Last modified of the customer invoice by
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }




  public Customerinvoice linkedInvoices(List<CustomerInvoiceDataLink> linkedInvoices) {
    this.linkedInvoices = linkedInvoices;
    return this;
  }

  public Customerinvoice addLinkedInvoicesItem(CustomerInvoiceDataLink linkedInvoicesItem) {
    if (this.linkedInvoices == null) {
      this.linkedInvoices = new ArrayList<>();
    }
    this.linkedInvoices.add(linkedInvoicesItem);
    return this;
  }

   /**
   * Link to the customer invoice link to the customer invoice. For more informations see the /customer-invoices resource
   * @return linkedInvoices
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKED_INVOICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CustomerInvoiceDataLink> getLinkedInvoices() {
    return linkedInvoices;
  }


  @JsonProperty(JSON_PROPERTY_LINKED_INVOICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkedInvoices(List<CustomerInvoiceDataLink> linkedInvoices) {
    this.linkedInvoices = linkedInvoices;
  }


  public Customerinvoice creditNoteMotive(CreditNoteMotiveDataLink creditNoteMotive) {
    this.creditNoteMotive = creditNoteMotive;
    return this;
  }

   /**
   * Get creditNoteMotive
   * @return creditNoteMotive
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDIT_NOTE_MOTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreditNoteMotiveDataLink getCreditNoteMotive() {
    return creditNoteMotive;
  }


  @JsonProperty(JSON_PROPERTY_CREDIT_NOTE_MOTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreditNoteMotive(CreditNoteMotiveDataLink creditNoteMotive) {
    this.creditNoteMotive = creditNoteMotive;
  }


   /**
   * Link to the customer order of the customer invoice. For more informations see the /customer-orders resource
   * @return customerOrders
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CustomerOrderDataLink> getCustomerOrders() {
    return customerOrders;
  }




  public Customerinvoice endYearDiscount(EndYearDiscountEnum endYearDiscount) {
    this.endYearDiscount = endYearDiscount;
    return this;
  }

   /**
   * RFA. 0 : No; 1 : Yes
   * @return endYearDiscount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_YEAR_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EndYearDiscountEnum getEndYearDiscount() {
    return endYearDiscount;
  }


  @JsonProperty(JSON_PROPERTY_END_YEAR_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndYearDiscount(EndYearDiscountEnum endYearDiscount) {
    this.endYearDiscount = endYearDiscount;
  }


  public Customerinvoice invoiceChannel(DataLink invoiceChannel) {
    this.invoiceChannel = invoiceChannel;
    return this;
  }

   /**
   * Get invoiceChannel
   * @return invoiceChannel
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getInvoiceChannel() {
    return invoiceChannel;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceChannel(DataLink invoiceChannel) {
    this.invoiceChannel = invoiceChannel;
  }


  public Customerinvoice chorusFlowNumber(String chorusFlowNumber) {
    this.chorusFlowNumber = chorusFlowNumber;
    return this;
  }

   /**
   * Chorus CPP flow number
   * @return chorusFlowNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_FLOW_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChorusFlowNumber() {
    return chorusFlowNumber;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_FLOW_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusFlowNumber(String chorusFlowNumber) {
    this.chorusFlowNumber = chorusFlowNumber;
  }


  public Customerinvoice chorusStatus(String chorusStatus) {
    this.chorusStatus = chorusStatus;
    return this;
  }

   /**
   * Chorus status. A_TRANSMETTRE : Awaiting sending to Chorus; A_RETRANSMETTRE_RECYCLER : Awaiting sending to Chorus after &#39;To recycle&#39; correction; A_RETRANSMETTRE_SUSPENDUE : Awaiting sending to Chorus after &#39;On hold&#39; correction;ERREUR_TRANSMISSION : Error while sending to Chorus; TRANSMISE : Sent to Chorus; DEPOSEE : Uploaded; EN_COURS_ACHEMINEMENT : Uploading; MISE_A_DISPOSITION : Available;A_RECYCLER : To recycle; SUSPENDUE : On hold; COMPLETEE : Completed; REJETEE : Rejected; MANDATEE : Money order sent;MISE_EN_PAIEMENT : Payment; COMPTABILISEE : Entered into the accounts; MISE_A_DISPOSITION_COMPTABLE : Sent to accounting; SX_ERROR : Error sending SX data to Chorus; SERVICE_FAIT : Service done; A_VALIDER_1 : To validate 1;
   * @return chorusStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChorusStatus() {
    return chorusStatus;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusStatus(String chorusStatus) {
    this.chorusStatus = chorusStatus;
  }


  public Customerinvoice chorusStatusUpdateDate(java.time.LocalDateTime chorusStatusUpdateDate) {
    this.chorusStatusUpdateDate = chorusStatusUpdateDate;
    return this;
  }

   /**
   * Chorus status update date
   * @return chorusStatusUpdateDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_STATUS_UPDATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getChorusStatusUpdateDate() {
    return chorusStatusUpdateDate;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_STATUS_UPDATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusStatusUpdateDate(java.time.LocalDateTime chorusStatusUpdateDate) {
    this.chorusStatusUpdateDate = chorusStatusUpdateDate;
  }


  public Customerinvoice chorusError(String chorusError) {
    this.chorusError = chorusError;
    return this;
  }

   /**
   * CPP chorus error comment
   * @return chorusError
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChorusError() {
    return chorusError;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusError(String chorusError) {
    this.chorusError = chorusError;
  }


  public Customerinvoice chorusIssuer(ChorusSenderDataLink chorusIssuer) {
    this.chorusIssuer = chorusIssuer;
    return this;
  }

   /**
   * Get chorusIssuer
   * @return chorusIssuer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChorusSenderDataLink getChorusIssuer() {
    return chorusIssuer;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusIssuer(ChorusSenderDataLink chorusIssuer) {
    this.chorusIssuer = chorusIssuer;
  }


   /**
   * Chorus export date
   * @return chorusExportDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_EXPORT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getChorusExportDate() {
    return chorusExportDate;
  }




  public Customerinvoice chorusRecipientDepartmentCode(String chorusRecipientDepartmentCode) {
    this.chorusRecipientDepartmentCode = chorusRecipientDepartmentCode;
    return this;
  }

   /**
   * Chorus recipient service code
   * @return chorusRecipientDepartmentCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_RECIPIENT_DEPARTMENT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChorusRecipientDepartmentCode() {
    return chorusRecipientDepartmentCode;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_RECIPIENT_DEPARTMENT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusRecipientDepartmentCode(String chorusRecipientDepartmentCode) {
    this.chorusRecipientDepartmentCode = chorusRecipientDepartmentCode;
  }


  public Customerinvoice chorusDepartmentName(String chorusDepartmentName) {
    this.chorusDepartmentName = chorusDepartmentName;
    return this;
  }

   /**
   * Chorus service name
   * @return chorusDepartmentName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_DEPARTMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChorusDepartmentName() {
    return chorusDepartmentName;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_DEPARTMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusDepartmentName(String chorusDepartmentName) {
    this.chorusDepartmentName = chorusDepartmentName;
  }


  public Customerinvoice messageToSendToChorus(String messageToSendToChorus) {
    this.messageToSendToChorus = messageToSendToChorus;
    return this;
  }

   /**
   * Chorus message to send
   * @return messageToSendToChorus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_TO_SEND_TO_CHORUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessageToSendToChorus() {
    return messageToSendToChorus;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_TO_SEND_TO_CHORUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageToSendToChorus(String messageToSendToChorus) {
    this.messageToSendToChorus = messageToSendToChorus;
  }


  public Customerinvoice chorusRecipient(ChorusStructureDataLink chorusRecipient) {
    this.chorusRecipient = chorusRecipient;
    return this;
  }

   /**
   * Get chorusRecipient
   * @return chorusRecipient
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_RECIPIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChorusStructureDataLink getChorusRecipient() {
    return chorusRecipient;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_RECIPIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusRecipient(ChorusStructureDataLink chorusRecipient) {
    this.chorusRecipient = chorusRecipient;
  }


  public Customerinvoice chorusInvoicingFramework(ChorusInvoicingFrameworkEnum chorusInvoicingFramework) {
    this.chorusInvoicingFramework = chorusInvoicingFramework;
    return this;
  }

   /**
   * Chorus invoicing framework. 1 : A1 - Invoice; 2 : A2 - Invoice already paid; 4 : A4 - Monthly draft bill; 7 : A7 - Draft final statement; 8 : A8 - Final general statement; 9 : A9 - Payment request; 12 : A12 - Invoice; 13 : A13 - Monthly draft bill; 14 : A14 - Draft final statement
   * @return chorusInvoicingFramework
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_INVOICING_FRAMEWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChorusInvoicingFrameworkEnum getChorusInvoicingFramework() {
    return chorusInvoicingFramework;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_INVOICING_FRAMEWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusInvoicingFramework(ChorusInvoicingFrameworkEnum chorusInvoicingFramework) {
    this.chorusInvoicingFramework = chorusInvoicingFramework;
  }


  public Customerinvoice chorusValidator(ChorusStructureDataLink chorusValidator) {
    this.chorusValidator = chorusValidator;
    return this;
  }

   /**
   * Get chorusValidator
   * @return chorusValidator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_VALIDATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChorusStructureDataLink getChorusValidator() {
    return chorusValidator;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_VALIDATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusValidator(ChorusStructureDataLink chorusValidator) {
    this.chorusValidator = chorusValidator;
  }


  public Customerinvoice chorusMarketNumber(String chorusMarketNumber) {
    this.chorusMarketNumber = chorusMarketNumber;
    return this;
  }

   /**
   * Chorus market number
   * @return chorusMarketNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_MARKET_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChorusMarketNumber() {
    return chorusMarketNumber;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_MARKET_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusMarketNumber(String chorusMarketNumber) {
    this.chorusMarketNumber = chorusMarketNumber;
  }


  public Customerinvoice chorusContractNumber(String chorusContractNumber) {
    this.chorusContractNumber = chorusContractNumber;
    return this;
  }

   /**
   * Chorus contract number
   * @return chorusContractNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_CONTRACT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChorusContractNumber() {
    return chorusContractNumber;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_CONTRACT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusContractNumber(String chorusContractNumber) {
    this.chorusContractNumber = chorusContractNumber;
  }


  public Customerinvoice chorusCommitmentNumber(String chorusCommitmentNumber) {
    this.chorusCommitmentNumber = chorusCommitmentNumber;
    return this;
  }

   /**
   * Chorus commitment number
   * @return chorusCommitmentNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_COMMITMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChorusCommitmentNumber() {
    return chorusCommitmentNumber;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_COMMITMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusCommitmentNumber(String chorusCommitmentNumber) {
    this.chorusCommitmentNumber = chorusCommitmentNumber;
  }


  public Customerinvoice chorusEffectiveDate(java.time.LocalDateTime chorusEffectiveDate) {
    this.chorusEffectiveDate = chorusEffectiveDate;
    return this;
  }

   /**
   * Chorus effective date
   * @return chorusEffectiveDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getChorusEffectiveDate() {
    return chorusEffectiveDate;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusEffectiveDate(java.time.LocalDateTime chorusEffectiveDate) {
    this.chorusEffectiveDate = chorusEffectiveDate;
  }


  public Customerinvoice clearInvoiceStatus(ClearInvoiceStatusEnum clearInvoiceStatus) {
    this.clearInvoiceStatus = clearInvoiceStatus;
    return this;
  }

   /**
   * Clear&#39;Invoice status. 0 : Sending queued; 1 : Sending queued after correction; 10 : Error data SX during sending attempt; 11 : Error when sending to Clear&#39;Invoice; 20 : Sent; 30 : Deposit rejected; 40 : Deposit confirmed
   * @return clearInvoiceStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLEAR_INVOICE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ClearInvoiceStatusEnum getClearInvoiceStatus() {
    return clearInvoiceStatus;
  }


  @JsonProperty(JSON_PROPERTY_CLEAR_INVOICE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClearInvoiceStatus(ClearInvoiceStatusEnum clearInvoiceStatus) {
    this.clearInvoiceStatus = clearInvoiceStatus;
  }


  public Customerinvoice clearInvoiceContactForAccessingPortal(ContactResponsibilityDataLink clearInvoiceContactForAccessingPortal) {
    this.clearInvoiceContactForAccessingPortal = clearInvoiceContactForAccessingPortal;
    return this;
  }

   /**
   * Get clearInvoiceContactForAccessingPortal
   * @return clearInvoiceContactForAccessingPortal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLEAR_INVOICE_CONTACT_FOR_ACCESSING_PORTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContactResponsibilityDataLink getClearInvoiceContactForAccessingPortal() {
    return clearInvoiceContactForAccessingPortal;
  }


  @JsonProperty(JSON_PROPERTY_CLEAR_INVOICE_CONTACT_FOR_ACCESSING_PORTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClearInvoiceContactForAccessingPortal(ContactResponsibilityDataLink clearInvoiceContactForAccessingPortal) {
    this.clearInvoiceContactForAccessingPortal = clearInvoiceContactForAccessingPortal;
  }


   /**
   * Clear&#39;Invoice commentary
   * @return clearInvoiceError
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLEAR_INVOICE_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClearInvoiceError() {
    return clearInvoiceError;
  }




  public Customerinvoice amountsPrecision(AmountsPrecisionEnum amountsPrecision) {
    this.amountsPrecision = amountsPrecision;
    return this;
  }

   /**
   * Decimals for amounts upon printing. &#39;&#39; : Automatic; 0 : 0; 1 : 1; 2 : 2; 3 : 3; 4 : 4; 5 : 5; 6 : 6
   * @return amountsPrecision
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNTS_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AmountsPrecisionEnum getAmountsPrecision() {
    return amountsPrecision;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNTS_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountsPrecision(AmountsPrecisionEnum amountsPrecision) {
    this.amountsPrecision = amountsPrecision;
  }


  public Customerinvoice printUnit(PrintUnitEnum printUnit) {
    this.printUnit = printUnit;
    return this;
  }

   /**
   * Print unit of the invoice. &#39;&#39; : Print unit of the project; 0 : Hour; 1 : Day
   * @return printUnit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINT_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrintUnitEnum getPrintUnit() {
    return printUnit;
  }


  @JsonProperty(JSON_PROPERTY_PRINT_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintUnit(PrintUnitEnum printUnit) {
    this.printUnit = printUnit;
  }


  public Customerinvoice printUnitConversionRate(Double printUnitConversionRate) {
    this.printUnitConversionRate = printUnitConversionRate;
    return this;
  }

   /**
   * Conversion rate for print unit
   * @return printUnitConversionRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINT_UNIT_CONVERSION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPrintUnitConversionRate() {
    return printUnitConversionRate;
  }


  @JsonProperty(JSON_PROPERTY_PRINT_UNIT_CONVERSION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintUnitConversionRate(Double printUnitConversionRate) {
    this.printUnitConversionRate = printUnitConversionRate;
  }


  public Customerinvoice printLevels(PrintLevelsEnum printLevels) {
    this.printLevels = printLevels;
    return this;
  }

   /**
   * Print levels. 0 : Phases / Activity / Row; 1 : Phases / Activity; 2 : Phases / Row; 3 : Phases; 4 : Activity; 5 : Activity / Row; 6 : Row
   * @return printLevels
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINT_LEVELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrintLevelsEnum getPrintLevels() {
    return printLevels;
  }


  @JsonProperty(JSON_PROPERTY_PRINT_LEVELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintLevels(PrintLevelsEnum printLevels) {
    this.printLevels = printLevels;
  }


  public Customerinvoice phasesDisplayForPrinting(PhasesDisplayForPrintingEnum phasesDisplayForPrinting) {
    this.phasesDisplayForPrinting = phasesDisplayForPrinting;
    return this;
  }

   /**
   * Phase display for printing. 0 : Label / Totals; 1 : Label; 2 : Totals; 3 : Comment; 4 : Label / Comment; 5 : Label / Comment / Totals; 6 : Comment / Totals
   * @return phasesDisplayForPrinting
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHASES_DISPLAY_FOR_PRINTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PhasesDisplayForPrintingEnum getPhasesDisplayForPrinting() {
    return phasesDisplayForPrinting;
  }


  @JsonProperty(JSON_PROPERTY_PHASES_DISPLAY_FOR_PRINTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhasesDisplayForPrinting(PhasesDisplayForPrintingEnum phasesDisplayForPrinting) {
    this.phasesDisplayForPrinting = phasesDisplayForPrinting;
  }


  public Customerinvoice activitiesDisplayForPrinting(ActivitiesDisplayForPrintingEnum activitiesDisplayForPrinting) {
    this.activitiesDisplayForPrinting = activitiesDisplayForPrinting;
    return this;
  }

   /**
   * Activity display for printing. 0 : Label / Totals; 1 : Label; 2 : Totals; 3 : Comment; 4 : Libellé / Comment; 5 : Label / Comment / Totals; 6 : Comment / Totals
   * @return activitiesDisplayForPrinting
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVITIES_DISPLAY_FOR_PRINTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivitiesDisplayForPrintingEnum getActivitiesDisplayForPrinting() {
    return activitiesDisplayForPrinting;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVITIES_DISPLAY_FOR_PRINTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActivitiesDisplayForPrinting(ActivitiesDisplayForPrintingEnum activitiesDisplayForPrinting) {
    this.activitiesDisplayForPrinting = activitiesDisplayForPrinting;
  }


  public Customerinvoice rowsDisplayForPrinting(RowsDisplayForPrintingEnum rowsDisplayForPrinting) {
    this.rowsDisplayForPrinting = rowsDisplayForPrinting;
    return this;
  }

   /**
   * Row display for printing. 0 : Label / Totals; 1 : Label; 2 : Totals
   * @return rowsDisplayForPrinting
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROWS_DISPLAY_FOR_PRINTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RowsDisplayForPrintingEnum getRowsDisplayForPrinting() {
    return rowsDisplayForPrinting;
  }


  @JsonProperty(JSON_PROPERTY_ROWS_DISPLAY_FOR_PRINTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRowsDisplayForPrinting(RowsDisplayForPrintingEnum rowsDisplayForPrinting) {
    this.rowsDisplayForPrinting = rowsDisplayForPrinting;
  }


  public Customerinvoice printingScope(PrintingScopeEnum printingScope) {
    this.printingScope = printingScope;
    return this;
  }

   /**
   * Printing scope. 0 : Project; 1 : Invoice; 2 : Invoice with previous invoices
   * @return printingScope
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINTING_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrintingScopeEnum getPrintingScope() {
    return printingScope;
  }


  @JsonProperty(JSON_PROPERTY_PRINTING_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintingScope(PrintingScopeEnum printingScope) {
    this.printingScope = printingScope;
  }


  public Customerinvoice customerReminder(CustomerReminderEnum customerReminder) {
    this.customerReminder = customerReminder;
    return this;
  }

   /**
   * Customer reminder. 0 : No; 5 : Manual; 10 : Automatic and manual
   * @return customerReminder
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_REMINDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerReminderEnum getCustomerReminder() {
    return customerReminder;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_REMINDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerReminder(CustomerReminderEnum customerReminder) {
    this.customerReminder = customerReminder;
  }


  public Customerinvoice visibility(VisibilityEnum visibility) {
    this.visibility = visibility;
    return this;
  }

   /**
   * Visibility. 0 : Active; 10 : Unavailable; 50 : Archived; 60 : Forgotten; 100 : Anonymized
   * @return visibility
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


   /**
   * Visibility date
   * @return visibilityDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBILITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getVisibilityDate() {
    return visibilityDate;
  }




  public Customerinvoice totalWithoutVat(CustomerInvoiceMultiCurrency totalWithoutVat) {
    this.totalWithoutVat = totalWithoutVat;
    return this;
  }

   /**
   * Get totalWithoutVat
   * @return totalWithoutVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerInvoiceMultiCurrency getTotalWithoutVat() {
    return totalWithoutVat;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalWithoutVat(CustomerInvoiceMultiCurrency totalWithoutVat) {
    this.totalWithoutVat = totalWithoutVat;
  }


  public Customerinvoice totalVat(CustomerInvoiceMultiCurrency totalVat) {
    this.totalVat = totalVat;
    return this;
  }

   /**
   * Get totalVat
   * @return totalVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerInvoiceMultiCurrency getTotalVat() {
    return totalVat;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat(CustomerInvoiceMultiCurrency totalVat) {
    this.totalVat = totalVat;
  }


  public Customerinvoice totalIncludingVat(CustomerInvoiceMultiCurrency totalIncludingVat) {
    this.totalIncludingVat = totalIncludingVat;
    return this;
  }

   /**
   * Get totalIncludingVat
   * @return totalIncludingVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_INCLUDING_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerInvoiceMultiCurrency getTotalIncludingVat() {
    return totalIncludingVat;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_INCLUDING_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalIncludingVat(CustomerInvoiceMultiCurrency totalIncludingVat) {
    this.totalIncludingVat = totalIncludingVat;
  }


  public Customerinvoice outstandingBalance(CustomerInvoiceMultiCurrency outstandingBalance) {
    this.outstandingBalance = outstandingBalance;
    return this;
  }

   /**
   * Get outstandingBalance
   * @return outstandingBalance
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTSTANDING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerInvoiceMultiCurrency getOutstandingBalance() {
    return outstandingBalance;
  }


  @JsonProperty(JSON_PROPERTY_OUTSTANDING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutstandingBalance(CustomerInvoiceMultiCurrency outstandingBalance) {
    this.outstandingBalance = outstandingBalance;
  }


   /**
   * Partners total without VAT
   * @return partnersTotalWithoutVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTNERS_TOTAL_WITHOUT_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPartnersTotalWithoutVat() {
    return partnersTotalWithoutVat;
  }




   /**
   * Partners total including VAT
   * @return partnersTotalIncludingVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTNERS_TOTAL_INCLUDING_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPartnersTotalIncludingVat() {
    return partnersTotalIncludingVat;
  }




  public Customerinvoice extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Customerinvoice addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the customer invoice. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this customerinvoice object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customerinvoice customerinvoice = (Customerinvoice) o;
    return Objects.equals(this.id, customerinvoice.id) &&
        Objects.equals(this.validationStep, customerinvoice.validationStep) &&
        Objects.equals(this.code, customerinvoice.code) &&
        Objects.equals(this.type, customerinvoice.type) &&
        Objects.equals(this.accountingType, customerinvoice.accountingType) &&
        Objects.equals(this.status, customerinvoice.status) &&
        Objects.equals(this.date, customerinvoice.date) &&
        Objects.equals(this.periodDate, customerinvoice.periodDate) &&
        Objects.equals(this.entity, customerinvoice.entity) &&
        Objects.equals(this.financialEntity, customerinvoice.financialEntity) &&
        Objects.equals(this.accountingEntity, customerinvoice.accountingEntity) &&
        Objects.equals(this.project, customerinvoice.project) &&
        Objects.equals(this.secondaryProjects, customerinvoice.secondaryProjects) &&
        Objects.equals(this.customer, customerinvoice.customer) &&
        Objects.equals(this.invoicedCustomer, customerinvoice.invoicedCustomer) &&
        Objects.equals(this.contact, customerinvoice.contact) &&
        Objects.equals(this.sendingByEmailContacts, customerinvoice.sendingByEmailContacts) &&
        Objects.equals(this.companyAccount, customerinvoice.companyAccount) &&
        Objects.equals(this.description, customerinvoice.description) &&
        Objects.equals(this.comment, customerinvoice.comment) &&
        Objects.equals(this.bottomOfPage, customerinvoice.bottomOfPage) &&
        Objects.equals(this.ourReferences, customerinvoice.ourReferences) &&
        Objects.equals(this.yourReferences, customerinvoice.yourReferences) &&
        Objects.equals(this.paymentTerms, customerinvoice.paymentTerms) &&
        Objects.equals(this.dueDate, customerinvoice.dueDate) &&
        Objects.equals(this.currency, customerinvoice.currency) &&
        Objects.equals(this.currencyRate, customerinvoice.currencyRate) &&
        Objects.equals(this.creator, customerinvoice.creator) &&
        Objects.equals(this.gobalLinePrintMode, customerinvoice.gobalLinePrintMode) &&
        Objects.equals(this.gobalLineLabel, customerinvoice.gobalLineLabel) &&
        Objects.equals(this.gobalLineComment, customerinvoice.gobalLineComment) &&
        Objects.equals(this.bank, customerinvoice.bank) &&
        Objects.equals(this.fiscalPosition, customerinvoice.fiscalPosition) &&
        Objects.equals(this.vatSystem, customerinvoice.vatSystem) &&
        Objects.equals(this.bookCode, customerinvoice.bookCode) &&
        Objects.equals(this.createdOnTime, customerinvoice.createdOnTime) &&
        Objects.equals(this.updatedOnTime, customerinvoice.updatedOnTime) &&
        Objects.equals(this.updatedBy, customerinvoice.updatedBy) &&
        Objects.equals(this.linkedInvoices, customerinvoice.linkedInvoices) &&
        Objects.equals(this.creditNoteMotive, customerinvoice.creditNoteMotive) &&
        Objects.equals(this.customerOrders, customerinvoice.customerOrders) &&
        Objects.equals(this.endYearDiscount, customerinvoice.endYearDiscount) &&
        Objects.equals(this.invoiceChannel, customerinvoice.invoiceChannel) &&
        Objects.equals(this.chorusFlowNumber, customerinvoice.chorusFlowNumber) &&
        Objects.equals(this.chorusStatus, customerinvoice.chorusStatus) &&
        Objects.equals(this.chorusStatusUpdateDate, customerinvoice.chorusStatusUpdateDate) &&
        Objects.equals(this.chorusError, customerinvoice.chorusError) &&
        Objects.equals(this.chorusIssuer, customerinvoice.chorusIssuer) &&
        Objects.equals(this.chorusExportDate, customerinvoice.chorusExportDate) &&
        Objects.equals(this.chorusRecipientDepartmentCode, customerinvoice.chorusRecipientDepartmentCode) &&
        Objects.equals(this.chorusDepartmentName, customerinvoice.chorusDepartmentName) &&
        Objects.equals(this.messageToSendToChorus, customerinvoice.messageToSendToChorus) &&
        Objects.equals(this.chorusRecipient, customerinvoice.chorusRecipient) &&
        Objects.equals(this.chorusInvoicingFramework, customerinvoice.chorusInvoicingFramework) &&
        Objects.equals(this.chorusValidator, customerinvoice.chorusValidator) &&
        Objects.equals(this.chorusMarketNumber, customerinvoice.chorusMarketNumber) &&
        Objects.equals(this.chorusContractNumber, customerinvoice.chorusContractNumber) &&
        Objects.equals(this.chorusCommitmentNumber, customerinvoice.chorusCommitmentNumber) &&
        Objects.equals(this.chorusEffectiveDate, customerinvoice.chorusEffectiveDate) &&
        Objects.equals(this.clearInvoiceStatus, customerinvoice.clearInvoiceStatus) &&
        Objects.equals(this.clearInvoiceContactForAccessingPortal, customerinvoice.clearInvoiceContactForAccessingPortal) &&
        Objects.equals(this.clearInvoiceError, customerinvoice.clearInvoiceError) &&
        Objects.equals(this.amountsPrecision, customerinvoice.amountsPrecision) &&
        Objects.equals(this.printUnit, customerinvoice.printUnit) &&
        Objects.equals(this.printUnitConversionRate, customerinvoice.printUnitConversionRate) &&
        Objects.equals(this.printLevels, customerinvoice.printLevels) &&
        Objects.equals(this.phasesDisplayForPrinting, customerinvoice.phasesDisplayForPrinting) &&
        Objects.equals(this.activitiesDisplayForPrinting, customerinvoice.activitiesDisplayForPrinting) &&
        Objects.equals(this.rowsDisplayForPrinting, customerinvoice.rowsDisplayForPrinting) &&
        Objects.equals(this.printingScope, customerinvoice.printingScope) &&
        Objects.equals(this.customerReminder, customerinvoice.customerReminder) &&
        Objects.equals(this.visibility, customerinvoice.visibility) &&
        Objects.equals(this.visibilityDate, customerinvoice.visibilityDate) &&
        Objects.equals(this.totalWithoutVat, customerinvoice.totalWithoutVat) &&
        Objects.equals(this.totalVat, customerinvoice.totalVat) &&
        Objects.equals(this.totalIncludingVat, customerinvoice.totalIncludingVat) &&
        Objects.equals(this.outstandingBalance, customerinvoice.outstandingBalance) &&
        Objects.equals(this.partnersTotalWithoutVat, customerinvoice.partnersTotalWithoutVat) &&
        Objects.equals(this.partnersTotalIncludingVat, customerinvoice.partnersTotalIncludingVat) &&
        Objects.equals(this.extraData, customerinvoice.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, validationStep, code, type, accountingType, status, date, periodDate, entity, financialEntity, accountingEntity, project, secondaryProjects, customer, invoicedCustomer, contact, sendingByEmailContacts, companyAccount, description, comment, bottomOfPage, ourReferences, yourReferences, paymentTerms, dueDate, currency, currencyRate, creator, gobalLinePrintMode, gobalLineLabel, gobalLineComment, bank, fiscalPosition, vatSystem, bookCode, createdOnTime, updatedOnTime, updatedBy, linkedInvoices, creditNoteMotive, customerOrders, endYearDiscount, invoiceChannel, chorusFlowNumber, chorusStatus, chorusStatusUpdateDate, chorusError, chorusIssuer, chorusExportDate, chorusRecipientDepartmentCode, chorusDepartmentName, messageToSendToChorus, chorusRecipient, chorusInvoicingFramework, chorusValidator, chorusMarketNumber, chorusContractNumber, chorusCommitmentNumber, chorusEffectiveDate, clearInvoiceStatus, clearInvoiceContactForAccessingPortal, clearInvoiceError, amountsPrecision, printUnit, printUnitConversionRate, printLevels, phasesDisplayForPrinting, activitiesDisplayForPrinting, rowsDisplayForPrinting, printingScope, customerReminder, visibility, visibilityDate, totalWithoutVat, totalVat, totalIncludingVat, outstandingBalance, partnersTotalWithoutVat, partnersTotalIncludingVat, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customerinvoice {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    validationStep: ").append(toIndentedString(validationStep)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    accountingType: ").append(toIndentedString(accountingType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    periodDate: ").append(toIndentedString(periodDate)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    financialEntity: ").append(toIndentedString(financialEntity)).append("\n");
    sb.append("    accountingEntity: ").append(toIndentedString(accountingEntity)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    secondaryProjects: ").append(toIndentedString(secondaryProjects)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    invoicedCustomer: ").append(toIndentedString(invoicedCustomer)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    sendingByEmailContacts: ").append(toIndentedString(sendingByEmailContacts)).append("\n");
    sb.append("    companyAccount: ").append(toIndentedString(companyAccount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    bottomOfPage: ").append(toIndentedString(bottomOfPage)).append("\n");
    sb.append("    ourReferences: ").append(toIndentedString(ourReferences)).append("\n");
    sb.append("    yourReferences: ").append(toIndentedString(yourReferences)).append("\n");
    sb.append("    paymentTerms: ").append(toIndentedString(paymentTerms)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currencyRate: ").append(toIndentedString(currencyRate)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    gobalLinePrintMode: ").append(toIndentedString(gobalLinePrintMode)).append("\n");
    sb.append("    gobalLineLabel: ").append(toIndentedString(gobalLineLabel)).append("\n");
    sb.append("    gobalLineComment: ").append(toIndentedString(gobalLineComment)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("    fiscalPosition: ").append(toIndentedString(fiscalPosition)).append("\n");
    sb.append("    vatSystem: ").append(toIndentedString(vatSystem)).append("\n");
    sb.append("    bookCode: ").append(toIndentedString(bookCode)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    linkedInvoices: ").append(toIndentedString(linkedInvoices)).append("\n");
    sb.append("    creditNoteMotive: ").append(toIndentedString(creditNoteMotive)).append("\n");
    sb.append("    customerOrders: ").append(toIndentedString(customerOrders)).append("\n");
    sb.append("    endYearDiscount: ").append(toIndentedString(endYearDiscount)).append("\n");
    sb.append("    invoiceChannel: ").append(toIndentedString(invoiceChannel)).append("\n");
    sb.append("    chorusFlowNumber: ").append(toIndentedString(chorusFlowNumber)).append("\n");
    sb.append("    chorusStatus: ").append(toIndentedString(chorusStatus)).append("\n");
    sb.append("    chorusStatusUpdateDate: ").append(toIndentedString(chorusStatusUpdateDate)).append("\n");
    sb.append("    chorusError: ").append(toIndentedString(chorusError)).append("\n");
    sb.append("    chorusIssuer: ").append(toIndentedString(chorusIssuer)).append("\n");
    sb.append("    chorusExportDate: ").append(toIndentedString(chorusExportDate)).append("\n");
    sb.append("    chorusRecipientDepartmentCode: ").append(toIndentedString(chorusRecipientDepartmentCode)).append("\n");
    sb.append("    chorusDepartmentName: ").append(toIndentedString(chorusDepartmentName)).append("\n");
    sb.append("    messageToSendToChorus: ").append(toIndentedString(messageToSendToChorus)).append("\n");
    sb.append("    chorusRecipient: ").append(toIndentedString(chorusRecipient)).append("\n");
    sb.append("    chorusInvoicingFramework: ").append(toIndentedString(chorusInvoicingFramework)).append("\n");
    sb.append("    chorusValidator: ").append(toIndentedString(chorusValidator)).append("\n");
    sb.append("    chorusMarketNumber: ").append(toIndentedString(chorusMarketNumber)).append("\n");
    sb.append("    chorusContractNumber: ").append(toIndentedString(chorusContractNumber)).append("\n");
    sb.append("    chorusCommitmentNumber: ").append(toIndentedString(chorusCommitmentNumber)).append("\n");
    sb.append("    chorusEffectiveDate: ").append(toIndentedString(chorusEffectiveDate)).append("\n");
    sb.append("    clearInvoiceStatus: ").append(toIndentedString(clearInvoiceStatus)).append("\n");
    sb.append("    clearInvoiceContactForAccessingPortal: ").append(toIndentedString(clearInvoiceContactForAccessingPortal)).append("\n");
    sb.append("    clearInvoiceError: ").append(toIndentedString(clearInvoiceError)).append("\n");
    sb.append("    amountsPrecision: ").append(toIndentedString(amountsPrecision)).append("\n");
    sb.append("    printUnit: ").append(toIndentedString(printUnit)).append("\n");
    sb.append("    printUnitConversionRate: ").append(toIndentedString(printUnitConversionRate)).append("\n");
    sb.append("    printLevels: ").append(toIndentedString(printLevels)).append("\n");
    sb.append("    phasesDisplayForPrinting: ").append(toIndentedString(phasesDisplayForPrinting)).append("\n");
    sb.append("    activitiesDisplayForPrinting: ").append(toIndentedString(activitiesDisplayForPrinting)).append("\n");
    sb.append("    rowsDisplayForPrinting: ").append(toIndentedString(rowsDisplayForPrinting)).append("\n");
    sb.append("    printingScope: ").append(toIndentedString(printingScope)).append("\n");
    sb.append("    customerReminder: ").append(toIndentedString(customerReminder)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    visibilityDate: ").append(toIndentedString(visibilityDate)).append("\n");
    sb.append("    totalWithoutVat: ").append(toIndentedString(totalWithoutVat)).append("\n");
    sb.append("    totalVat: ").append(toIndentedString(totalVat)).append("\n");
    sb.append("    totalIncludingVat: ").append(toIndentedString(totalIncludingVat)).append("\n");
    sb.append("    outstandingBalance: ").append(toIndentedString(outstandingBalance)).append("\n");
    sb.append("    partnersTotalWithoutVat: ").append(toIndentedString(partnersTotalWithoutVat)).append("\n");
    sb.append("    partnersTotalIncludingVat: ").append(toIndentedString(partnersTotalIncludingVat)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

