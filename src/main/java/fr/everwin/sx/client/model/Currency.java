/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.Objects;


/**
 * Currency
 */
@JsonPropertyOrder({
  Currency.JSON_PROPERTY_ID,
  Currency.JSON_PROPERTY_CODE,
  Currency.JSON_PROPERTY_LABEL,
  Currency.JSON_PROPERTY_RATE,
  Currency.JSON_PROPERTY_ENTITY,
  Currency.JSON_PROPERTY_IS_ARCHIVED,
  Currency.JSON_PROPERTY_IS_DEFAULT,
  Currency.JSON_PROPERTY_FORMAT,
  Currency.JSON_PROPERTY_METHOD,
  Currency.JSON_PROPERTY_TYPE
})
@JsonTypeName("currency")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class Currency {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_RATE = "rate";
  private Double rate;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private EntityDataLink entity;

  /**
   * Indicates if the currency is still used or not.  0 : Active, 10 : Unavailable
   */
  public enum IsArchivedEnum {
    NUMBER_0(0),
    
    NUMBER_10(10);

    private Integer value;

    IsArchivedEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IsArchivedEnum fromValue(Integer value) {
      for (IsArchivedEnum b : IsArchivedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IS_ARCHIVED = "isArchived";
  private IsArchivedEnum isArchived;

  /**
   * Indicates if the currency is the default one. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Currencies-Defaultcurrency\&quot;);&#39;&gt;Default currency values&lt;/a&gt; in System data section
   */
  public enum IsDefaultEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    IsDefaultEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IsDefaultEnum fromValue(Integer value) {
      for (IsDefaultEnum b : IsDefaultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IS_DEFAULT = "isDefault";
  private IsDefaultEnum isDefault;

  public static final String JSON_PROPERTY_FORMAT = "format";
  private String format;

  public static final String JSON_PROPERTY_METHOD = "method";
  private Integer method;

  public static final String JSON_PROPERTY_TYPE = "type";
  private Integer type;

  public Currency() { 
  }

  @JsonCreator
  public Currency(
    @JsonProperty(JSON_PROPERTY_TYPE) Integer type
  ) {
    this();
    this.type = type;
  }

  public Currency id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Currency code(String code) {
    this.code = code;
    return this;
  }

   /**
   * ISO code of the currency
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Currency label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label of the currency
   * @return label
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public Currency rate(Double rate) {
    this.rate = rate;
    return this;
  }

   /**
   * Main currency rate
   * @return rate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getRate() {
    return rate;
  }


  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRate(Double rate) {
    this.rate = rate;
  }


  public Currency entity(EntityDataLink entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntity(EntityDataLink entity) {
    this.entity = entity;
  }


  public Currency isArchived(IsArchivedEnum isArchived) {
    this.isArchived = isArchived;
    return this;
  }

   /**
   * Indicates if the currency is still used or not.  0 : Active, 10 : Unavailable
   * @return isArchived
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IsArchivedEnum getIsArchived() {
    return isArchived;
  }


  @JsonProperty(JSON_PROPERTY_IS_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsArchived(IsArchivedEnum isArchived) {
    this.isArchived = isArchived;
  }


  public Currency isDefault(IsDefaultEnum isDefault) {
    this.isDefault = isDefault;
    return this;
  }

   /**
   * Indicates if the currency is the default one. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Currencies-Defaultcurrency\&quot;);&#39;&gt;Default currency values&lt;/a&gt; in System data section
   * @return isDefault
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IsDefaultEnum getIsDefault() {
    return isDefault;
  }


  @JsonProperty(JSON_PROPERTY_IS_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDefault(IsDefaultEnum isDefault) {
    this.isDefault = isDefault;
  }


  public Currency format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Currency format
   * @return format
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFormat() {
    return format;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormat(String format) {
    this.format = format;
  }


  public Currency method(Integer method) {
    this.method = method;
    return this;
  }

   /**
   * Currency quotation method. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Currencies-Quotationmethod\&quot;);&#39;&gt;Quotation method values&lt;/a&gt; in System data section
   * @return method
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(Integer method) {
    this.method = method;
  }


   /**
   * Indicates if the currency is generic or is an entity quotation.  0 : Generic, 1 : Entity quotation
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getType() {
    return type;
  }




  /**
   * Return true if this currency object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Currency currency = (Currency) o;
    return Objects.equals(this.id, currency.id) &&
        Objects.equals(this.code, currency.code) &&
        Objects.equals(this.label, currency.label) &&
        Objects.equals(this.rate, currency.rate) &&
        Objects.equals(this.entity, currency.entity) &&
        Objects.equals(this.isArchived, currency.isArchived) &&
        Objects.equals(this.isDefault, currency.isDefault) &&
        Objects.equals(this.format, currency.format) &&
        Objects.equals(this.method, currency.method) &&
        Objects.equals(this.type, currency.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, label, rate, entity, isArchived, isDefault, format, method, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Currency {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

