/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Opportunity
 */
@JsonPropertyOrder({
  Opportunity.JSON_PROPERTY_ID,
  Opportunity.JSON_PROPERTY_CODE,
  Opportunity.JSON_PROPERTY_LABEL,
  Opportunity.JSON_PROPERTY_CUSTOMER,
  Opportunity.JSON_PROPERTY_CONTRIBUTOR,
  Opportunity.JSON_PROPERTY_MAIN_CONTACT,
  Opportunity.JSON_PROPERTY_SECONDARY_CONTACTS,
  Opportunity.JSON_PROPERTY_ENTITY,
  Opportunity.JSON_PROPERTY_FINANCIAL_ENTITY,
  Opportunity.JSON_PROPERTY_PROJECT_DIRECTOR,
  Opportunity.JSON_PROPERTY_PROJECT_MANAGER,
  Opportunity.JSON_PROPERTY_OPPORTUNITY_MANAGER,
  Opportunity.JSON_PROPERTY_ADMINISTRATOR,
  Opportunity.JSON_PROPERTY_CATEGORY,
  Opportunity.JSON_PROPERTY_SUB_CATEGORY,
  Opportunity.JSON_PROPERTY_COMMERCIAL_STATUS,
  Opportunity.JSON_PROPERTY_INVOICING_MODE,
  Opportunity.JSON_PROPERTY_SITE,
  Opportunity.JSON_PROPERTY_SALES_CYCLE,
  Opportunity.JSON_PROPERTY_SALES_STEP,
  Opportunity.JSON_PROPERTY_SPANCO,
  Opportunity.JSON_PROPERTY_PROPOSAL_AMOUNT,
  Opportunity.JSON_PROPERTY_SIGNATURE_DATE,
  Opportunity.JSON_PROPERTY_INITIAL_START_DATE,
  Opportunity.JSON_PROPERTY_INITIAL_END_DATE,
  Opportunity.JSON_PROPERTY_ESTIMATED_PROBABILITY,
  Opportunity.JSON_PROPERTY_CALCULATED_PROBABILITY,
  Opportunity.JSON_PROPERTY_ESTIMATED_CUSTOMER_BUDGET,
  Opportunity.JSON_PROPERTY_RESPONSE_DEADLINE,
  Opportunity.JSON_PROPERTY_DURATION_UNIT,
  Opportunity.JSON_PROPERTY_UPDATED_BY,
  Opportunity.JSON_PROPERTY_UPDATED_ON_TIME,
  Opportunity.JSON_PROPERTY_CREATED_ON_TIME,
  Opportunity.JSON_PROPERTY_MANAGEMENT_CURRENCY,
  Opportunity.JSON_PROPERTY_ACCOUNT_CURRENCY,
  Opportunity.JSON_PROPERTY_REPORTING_CURRENCY,
  Opportunity.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("opportunity")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class Opportunity {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private CompanyDataLink customer;

  public static final String JSON_PROPERTY_CONTRIBUTOR = "contributor";
  private CompanyDataLink contributor;

  public static final String JSON_PROPERTY_MAIN_CONTACT = "mainContact";
  private ContactResponsibilityDataLink mainContact;

  public static final String JSON_PROPERTY_SECONDARY_CONTACTS = "secondaryContacts";
  private List<ContactResponsibilityDataLink> secondaryContacts;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private EntityDataLink entity;

  public static final String JSON_PROPERTY_FINANCIAL_ENTITY = "financialEntity";
  private EntityDataLink financialEntity;

  public static final String JSON_PROPERTY_PROJECT_DIRECTOR = "projectDirector";
  private EmployeeDataLink projectDirector;

  public static final String JSON_PROPERTY_PROJECT_MANAGER = "projectManager";
  private EmployeeDataLink projectManager;

  public static final String JSON_PROPERTY_OPPORTUNITY_MANAGER = "opportunityManager";
  private EmployeeDataLink opportunityManager;

  public static final String JSON_PROPERTY_ADMINISTRATOR = "administrator";
  private EmployeeDataLink administrator;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private ProjectCategoryDataLink category;

  public static final String JSON_PROPERTY_SUB_CATEGORY = "subCategory";
  private ProjectSubCategoryDataLink subCategory;

  public static final String JSON_PROPERTY_COMMERCIAL_STATUS = "commercialStatus";
  private Integer commercialStatus;

  public static final String JSON_PROPERTY_INVOICING_MODE = "invoicingMode";
  private Integer invoicingMode;

  public static final String JSON_PROPERTY_SITE = "site";
  private DataLink site;

  public static final String JSON_PROPERTY_SALES_CYCLE = "salesCycle";
  private DataLink salesCycle;

  public static final String JSON_PROPERTY_SALES_STEP = "salesStep";
  private DataLink salesStep;

  public static final String JSON_PROPERTY_SPANCO = "spanco";
  private SpancoStepDataLink spanco;

  public static final String JSON_PROPERTY_PROPOSAL_AMOUNT = "proposalAmount";
  private OpportunityMultiCurrency proposalAmount;

  public static final String JSON_PROPERTY_SIGNATURE_DATE = "signatureDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime signatureDate;

  public static final String JSON_PROPERTY_INITIAL_START_DATE = "initialStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialStartDate;

  public static final String JSON_PROPERTY_INITIAL_END_DATE = "initialEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialEndDate;

  /**
   * Estimated probability of the opportunity. 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100 are possible values
   */
  public enum EstimatedProbabilityEnum {
    NUMBER_0(0),
    
    NUMBER_10(10),
    
    NUMBER_20(20),
    
    NUMBER_30(30),
    
    NUMBER_40(40),
    
    NUMBER_50(50),
    
    NUMBER_60(60),
    
    NUMBER_70(70),
    
    NUMBER_80(80),
    
    NUMBER_90(90),
    
    NUMBER_100(100);

    private Integer value;

    EstimatedProbabilityEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EstimatedProbabilityEnum fromValue(Integer value) {
      for (EstimatedProbabilityEnum b : EstimatedProbabilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ESTIMATED_PROBABILITY = "estimatedProbability";
  private EstimatedProbabilityEnum estimatedProbability;

  public static final String JSON_PROPERTY_CALCULATED_PROBABILITY = "calculatedProbability";
  private Double calculatedProbability;

  public static final String JSON_PROPERTY_ESTIMATED_CUSTOMER_BUDGET = "estimatedCustomerBudget";
  private OpportunityMultiCurrency estimatedCustomerBudget;

  public static final String JSON_PROPERTY_RESPONSE_DEADLINE = "responseDeadline";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime responseDeadline;

  public static final String JSON_PROPERTY_DURATION_UNIT = "durationUnit";
  private Integer durationUnit;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_MANAGEMENT_CURRENCY = "managementCurrency";
  private String managementCurrency;

  public static final String JSON_PROPERTY_ACCOUNT_CURRENCY = "accountCurrency";
  private String accountCurrency;

  public static final String JSON_PROPERTY_REPORTING_CURRENCY = "reportingCurrency";
  private String reportingCurrency;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Opportunity() { 
  }

  @JsonCreator
  public Opportunity(
    @JsonProperty(JSON_PROPERTY_CALCULATED_PROBABILITY) Double calculatedProbability, 
    @JsonProperty(JSON_PROPERTY_UPDATED_BY) String updatedBy, 
    @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME) java.time.LocalDateTime updatedOnTime, 
    @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME) java.time.LocalDateTime createdOnTime
  ) {
    this();
    this.calculatedProbability = calculatedProbability;
    this.updatedBy = updatedBy;
    this.updatedOnTime = updatedOnTime;
    this.createdOnTime = createdOnTime;
  }

  public Opportunity id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Opportunity code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the opportunity
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Opportunity label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Mandatory label of the opportunity
   * @return label
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLabel(String label) {
    this.label = label;
  }


  public Opportunity customer(CompanyDataLink customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CompanyDataLink getCustomer() {
    return customer;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomer(CompanyDataLink customer) {
    this.customer = customer;
  }


  public Opportunity contributor(CompanyDataLink contributor) {
    this.contributor = contributor;
    return this;
  }

   /**
   * Get contributor
   * @return contributor
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTRIBUTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyDataLink getContributor() {
    return contributor;
  }


  @JsonProperty(JSON_PROPERTY_CONTRIBUTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContributor(CompanyDataLink contributor) {
    this.contributor = contributor;
  }


  public Opportunity mainContact(ContactResponsibilityDataLink mainContact) {
    this.mainContact = mainContact;
    return this;
  }

   /**
   * Get mainContact
   * @return mainContact
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContactResponsibilityDataLink getMainContact() {
    return mainContact;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainContact(ContactResponsibilityDataLink mainContact) {
    this.mainContact = mainContact;
  }


  public Opportunity secondaryContacts(List<ContactResponsibilityDataLink> secondaryContacts) {
    this.secondaryContacts = secondaryContacts;
    return this;
  }

  public Opportunity addSecondaryContactsItem(ContactResponsibilityDataLink secondaryContactsItem) {
    if (this.secondaryContacts == null) {
      this.secondaryContacts = new ArrayList<>();
    }
    this.secondaryContacts.add(secondaryContactsItem);
    return this;
  }

   /**
   * Link to the secondary contacts of the opportunity. For more informations see the /contacts resource
   * @return secondaryContacts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ContactResponsibilityDataLink> getSecondaryContacts() {
    return secondaryContacts;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryContacts(List<ContactResponsibilityDataLink> secondaryContacts) {
    this.secondaryContacts = secondaryContacts;
  }


  public Opportunity entity(EntityDataLink entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EntityDataLink getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntity(EntityDataLink entity) {
    this.entity = entity;
  }


  public Opportunity financialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
    return this;
  }

   /**
   * Get financialEntity
   * @return financialEntity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getFinancialEntity() {
    return financialEntity;
  }


  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinancialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
  }


  public Opportunity projectDirector(EmployeeDataLink projectDirector) {
    this.projectDirector = projectDirector;
    return this;
  }

   /**
   * Get projectDirector
   * @return projectDirector
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_DIRECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getProjectDirector() {
    return projectDirector;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_DIRECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectDirector(EmployeeDataLink projectDirector) {
    this.projectDirector = projectDirector;
  }


  public Opportunity projectManager(EmployeeDataLink projectManager) {
    this.projectManager = projectManager;
    return this;
  }

   /**
   * Get projectManager
   * @return projectManager
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getProjectManager() {
    return projectManager;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectManager(EmployeeDataLink projectManager) {
    this.projectManager = projectManager;
  }


  public Opportunity opportunityManager(EmployeeDataLink opportunityManager) {
    this.opportunityManager = opportunityManager;
    return this;
  }

   /**
   * Get opportunityManager
   * @return opportunityManager
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPPORTUNITY_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getOpportunityManager() {
    return opportunityManager;
  }


  @JsonProperty(JSON_PROPERTY_OPPORTUNITY_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpportunityManager(EmployeeDataLink opportunityManager) {
    this.opportunityManager = opportunityManager;
  }


  public Opportunity administrator(EmployeeDataLink administrator) {
    this.administrator = administrator;
    return this;
  }

   /**
   * Get administrator
   * @return administrator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getAdministrator() {
    return administrator;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrator(EmployeeDataLink administrator) {
    this.administrator = administrator;
  }


  public Opportunity category(ProjectCategoryDataLink category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectCategoryDataLink getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(ProjectCategoryDataLink category) {
    this.category = category;
  }


  public Opportunity subCategory(ProjectSubCategoryDataLink subCategory) {
    this.subCategory = subCategory;
    return this;
  }

   /**
   * Get subCategory
   * @return subCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectSubCategoryDataLink getSubCategory() {
    return subCategory;
  }


  @JsonProperty(JSON_PROPERTY_SUB_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubCategory(ProjectSubCategoryDataLink subCategory) {
    this.subCategory = subCategory;
  }


  public Opportunity commercialStatus(Integer commercialStatus) {
    this.commercialStatus = commercialStatus;
    return this;
  }

   /**
   * Commercial status of the opportunity. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Opportunities-CommercialStatus\&quot;);&#39;&gt;Opportunities Commercial Status&lt;/a&gt; in System data section
   * @return commercialStatus
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMMERCIAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCommercialStatus() {
    return commercialStatus;
  }


  @JsonProperty(JSON_PROPERTY_COMMERCIAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCommercialStatus(Integer commercialStatus) {
    this.commercialStatus = commercialStatus;
  }


  public Opportunity invoicingMode(Integer invoicingMode) {
    this.invoicingMode = invoicingMode;
    return this;
  }

   /**
   * Invoicing mode of the opportunity. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Projects-InvoicingModes\&quot;);&#39;&gt;Projects Invoicing Modes&lt;/a&gt; in System data section
   * @return invoicingMode
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INVOICING_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getInvoicingMode() {
    return invoicingMode;
  }


  @JsonProperty(JSON_PROPERTY_INVOICING_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInvoicingMode(Integer invoicingMode) {
    this.invoicingMode = invoicingMode;
  }


  public Opportunity site(DataLink site) {
    this.site = site;
    return this;
  }

   /**
   * Get site
   * @return site
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getSite() {
    return site;
  }


  @JsonProperty(JSON_PROPERTY_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSite(DataLink site) {
    this.site = site;
  }


  public Opportunity salesCycle(DataLink salesCycle) {
    this.salesCycle = salesCycle;
    return this;
  }

   /**
   * Get salesCycle
   * @return salesCycle
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SALES_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getSalesCycle() {
    return salesCycle;
  }


  @JsonProperty(JSON_PROPERTY_SALES_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSalesCycle(DataLink salesCycle) {
    this.salesCycle = salesCycle;
  }


  public Opportunity salesStep(DataLink salesStep) {
    this.salesStep = salesStep;
    return this;
  }

   /**
   * Get salesStep
   * @return salesStep
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SALES_STEP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getSalesStep() {
    return salesStep;
  }


  @JsonProperty(JSON_PROPERTY_SALES_STEP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSalesStep(DataLink salesStep) {
    this.salesStep = salesStep;
  }


  public Opportunity spanco(SpancoStepDataLink spanco) {
    this.spanco = spanco;
    return this;
  }

   /**
   * Get spanco
   * @return spanco
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPANCO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SpancoStepDataLink getSpanco() {
    return spanco;
  }


  @JsonProperty(JSON_PROPERTY_SPANCO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpanco(SpancoStepDataLink spanco) {
    this.spanco = spanco;
  }


  public Opportunity proposalAmount(OpportunityMultiCurrency proposalAmount) {
    this.proposalAmount = proposalAmount;
    return this;
  }

   /**
   * Get proposalAmount
   * @return proposalAmount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPOSAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OpportunityMultiCurrency getProposalAmount() {
    return proposalAmount;
  }


  @JsonProperty(JSON_PROPERTY_PROPOSAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProposalAmount(OpportunityMultiCurrency proposalAmount) {
    this.proposalAmount = proposalAmount;
  }


  public Opportunity signatureDate(java.time.LocalDateTime signatureDate) {
    this.signatureDate = signatureDate;
    return this;
  }

   /**
   * Date of signature of the opportunity
   * @return signatureDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNATURE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getSignatureDate() {
    return signatureDate;
  }


  @JsonProperty(JSON_PROPERTY_SIGNATURE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignatureDate(java.time.LocalDateTime signatureDate) {
    this.signatureDate = signatureDate;
  }


  public Opportunity initialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
    return this;
  }

   /**
   * Initial start date of the opportunity
   * @return initialStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialStartDate() {
    return initialStartDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
  }


  public Opportunity initialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
    return this;
  }

   /**
   * Initial end date of the opportunity
   * @return initialEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialEndDate() {
    return initialEndDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
  }


  public Opportunity estimatedProbability(EstimatedProbabilityEnum estimatedProbability) {
    this.estimatedProbability = estimatedProbability;
    return this;
  }

   /**
   * Estimated probability of the opportunity. 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100 are possible values
   * @return estimatedProbability
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESTIMATED_PROBABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EstimatedProbabilityEnum getEstimatedProbability() {
    return estimatedProbability;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATED_PROBABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimatedProbability(EstimatedProbabilityEnum estimatedProbability) {
    this.estimatedProbability = estimatedProbability;
  }


   /**
   * Calculated probability of the opportunity
   * @return calculatedProbability
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CALCULATED_PROBABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCalculatedProbability() {
    return calculatedProbability;
  }




  public Opportunity estimatedCustomerBudget(OpportunityMultiCurrency estimatedCustomerBudget) {
    this.estimatedCustomerBudget = estimatedCustomerBudget;
    return this;
  }

   /**
   * Get estimatedCustomerBudget
   * @return estimatedCustomerBudget
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESTIMATED_CUSTOMER_BUDGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OpportunityMultiCurrency getEstimatedCustomerBudget() {
    return estimatedCustomerBudget;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATED_CUSTOMER_BUDGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimatedCustomerBudget(OpportunityMultiCurrency estimatedCustomerBudget) {
    this.estimatedCustomerBudget = estimatedCustomerBudget;
  }


  public Opportunity responseDeadline(java.time.LocalDateTime responseDeadline) {
    this.responseDeadline = responseDeadline;
    return this;
  }

   /**
   * Response deadline  of the opportunity
   * @return responseDeadline
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_DEADLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getResponseDeadline() {
    return responseDeadline;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_DEADLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseDeadline(java.time.LocalDateTime responseDeadline) {
    this.responseDeadline = responseDeadline;
  }


  public Opportunity durationUnit(Integer durationUnit) {
    this.durationUnit = durationUnit;
    return this;
  }

   /**
   * Unit of duration of the opportunity
   * @return durationUnit
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DURATION_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDurationUnit() {
    return durationUnit;
  }


  @JsonProperty(JSON_PROPERTY_DURATION_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDurationUnit(Integer durationUnit) {
    this.durationUnit = durationUnit;
  }


   /**
   * Login of the user doing the last update on the opportunity
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }




   /**
   * Date &amp; time of the last update of the contact
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }




   /**
   * Date &amp; time of creation of the contact
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }




  public Opportunity managementCurrency(String managementCurrency) {
    this.managementCurrency = managementCurrency;
    return this;
  }

   /**
   * Management currency (ISO code)
   * @return managementCurrency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManagementCurrency() {
    return managementCurrency;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementCurrency(String managementCurrency) {
    this.managementCurrency = managementCurrency;
  }


  public Opportunity accountCurrency(String accountCurrency) {
    this.accountCurrency = accountCurrency;
    return this;
  }

   /**
   * Account currency (ISO code)
   * @return accountCurrency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountCurrency() {
    return accountCurrency;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountCurrency(String accountCurrency) {
    this.accountCurrency = accountCurrency;
  }


  public Opportunity reportingCurrency(String reportingCurrency) {
    this.reportingCurrency = reportingCurrency;
    return this;
  }

   /**
   * Reporting currency (ISO code)
   * @return reportingCurrency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORTING_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportingCurrency() {
    return reportingCurrency;
  }


  @JsonProperty(JSON_PROPERTY_REPORTING_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportingCurrency(String reportingCurrency) {
    this.reportingCurrency = reportingCurrency;
  }


  public Opportunity extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Opportunity addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the company. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this opportunity object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Opportunity opportunity = (Opportunity) o;
    return Objects.equals(this.id, opportunity.id) &&
        Objects.equals(this.code, opportunity.code) &&
        Objects.equals(this.label, opportunity.label) &&
        Objects.equals(this.customer, opportunity.customer) &&
        Objects.equals(this.contributor, opportunity.contributor) &&
        Objects.equals(this.mainContact, opportunity.mainContact) &&
        Objects.equals(this.secondaryContacts, opportunity.secondaryContacts) &&
        Objects.equals(this.entity, opportunity.entity) &&
        Objects.equals(this.financialEntity, opportunity.financialEntity) &&
        Objects.equals(this.projectDirector, opportunity.projectDirector) &&
        Objects.equals(this.projectManager, opportunity.projectManager) &&
        Objects.equals(this.opportunityManager, opportunity.opportunityManager) &&
        Objects.equals(this.administrator, opportunity.administrator) &&
        Objects.equals(this.category, opportunity.category) &&
        Objects.equals(this.subCategory, opportunity.subCategory) &&
        Objects.equals(this.commercialStatus, opportunity.commercialStatus) &&
        Objects.equals(this.invoicingMode, opportunity.invoicingMode) &&
        Objects.equals(this.site, opportunity.site) &&
        Objects.equals(this.salesCycle, opportunity.salesCycle) &&
        Objects.equals(this.salesStep, opportunity.salesStep) &&
        Objects.equals(this.spanco, opportunity.spanco) &&
        Objects.equals(this.proposalAmount, opportunity.proposalAmount) &&
        Objects.equals(this.signatureDate, opportunity.signatureDate) &&
        Objects.equals(this.initialStartDate, opportunity.initialStartDate) &&
        Objects.equals(this.initialEndDate, opportunity.initialEndDate) &&
        Objects.equals(this.estimatedProbability, opportunity.estimatedProbability) &&
        Objects.equals(this.calculatedProbability, opportunity.calculatedProbability) &&
        Objects.equals(this.estimatedCustomerBudget, opportunity.estimatedCustomerBudget) &&
        Objects.equals(this.responseDeadline, opportunity.responseDeadline) &&
        Objects.equals(this.durationUnit, opportunity.durationUnit) &&
        Objects.equals(this.updatedBy, opportunity.updatedBy) &&
        Objects.equals(this.updatedOnTime, opportunity.updatedOnTime) &&
        Objects.equals(this.createdOnTime, opportunity.createdOnTime) &&
        Objects.equals(this.managementCurrency, opportunity.managementCurrency) &&
        Objects.equals(this.accountCurrency, opportunity.accountCurrency) &&
        Objects.equals(this.reportingCurrency, opportunity.reportingCurrency) &&
        Objects.equals(this.extraData, opportunity.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, label, customer, contributor, mainContact, secondaryContacts, entity, financialEntity, projectDirector, projectManager, opportunityManager, administrator, category, subCategory, commercialStatus, invoicingMode, site, salesCycle, salesStep, spanco, proposalAmount, signatureDate, initialStartDate, initialEndDate, estimatedProbability, calculatedProbability, estimatedCustomerBudget, responseDeadline, durationUnit, updatedBy, updatedOnTime, createdOnTime, managementCurrency, accountCurrency, reportingCurrency, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Opportunity {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    contributor: ").append(toIndentedString(contributor)).append("\n");
    sb.append("    mainContact: ").append(toIndentedString(mainContact)).append("\n");
    sb.append("    secondaryContacts: ").append(toIndentedString(secondaryContacts)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    financialEntity: ").append(toIndentedString(financialEntity)).append("\n");
    sb.append("    projectDirector: ").append(toIndentedString(projectDirector)).append("\n");
    sb.append("    projectManager: ").append(toIndentedString(projectManager)).append("\n");
    sb.append("    opportunityManager: ").append(toIndentedString(opportunityManager)).append("\n");
    sb.append("    administrator: ").append(toIndentedString(administrator)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    subCategory: ").append(toIndentedString(subCategory)).append("\n");
    sb.append("    commercialStatus: ").append(toIndentedString(commercialStatus)).append("\n");
    sb.append("    invoicingMode: ").append(toIndentedString(invoicingMode)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    salesCycle: ").append(toIndentedString(salesCycle)).append("\n");
    sb.append("    salesStep: ").append(toIndentedString(salesStep)).append("\n");
    sb.append("    spanco: ").append(toIndentedString(spanco)).append("\n");
    sb.append("    proposalAmount: ").append(toIndentedString(proposalAmount)).append("\n");
    sb.append("    signatureDate: ").append(toIndentedString(signatureDate)).append("\n");
    sb.append("    initialStartDate: ").append(toIndentedString(initialStartDate)).append("\n");
    sb.append("    initialEndDate: ").append(toIndentedString(initialEndDate)).append("\n");
    sb.append("    estimatedProbability: ").append(toIndentedString(estimatedProbability)).append("\n");
    sb.append("    calculatedProbability: ").append(toIndentedString(calculatedProbability)).append("\n");
    sb.append("    estimatedCustomerBudget: ").append(toIndentedString(estimatedCustomerBudget)).append("\n");
    sb.append("    responseDeadline: ").append(toIndentedString(responseDeadline)).append("\n");
    sb.append("    durationUnit: ").append(toIndentedString(durationUnit)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    managementCurrency: ").append(toIndentedString(managementCurrency)).append("\n");
    sb.append("    accountCurrency: ").append(toIndentedString(accountCurrency)).append("\n");
    sb.append("    reportingCurrency: ").append(toIndentedString(reportingCurrency)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

