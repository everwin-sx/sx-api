/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Entity
 */
@JsonPropertyOrder({
  Entity.JSON_PROPERTY_ID,
  Entity.JSON_PROPERTY_CODE,
  Entity.JSON_PROPERTY_BUSINESS_NAME,
  Entity.JSON_PROPERTY_IS_ARCHIVED,
  Entity.JSON_PROPERTY_ARCHIVED_DATE,
  Entity.JSON_PROPERTY_IS_ACCOUNTING,
  Entity.JSON_PROPERTY_TYPE,
  Entity.JSON_PROPERTY_POSITION,
  Entity.JSON_PROPERTY_PARENT,
  Entity.JSON_PROPERTY_ACCOUNTING_ID,
  Entity.JSON_PROPERTY_IS_ANALYTICAL,
  Entity.JSON_PROPERTY_PHONE,
  Entity.JSON_PROPERTY_FAX,
  Entity.JSON_PROPERTY_VAT_NUMBER,
  Entity.JSON_PROPERTY_ACCOUNT_CURRENCY,
  Entity.JSON_PROPERTY_MANAGE_CURRENCY,
  Entity.JSON_PROPERTY_REPORT_CURRENCY,
  Entity.JSON_PROPERTY_MANAGERS,
  Entity.JSON_PROPERTY_NAME
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class Entity {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_BUSINESS_NAME = "businessName";
  private String businessName;

  /**
   * Indicates if the entity is still used or not. 0 : No, 50 : Yes
   */
  public enum IsArchivedEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    IsArchivedEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IsArchivedEnum fromValue(Integer value) {
      for (IsArchivedEnum b : IsArchivedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IS_ARCHIVED = "isArchived";
  private IsArchivedEnum isArchived;

  public static final String JSON_PROPERTY_ARCHIVED_DATE = "archivedDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime archivedDate;

  public static final String JSON_PROPERTY_IS_ACCOUNTING = "isAccounting";
  private Integer isAccounting;

  public static final String JSON_PROPERTY_TYPE = "type";
  private Integer type;

  public static final String JSON_PROPERTY_POSITION = "position";
  private Integer position;

  public static final String JSON_PROPERTY_PARENT = "parent";
  private EntityDataLink parent;

  public static final String JSON_PROPERTY_ACCOUNTING_ID = "accountingId";
  private String accountingId;

  public static final String JSON_PROPERTY_IS_ANALYTICAL = "isAnalytical";
  private Integer isAnalytical;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private String phone;

  public static final String JSON_PROPERTY_FAX = "fax";
  private String fax;

  public static final String JSON_PROPERTY_VAT_NUMBER = "vatNumber";
  private String vatNumber;

  public static final String JSON_PROPERTY_ACCOUNT_CURRENCY = "accountCurrency";
  private DataLink accountCurrency;

  public static final String JSON_PROPERTY_MANAGE_CURRENCY = "manageCurrency";
  private DataLink manageCurrency;

  public static final String JSON_PROPERTY_REPORT_CURRENCY = "reportCurrency";
  private DataLink reportCurrency;

  public static final String JSON_PROPERTY_MANAGERS = "managers";
  private List<EmployeeDataLink> managers;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public Entity() { 
  }

  @JsonCreator
  public Entity(
    @JsonProperty(JSON_PROPERTY_ARCHIVED_DATE) java.time.LocalDateTime archivedDate
  ) {
    this();
    this.archivedDate = archivedDate;
  }

  public Entity id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Entity code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Unique entity code assigned to this entity
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Entity businessName(String businessName) {
    this.businessName = businessName;
    return this;
  }

   /**
   * Business name of the entity
   * @return businessName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUSINESS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBusinessName() {
    return businessName;
  }


  @JsonProperty(JSON_PROPERTY_BUSINESS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBusinessName(String businessName) {
    this.businessName = businessName;
  }


  public Entity isArchived(IsArchivedEnum isArchived) {
    this.isArchived = isArchived;
    return this;
  }

   /**
   * Indicates if the entity is still used or not. 0 : No, 50 : Yes
   * @return isArchived
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IsArchivedEnum getIsArchived() {
    return isArchived;
  }


  @JsonProperty(JSON_PROPERTY_IS_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsArchived(IsArchivedEnum isArchived) {
    this.isArchived = isArchived;
  }


   /**
   * Archived date
   * @return archivedDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getArchivedDate() {
    return archivedDate;
  }




  public Entity isAccounting(Integer isAccounting) {
    this.isAccounting = isAccounting;
    return this;
  }

   /**
   * Indicates if the entity is an accounting entity. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Entities-IsAccounting\&quot;);&#39;&gt;Entity Accounting values&lt;/a&gt; in System data section
   * @return isAccounting
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ACCOUNTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIsAccounting() {
    return isAccounting;
  }


  @JsonProperty(JSON_PROPERTY_IS_ACCOUNTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsAccounting(Integer isAccounting) {
    this.isAccounting = isAccounting;
  }


  public Entity type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Defines type of the entity. 0 : Operational, 1 : Financial
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(Integer type) {
    this.type = type;
  }


  public Entity position(Integer position) {
    this.position = position;
    return this;
  }

   /**
   * Defines position of the entity in the hierarchy. 0 : Root entity, 1 : Sub-entity (except last level), 2 : Last level of hierarchy
   * @return position
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(Integer position) {
    this.position = position;
  }


  public Entity parent(EntityDataLink parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getParent() {
    return parent;
  }


  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParent(EntityDataLink parent) {
    this.parent = parent;
  }


  public Entity accountingId(String accountingId) {
    this.accountingId = accountingId;
    return this;
  }

   /**
   * Code of the entity for accounting purpose
   * @return accountingId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNTING_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountingId() {
    return accountingId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNTING_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountingId(String accountingId) {
    this.accountingId = accountingId;
  }


  public Entity isAnalytical(Integer isAnalytical) {
    this.isAnalytical = isAnalytical;
    return this;
  }

   /**
   * Indicates if the entity is an analytical one. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Entities-IsAnalytical\&quot;);&#39;&gt;Entity Is analytical values&lt;/a&gt; in System data section
   * @return isAnalytical
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ANALYTICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIsAnalytical() {
    return isAnalytical;
  }


  @JsonProperty(JSON_PROPERTY_IS_ANALYTICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsAnalytical(Integer isAnalytical) {
    this.isAnalytical = isAnalytical;
  }


  public Entity phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Phone number of the entity
   * @return phone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(String phone) {
    this.phone = phone;
  }


  public Entity fax(String fax) {
    this.fax = fax;
    return this;
  }

   /**
   * Fax number of the entity
   * @return fax
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFax() {
    return fax;
  }


  @JsonProperty(JSON_PROPERTY_FAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFax(String fax) {
    this.fax = fax;
  }


  public Entity vatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
    return this;
  }

   /**
   * EU VAT Identification Number for the company account
   * @return vatNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVatNumber() {
    return vatNumber;
  }


  @JsonProperty(JSON_PROPERTY_VAT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
  }


  public Entity accountCurrency(DataLink accountCurrency) {
    this.accountCurrency = accountCurrency;
    return this;
  }

   /**
   * Get accountCurrency
   * @return accountCurrency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getAccountCurrency() {
    return accountCurrency;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountCurrency(DataLink accountCurrency) {
    this.accountCurrency = accountCurrency;
  }


  public Entity manageCurrency(DataLink manageCurrency) {
    this.manageCurrency = manageCurrency;
    return this;
  }

   /**
   * Get manageCurrency
   * @return manageCurrency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGE_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getManageCurrency() {
    return manageCurrency;
  }


  @JsonProperty(JSON_PROPERTY_MANAGE_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManageCurrency(DataLink manageCurrency) {
    this.manageCurrency = manageCurrency;
  }


  public Entity reportCurrency(DataLink reportCurrency) {
    this.reportCurrency = reportCurrency;
    return this;
  }

   /**
   * Get reportCurrency
   * @return reportCurrency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getReportCurrency() {
    return reportCurrency;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportCurrency(DataLink reportCurrency) {
    this.reportCurrency = reportCurrency;
  }


  public Entity managers(List<EmployeeDataLink> managers) {
    this.managers = managers;
    return this;
  }

  public Entity addManagersItem(EmployeeDataLink managersItem) {
    if (this.managers == null) {
      this.managers = new ArrayList<>();
    }
    this.managers.add(managersItem);
    return this;
  }

   /**
   * Link to the managers of the entity. For more informations see the /employees resource
   * @return managers
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EmployeeDataLink> getManagers() {
    return managers;
  }


  @JsonProperty(JSON_PROPERTY_MANAGERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagers(List<EmployeeDataLink> managers) {
    this.managers = managers;
  }


  public Entity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the entity
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  /**
   * Return true if this Entity object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Entity entity = (Entity) o;
    return Objects.equals(this.id, entity.id) &&
        Objects.equals(this.code, entity.code) &&
        Objects.equals(this.businessName, entity.businessName) &&
        Objects.equals(this.isArchived, entity.isArchived) &&
        Objects.equals(this.archivedDate, entity.archivedDate) &&
        Objects.equals(this.isAccounting, entity.isAccounting) &&
        Objects.equals(this.type, entity.type) &&
        Objects.equals(this.position, entity.position) &&
        Objects.equals(this.parent, entity.parent) &&
        Objects.equals(this.accountingId, entity.accountingId) &&
        Objects.equals(this.isAnalytical, entity.isAnalytical) &&
        Objects.equals(this.phone, entity.phone) &&
        Objects.equals(this.fax, entity.fax) &&
        Objects.equals(this.vatNumber, entity.vatNumber) &&
        Objects.equals(this.accountCurrency, entity.accountCurrency) &&
        Objects.equals(this.manageCurrency, entity.manageCurrency) &&
        Objects.equals(this.reportCurrency, entity.reportCurrency) &&
        Objects.equals(this.managers, entity.managers) &&
        Objects.equals(this.name, entity.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, businessName, isArchived, archivedDate, isAccounting, type, position, parent, accountingId, isAnalytical, phone, fax, vatNumber, accountCurrency, manageCurrency, reportCurrency, managers, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Entity {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    businessName: ").append(toIndentedString(businessName)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    archivedDate: ").append(toIndentedString(archivedDate)).append("\n");
    sb.append("    isAccounting: ").append(toIndentedString(isAccounting)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    accountingId: ").append(toIndentedString(accountingId)).append("\n");
    sb.append("    isAnalytical: ").append(toIndentedString(isAnalytical)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    vatNumber: ").append(toIndentedString(vatNumber)).append("\n");
    sb.append("    accountCurrency: ").append(toIndentedString(accountCurrency)).append("\n");
    sb.append("    manageCurrency: ").append(toIndentedString(manageCurrency)).append("\n");
    sb.append("    reportCurrency: ").append(toIndentedString(reportCurrency)).append("\n");
    sb.append("    managers: ").append(toIndentedString(managers)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

