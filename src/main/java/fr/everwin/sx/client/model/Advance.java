/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Advance
 */
@JsonPropertyOrder({
  Advance.JSON_PROPERTY_ID,
  Advance.JSON_PROPERTY_VALIDATION_STEP,
  Advance.JSON_PROPERTY_CODE,
  Advance.JSON_PROPERTY_EMPLOYEE,
  Advance.JSON_PROPERTY_REQUESTOR,
  Advance.JSON_PROPERTY_DATE,
  Advance.JSON_PROPERTY_AMOUNT,
  Advance.JSON_PROPERTY_LABEL,
  Advance.JSON_PROPERTY_STATUS,
  Advance.JSON_PROPERTY_CURRENCY,
  Advance.JSON_PROPERTY_UPDATED_ON_TIME,
  Advance.JSON_PROPERTY_CREATED_ON_TIME,
  Advance.JSON_PROPERTY_UPDATED_BY,
  Advance.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("advance")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Advance {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_VALIDATION_STEP = "validationStep";
  private String validationStep;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private EmployeeDataLink employee;

  public static final String JSON_PROPERTY_REQUESTOR = "requestor";
  private EmployeeDataLink requestor;

  public static final String JSON_PROPERTY_DATE = "date";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime date;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Double amount;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_STATUS = "status";
  private Integer status;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private CurrencyDataLink currency;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Advance() { 
  }

  @JsonCreator
  public Advance(
    @JsonProperty(JSON_PROPERTY_STATUS) Integer status, 
    @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME) java.time.LocalDateTime updatedOnTime, 
    @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME) java.time.LocalDateTime createdOnTime
  ) {
    this();
    this.status = status;
    this.updatedOnTime = updatedOnTime;
    this.createdOnTime = createdOnTime;
  }

  public Advance id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Advance validationStep(String validationStep) {
    this.validationStep = validationStep;
    return this;
  }

   /**
   * Validation step of the element
   * @return validationStep
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getValidationStep() {
    return validationStep;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidationStep(String validationStep) {
    this.validationStep = validationStep;
  }


  public Advance code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the advance
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Advance employee(EmployeeDataLink employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EmployeeDataLink getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmployee(EmployeeDataLink employee) {
    this.employee = employee;
  }


  public Advance requestor(EmployeeDataLink requestor) {
    this.requestor = requestor;
    return this;
  }

   /**
   * Get requestor
   * @return requestor
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUESTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EmployeeDataLink getRequestor() {
    return requestor;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestor(EmployeeDataLink requestor) {
    this.requestor = requestor;
  }


  public Advance date(java.time.LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the advance
   * @return date
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.time.LocalDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDate(java.time.LocalDateTime date) {
    this.date = date;
  }


  public Advance amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Amount of the advance
   * @return amount
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(Double amount) {
    this.amount = amount;
  }


  public Advance label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label of the advance
   * @return label
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLabel(String label) {
    this.label = label;
  }


   /**
   * Status of the advance. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;ExpenseAdvances-Status\&quot;);&#39;&gt;Expense Advances Status&lt;/a&gt; in System data section
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStatus() {
    return status;
  }




  public Advance currency(CurrencyDataLink currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CurrencyDataLink getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(CurrencyDataLink currency) {
    this.currency = currency;
  }


   /**
   * Date &amp; time of the last update of the advance
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }




   /**
   * Date &amp; time of creation of the advance
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }




  public Advance updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Login of the user doing the last update on the advance
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public Advance extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Advance addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the advance. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this advance object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Advance advance = (Advance) o;
    return Objects.equals(this.id, advance.id) &&
        Objects.equals(this.validationStep, advance.validationStep) &&
        Objects.equals(this.code, advance.code) &&
        Objects.equals(this.employee, advance.employee) &&
        Objects.equals(this.requestor, advance.requestor) &&
        Objects.equals(this.date, advance.date) &&
        Objects.equals(this.amount, advance.amount) &&
        Objects.equals(this.label, advance.label) &&
        Objects.equals(this.status, advance.status) &&
        Objects.equals(this.currency, advance.currency) &&
        Objects.equals(this.updatedOnTime, advance.updatedOnTime) &&
        Objects.equals(this.createdOnTime, advance.createdOnTime) &&
        Objects.equals(this.updatedBy, advance.updatedBy) &&
        Objects.equals(this.extraData, advance.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, validationStep, code, employee, requestor, date, amount, label, status, currency, updatedOnTime, createdOnTime, updatedBy, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Advance {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    validationStep: ").append(toIndentedString(validationStep)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    requestor: ").append(toIndentedString(requestor)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

