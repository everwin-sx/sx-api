/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * EmployeeScope
 */
@JsonPropertyOrder({
  EmployeeScope.JSON_PROPERTY_ID,
  EmployeeScope.JSON_PROPERTY_EMPLOYEE,
  EmployeeScope.JSON_PROPERTY_LABEL,
  EmployeeScope.JSON_PROPERTY_USER_ROLE,
  EmployeeScope.JSON_PROPERTY_SECOND_ENTITIES,
  EmployeeScope.JSON_PROPERTY_SECOND_FINANCIAL_ENTITIES,
  EmployeeScope.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("employeeScope")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class EmployeeScope {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private EmployeeDataLink employee;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_USER_ROLE = "userRole";
  private String userRole;

  public static final String JSON_PROPERTY_SECOND_ENTITIES = "secondEntities";
  private List<EntityDataLink> secondEntities;

  public static final String JSON_PROPERTY_SECOND_FINANCIAL_ENTITIES = "secondFinancialEntities";
  private List<EntityDataLink> secondFinancialEntities;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public EmployeeScope() { 
  }

  public EmployeeScope id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public EmployeeScope employee(EmployeeDataLink employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EmployeeDataLink getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmployee(EmployeeDataLink employee) {
    this.employee = employee;
  }


  public EmployeeScope label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label of the employee scope
   * @return label
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public EmployeeScope userRole(String userRole) {
    this.userRole = userRole;
    return this;
  }

   /**
   * User application role of the employee scope
   * @return userRole
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserRole() {
    return userRole;
  }


  @JsonProperty(JSON_PROPERTY_USER_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserRole(String userRole) {
    this.userRole = userRole;
  }


  public EmployeeScope secondEntities(List<EntityDataLink> secondEntities) {
    this.secondEntities = secondEntities;
    return this;
  }

  public EmployeeScope addSecondEntitiesItem(EntityDataLink secondEntitiesItem) {
    if (this.secondEntities == null) {
      this.secondEntities = new ArrayList<>();
    }
    this.secondEntities.add(secondEntitiesItem);
    return this;
  }

   /**
   * Link to secondary entities of the employee scope. For more information see the /entities resource
   * @return secondEntities
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECOND_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityDataLink> getSecondEntities() {
    return secondEntities;
  }


  @JsonProperty(JSON_PROPERTY_SECOND_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondEntities(List<EntityDataLink> secondEntities) {
    this.secondEntities = secondEntities;
  }


  public EmployeeScope secondFinancialEntities(List<EntityDataLink> secondFinancialEntities) {
    this.secondFinancialEntities = secondFinancialEntities;
    return this;
  }

  public EmployeeScope addSecondFinancialEntitiesItem(EntityDataLink secondFinancialEntitiesItem) {
    if (this.secondFinancialEntities == null) {
      this.secondFinancialEntities = new ArrayList<>();
    }
    this.secondFinancialEntities.add(secondFinancialEntitiesItem);
    return this;
  }

   /**
   * Link to secondary financial entities of the employee scope. For more information see the /entities resource
   * @return secondFinancialEntities
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECOND_FINANCIAL_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityDataLink> getSecondFinancialEntities() {
    return secondFinancialEntities;
  }


  @JsonProperty(JSON_PROPERTY_SECOND_FINANCIAL_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondFinancialEntities(List<EntityDataLink> secondFinancialEntities) {
    this.secondFinancialEntities = secondFinancialEntities;
  }


  public EmployeeScope extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public EmployeeScope addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the employee scope. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this employeeScope object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeScope employeeScope = (EmployeeScope) o;
    return Objects.equals(this.id, employeeScope.id) &&
        Objects.equals(this.employee, employeeScope.employee) &&
        Objects.equals(this.label, employeeScope.label) &&
        Objects.equals(this.userRole, employeeScope.userRole) &&
        Objects.equals(this.secondEntities, employeeScope.secondEntities) &&
        Objects.equals(this.secondFinancialEntities, employeeScope.secondFinancialEntities) &&
        Objects.equals(this.extraData, employeeScope.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, employee, label, userRole, secondEntities, secondFinancialEntities, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeScope {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    userRole: ").append(toIndentedString(userRole)).append("\n");
    sb.append("    secondEntities: ").append(toIndentedString(secondEntities)).append("\n");
    sb.append("    secondFinancialEntities: ").append(toIndentedString(secondFinancialEntities)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

