/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.SupplierReceivingNote;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * supplierreceivingnotelist
 */
@JsonPropertyOrder({
  SupplierReceivingNoteList.JSON_PROPERTY_SUPPLIERRECEIVINGNOTES,
  SupplierReceivingNoteList.JSON_PROPERTY_SELFLINK
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class SupplierReceivingNoteList {
  public static final String JSON_PROPERTY_SUPPLIERRECEIVINGNOTES = "supplierreceivingnotes";
  private List<SupplierReceivingNote> supplierreceivingnotes;

  public static final String JSON_PROPERTY_SELFLINK = "selflink";
  private String selflink;

  public SupplierReceivingNoteList() { 
  }

  public SupplierReceivingNoteList supplierreceivingnotes(List<SupplierReceivingNote> supplierreceivingnotes) {
    this.supplierreceivingnotes = supplierreceivingnotes;
    return this;
  }

  public SupplierReceivingNoteList addSupplierreceivingnotesItem(SupplierReceivingNote supplierreceivingnotesItem) {
    if (this.supplierreceivingnotes == null) {
      this.supplierreceivingnotes = new ArrayList<>();
    }
    this.supplierreceivingnotes.add(supplierreceivingnotesItem);
    return this;
  }

   /**
   * Get supplierreceivingnotes
   * @return supplierreceivingnotes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPLIERRECEIVINGNOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SupplierReceivingNote> getSupplierreceivingnotes() {
    return supplierreceivingnotes;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIERRECEIVINGNOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupplierreceivingnotes(List<SupplierReceivingNote> supplierreceivingnotes) {
    this.supplierreceivingnotes = supplierreceivingnotes;
  }


  public SupplierReceivingNoteList selflink(String selflink) {
    this.selflink = selflink;
    return this;
  }

   /**
   * Get selflink
   * @return selflink
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SELFLINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSelflink() {
    return selflink;
  }


  @JsonProperty(JSON_PROPERTY_SELFLINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelflink(String selflink) {
    this.selflink = selflink;
  }


  /**
   * Return true if this SupplierReceivingNoteList object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupplierReceivingNoteList supplierReceivingNoteList = (SupplierReceivingNoteList) o;
    return Objects.equals(this.supplierreceivingnotes, supplierReceivingNoteList.supplierreceivingnotes) &&
        Objects.equals(this.selflink, supplierReceivingNoteList.selflink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supplierreceivingnotes, selflink);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupplierReceivingNoteList {\n");
    sb.append("    supplierreceivingnotes: ").append(toIndentedString(supplierreceivingnotes)).append("\n");
    sb.append("    selflink: ").append(toIndentedString(selflink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

