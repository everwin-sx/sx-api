/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.DataLink;
import fr.everwin.sx.client.model.Discount;
import fr.everwin.sx.client.model.Expenditure;
import fr.everwin.sx.client.model.ProductDataLink;
import fr.everwin.sx.client.model.ProjectActivityDataLink;
import fr.everwin.sx.client.model.Revenue;
import fr.everwin.sx.client.model.RowtypeDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * WritableProjectLine
 */
@JsonPropertyOrder({
  WritableProjectLine.JSON_PROPERTY_ID,
  WritableProjectLine.JSON_PROPERTY_ACTIVITY,
  WritableProjectLine.JSON_PROPERTY_TYPE,
  WritableProjectLine.JSON_PROPERTY_RESOURCE,
  WritableProjectLine.JSON_PROPERTY_COMMENT,
  WritableProjectLine.JSON_PROPERTY_INVOICING_MODE,
  WritableProjectLine.JSON_PROPERTY_PRODUCT,
  WritableProjectLine.JSON_PROPERTY_UNIT,
  WritableProjectLine.JSON_PROPERTY_CURRENCY,
  WritableProjectLine.JSON_PROPERTY_ORDER,
  WritableProjectLine.JSON_PROPERTY_INITIAL_START_DATE,
  WritableProjectLine.JSON_PROPERTY_INITIAL_END_DATE,
  WritableProjectLine.JSON_PROPERTY_UPDATED_START_DATE,
  WritableProjectLine.JSON_PROPERTY_UPDATED_END_DATE,
  WritableProjectLine.JSON_PROPERTY_EXPECTED_REVENUE,
  WritableProjectLine.JSON_PROPERTY_EXPECTED_DISCOUNT,
  WritableProjectLine.JSON_PROPERTY_EXPECTED_EXPENDITURE,
  WritableProjectLine.JSON_PROPERTY_UPDATED_REVENUE,
  WritableProjectLine.JSON_PROPERTY_UPDATED_EXPENDITURE,
  WritableProjectLine.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("writable-project-line")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class WritableProjectLine {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_ACTIVITY = "activity";
  private ProjectActivityDataLink activity;

  public static final String JSON_PROPERTY_TYPE = "type";
  private RowtypeDataLink type;

  public static final String JSON_PROPERTY_RESOURCE = "resource";
  private DataLink resource;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_INVOICING_MODE = "invoicingMode";
  private Integer invoicingMode;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private ProductDataLink product;

  public static final String JSON_PROPERTY_UNIT = "unit";
  private String unit;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_ORDER = "order";
  private Integer order;

  public static final String JSON_PROPERTY_INITIAL_START_DATE = "initialStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialStartDate;

  public static final String JSON_PROPERTY_INITIAL_END_DATE = "initialEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialEndDate;

  public static final String JSON_PROPERTY_UPDATED_START_DATE = "updatedStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedStartDate;

  public static final String JSON_PROPERTY_UPDATED_END_DATE = "updatedEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedEndDate;

  public static final String JSON_PROPERTY_EXPECTED_REVENUE = "expectedRevenue";
  private Revenue expectedRevenue;

  public static final String JSON_PROPERTY_EXPECTED_DISCOUNT = "expectedDiscount";
  private Discount expectedDiscount;

  public static final String JSON_PROPERTY_EXPECTED_EXPENDITURE = "expectedExpenditure";
  private Expenditure expectedExpenditure;

  public static final String JSON_PROPERTY_UPDATED_REVENUE = "updatedRevenue";
  private Revenue updatedRevenue;

  public static final String JSON_PROPERTY_UPDATED_EXPENDITURE = "updatedExpenditure";
  private Expenditure updatedExpenditure;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public WritableProjectLine() { 
  }

  public WritableProjectLine id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public WritableProjectLine activity(ProjectActivityDataLink activity) {
    this.activity = activity;
    return this;
  }

   /**
   * Get activity
   * @return activity
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProjectActivityDataLink getActivity() {
    return activity;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActivity(ProjectActivityDataLink activity) {
    this.activity = activity;
  }


  public WritableProjectLine type(RowtypeDataLink type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RowtypeDataLink getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(RowtypeDataLink type) {
    this.type = type;
  }


  public WritableProjectLine resource(DataLink resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DataLink getResource() {
    return resource;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResource(DataLink resource) {
    this.resource = resource;
  }


  public WritableProjectLine comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public WritableProjectLine invoicingMode(Integer invoicingMode) {
    this.invoicingMode = invoicingMode;
    return this;
  }

   /**
   * Invoicing mode of the line
   * @return invoicingMode
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INVOICING_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getInvoicingMode() {
    return invoicingMode;
  }


  @JsonProperty(JSON_PROPERTY_INVOICING_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInvoicingMode(Integer invoicingMode) {
    this.invoicingMode = invoicingMode;
  }


  public WritableProjectLine product(ProductDataLink product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductDataLink getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProduct(ProductDataLink product) {
    this.product = product;
  }


  public WritableProjectLine unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Unit of the line
   * @return unit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnit(String unit) {
    this.unit = unit;
  }


  public WritableProjectLine currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Line management currency (ISO code)
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public WritableProjectLine order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Position of the line in the activity
   * @return order
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(Integer order) {
    this.order = order;
  }


  public WritableProjectLine initialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
    return this;
  }

   /**
   * Initial start date
   * @return initialStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialStartDate() {
    return initialStartDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
  }


  public WritableProjectLine initialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
    return this;
  }

   /**
   * Initial end date
   * @return initialEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialEndDate() {
    return initialEndDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
  }


  public WritableProjectLine updatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
    return this;
  }

   /**
   * Updated start date
   * @return updatedStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedStartDate() {
    return updatedStartDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
  }


  public WritableProjectLine updatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
    return this;
  }

   /**
   * Updated end date
   * @return updatedEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedEndDate() {
    return updatedEndDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
  }


  public WritableProjectLine expectedRevenue(Revenue expectedRevenue) {
    this.expectedRevenue = expectedRevenue;
    return this;
  }

   /**
   * Get expectedRevenue
   * @return expectedRevenue
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED_REVENUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Revenue getExpectedRevenue() {
    return expectedRevenue;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_REVENUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedRevenue(Revenue expectedRevenue) {
    this.expectedRevenue = expectedRevenue;
  }


  public WritableProjectLine expectedDiscount(Discount expectedDiscount) {
    this.expectedDiscount = expectedDiscount;
    return this;
  }

   /**
   * Get expectedDiscount
   * @return expectedDiscount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Discount getExpectedDiscount() {
    return expectedDiscount;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedDiscount(Discount expectedDiscount) {
    this.expectedDiscount = expectedDiscount;
  }


  public WritableProjectLine expectedExpenditure(Expenditure expectedExpenditure) {
    this.expectedExpenditure = expectedExpenditure;
    return this;
  }

   /**
   * Get expectedExpenditure
   * @return expectedExpenditure
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED_EXPENDITURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Expenditure getExpectedExpenditure() {
    return expectedExpenditure;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_EXPENDITURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedExpenditure(Expenditure expectedExpenditure) {
    this.expectedExpenditure = expectedExpenditure;
  }


  public WritableProjectLine updatedRevenue(Revenue updatedRevenue) {
    this.updatedRevenue = updatedRevenue;
    return this;
  }

   /**
   * Get updatedRevenue
   * @return updatedRevenue
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_REVENUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Revenue getUpdatedRevenue() {
    return updatedRevenue;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_REVENUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedRevenue(Revenue updatedRevenue) {
    this.updatedRevenue = updatedRevenue;
  }


  public WritableProjectLine updatedExpenditure(Expenditure updatedExpenditure) {
    this.updatedExpenditure = updatedExpenditure;
    return this;
  }

   /**
   * Get updatedExpenditure
   * @return updatedExpenditure
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_EXPENDITURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Expenditure getUpdatedExpenditure() {
    return updatedExpenditure;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_EXPENDITURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedExpenditure(Expenditure updatedExpenditure) {
    this.updatedExpenditure = updatedExpenditure;
  }


  public WritableProjectLine extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public WritableProjectLine addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the project line. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this writable-project-line object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WritableProjectLine writableProjectLine = (WritableProjectLine) o;
    return Objects.equals(this.id, writableProjectLine.id) &&
        Objects.equals(this.activity, writableProjectLine.activity) &&
        Objects.equals(this.type, writableProjectLine.type) &&
        Objects.equals(this.resource, writableProjectLine.resource) &&
        Objects.equals(this.comment, writableProjectLine.comment) &&
        Objects.equals(this.invoicingMode, writableProjectLine.invoicingMode) &&
        Objects.equals(this.product, writableProjectLine.product) &&
        Objects.equals(this.unit, writableProjectLine.unit) &&
        Objects.equals(this.currency, writableProjectLine.currency) &&
        Objects.equals(this.order, writableProjectLine.order) &&
        Objects.equals(this.initialStartDate, writableProjectLine.initialStartDate) &&
        Objects.equals(this.initialEndDate, writableProjectLine.initialEndDate) &&
        Objects.equals(this.updatedStartDate, writableProjectLine.updatedStartDate) &&
        Objects.equals(this.updatedEndDate, writableProjectLine.updatedEndDate) &&
        Objects.equals(this.expectedRevenue, writableProjectLine.expectedRevenue) &&
        Objects.equals(this.expectedDiscount, writableProjectLine.expectedDiscount) &&
        Objects.equals(this.expectedExpenditure, writableProjectLine.expectedExpenditure) &&
        Objects.equals(this.updatedRevenue, writableProjectLine.updatedRevenue) &&
        Objects.equals(this.updatedExpenditure, writableProjectLine.updatedExpenditure) &&
        Objects.equals(this.extraData, writableProjectLine.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, activity, type, resource, comment, invoicingMode, product, unit, currency, order, initialStartDate, initialEndDate, updatedStartDate, updatedEndDate, expectedRevenue, expectedDiscount, expectedExpenditure, updatedRevenue, updatedExpenditure, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WritableProjectLine {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    activity: ").append(toIndentedString(activity)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    invoicingMode: ").append(toIndentedString(invoicingMode)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    initialStartDate: ").append(toIndentedString(initialStartDate)).append("\n");
    sb.append("    initialEndDate: ").append(toIndentedString(initialEndDate)).append("\n");
    sb.append("    updatedStartDate: ").append(toIndentedString(updatedStartDate)).append("\n");
    sb.append("    updatedEndDate: ").append(toIndentedString(updatedEndDate)).append("\n");
    sb.append("    expectedRevenue: ").append(toIndentedString(expectedRevenue)).append("\n");
    sb.append("    expectedDiscount: ").append(toIndentedString(expectedDiscount)).append("\n");
    sb.append("    expectedExpenditure: ").append(toIndentedString(expectedExpenditure)).append("\n");
    sb.append("    updatedRevenue: ").append(toIndentedString(updatedRevenue)).append("\n");
    sb.append("    updatedExpenditure: ").append(toIndentedString(updatedExpenditure)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

