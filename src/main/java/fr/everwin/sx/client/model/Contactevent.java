/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.ContactResponsibilityDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * Contactevent
 */
@JsonPropertyOrder({
  Contactevent.JSON_PROPERTY_ID,
  Contactevent.JSON_PROPERTY_CONTACT_RESPONSIBILITY,
  Contactevent.JSON_PROPERTY_DATE,
  Contactevent.JSON_PROPERTY_TYPE,
  Contactevent.JSON_PROPERTY_EVENT,
  Contactevent.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("contactevent")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Contactevent {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CONTACT_RESPONSIBILITY = "contactResponsibility";
  private ContactResponsibilityDataLink contactResponsibility;

  public static final String JSON_PROPERTY_DATE = "date";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime date;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_EVENT = "event";
  private String event;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Contactevent() { 
  }

  public Contactevent id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Contactevent contactResponsibility(ContactResponsibilityDataLink contactResponsibility) {
    this.contactResponsibility = contactResponsibility;
    return this;
  }

   /**
   * Get contactResponsibility
   * @return contactResponsibility
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTACT_RESPONSIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContactResponsibilityDataLink getContactResponsibility() {
    return contactResponsibility;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_RESPONSIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContactResponsibility(ContactResponsibilityDataLink contactResponsibility) {
    this.contactResponsibility = contactResponsibility;
  }


  public Contactevent date(java.time.LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the event
   * @return date
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(java.time.LocalDateTime date) {
    this.date = date;
  }


  public Contactevent type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the event
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public Contactevent event(String event) {
    this.event = event;
    return this;
  }

   /**
   * Description of the event
   * @return event
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEvent() {
    return event;
  }


  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvent(String event) {
    this.event = event;
  }


  public Contactevent extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Contactevent addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the contact responsibility. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this contactevent object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contactevent contactevent = (Contactevent) o;
    return Objects.equals(this.id, contactevent.id) &&
        Objects.equals(this.contactResponsibility, contactevent.contactResponsibility) &&
        Objects.equals(this.date, contactevent.date) &&
        Objects.equals(this.type, contactevent.type) &&
        Objects.equals(this.event, contactevent.event) &&
        Objects.equals(this.extraData, contactevent.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, contactResponsibility, date, type, event, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contactevent {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    contactResponsibility: ").append(toIndentedString(contactResponsibility)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

