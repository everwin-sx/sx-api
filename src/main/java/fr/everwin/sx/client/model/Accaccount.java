/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Accaccount
 */
@JsonPropertyOrder({
  Accaccount.JSON_PROPERTY_ID,
  Accaccount.JSON_PROPERTY_COMPANY_ACCOUNT,
  Accaccount.JSON_PROPERTY_ENTITIES,
  Accaccount.JSON_PROPERTY_GENERAL_ACCOUNT,
  Accaccount.JSON_PROPERTY_SUBSIDIARY_ACCOUNT,
  Accaccount.JSON_PROPERTY_BOOK,
  Accaccount.JSON_PROPERTY_UPDATED_ON_TIME,
  Accaccount.JSON_PROPERTY_DATE_AMPERSAND_TIME_OF_CREATION_OF_THE_ACCOUNTING_ACCOUNT,
  Accaccount.JSON_PROPERTY_UPDATED_BY,
  Accaccount.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("accaccount")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Accaccount {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_COMPANY_ACCOUNT = "companyAccount";
  private CompanyAccountDataLink companyAccount;

  public static final String JSON_PROPERTY_ENTITIES = "entities";
  private List<EntityDataLink> entities = new ArrayList<>();

  public static final String JSON_PROPERTY_GENERAL_ACCOUNT = "generalAccount";
  private String generalAccount;

  public static final String JSON_PROPERTY_SUBSIDIARY_ACCOUNT = "subsidiaryAccount";
  private String subsidiaryAccount;

  public static final String JSON_PROPERTY_BOOK = "book";
  private String book;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_DATE_AMPERSAND_TIME_OF_CREATION_OF_THE_ACCOUNTING_ACCOUNT = "Date &amp; time of creation of the accounting account";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime dateAmpersandTimeOfCreationOfTheAccountingAccount;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Accaccount() { 
  }

  public Accaccount id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Accaccount companyAccount(CompanyAccountDataLink companyAccount) {
    this.companyAccount = companyAccount;
    return this;
  }

   /**
   * Get companyAccount
   * @return companyAccount
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPANY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CompanyAccountDataLink getCompanyAccount() {
    return companyAccount;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompanyAccount(CompanyAccountDataLink companyAccount) {
    this.companyAccount = companyAccount;
  }


  public Accaccount entities(List<EntityDataLink> entities) {
    this.entities = entities;
    return this;
  }

  public Accaccount addEntitiesItem(EntityDataLink entitiesItem) {
    if (this.entities == null) {
      this.entities = new ArrayList<>();
    }
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * Multiple link to entity that own this accounting account. For more informations see the /entities resource
   * @return entities
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<EntityDataLink> getEntities() {
    return entities;
  }


  @JsonProperty(JSON_PROPERTY_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntities(List<EntityDataLink> entities) {
    this.entities = entities;
  }


  public Accaccount generalAccount(String generalAccount) {
    this.generalAccount = generalAccount;
    return this;
  }

   /**
   * General ledger of the accounting account
   * @return generalAccount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENERAL_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGeneralAccount() {
    return generalAccount;
  }


  @JsonProperty(JSON_PROPERTY_GENERAL_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeneralAccount(String generalAccount) {
    this.generalAccount = generalAccount;
  }


  public Accaccount subsidiaryAccount(String subsidiaryAccount) {
    this.subsidiaryAccount = subsidiaryAccount;
    return this;
  }

   /**
   * Subledger of the accounting account
   * @return subsidiaryAccount
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBSIDIARY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubsidiaryAccount() {
    return subsidiaryAccount;
  }


  @JsonProperty(JSON_PROPERTY_SUBSIDIARY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubsidiaryAccount(String subsidiaryAccount) {
    this.subsidiaryAccount = subsidiaryAccount;
  }


  public Accaccount book(String book) {
    this.book = book;
    return this;
  }

   /**
   * Ledger of the accounting account
   * @return book
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOOK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBook() {
    return book;
  }


  @JsonProperty(JSON_PROPERTY_BOOK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBook(String book) {
    this.book = book;
  }


  public Accaccount updatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
    return this;
  }

   /**
   * Date &amp; time of the last update of the accounting account
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
  }


  public Accaccount dateAmpersandTimeOfCreationOfTheAccountingAccount(java.time.LocalDateTime dateAmpersandTimeOfCreationOfTheAccountingAccount) {
    this.dateAmpersandTimeOfCreationOfTheAccountingAccount = dateAmpersandTimeOfCreationOfTheAccountingAccount;
    return this;
  }

   /**
   * Get dateAmpersandTimeOfCreationOfTheAccountingAccount
   * @return dateAmpersandTimeOfCreationOfTheAccountingAccount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_AMPERSAND_TIME_OF_CREATION_OF_THE_ACCOUNTING_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getDateAmpersandTimeOfCreationOfTheAccountingAccount() {
    return dateAmpersandTimeOfCreationOfTheAccountingAccount;
  }


  @JsonProperty(JSON_PROPERTY_DATE_AMPERSAND_TIME_OF_CREATION_OF_THE_ACCOUNTING_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateAmpersandTimeOfCreationOfTheAccountingAccount(java.time.LocalDateTime dateAmpersandTimeOfCreationOfTheAccountingAccount) {
    this.dateAmpersandTimeOfCreationOfTheAccountingAccount = dateAmpersandTimeOfCreationOfTheAccountingAccount;
  }


  public Accaccount updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Login of the user doing the last update on the accounting account
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public Accaccount extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Accaccount addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the accouting account. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this accaccount object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Accaccount accaccount = (Accaccount) o;
    return Objects.equals(this.id, accaccount.id) &&
        Objects.equals(this.companyAccount, accaccount.companyAccount) &&
        Objects.equals(this.entities, accaccount.entities) &&
        Objects.equals(this.generalAccount, accaccount.generalAccount) &&
        Objects.equals(this.subsidiaryAccount, accaccount.subsidiaryAccount) &&
        Objects.equals(this.book, accaccount.book) &&
        Objects.equals(this.updatedOnTime, accaccount.updatedOnTime) &&
        Objects.equals(this.dateAmpersandTimeOfCreationOfTheAccountingAccount, accaccount.dateAmpersandTimeOfCreationOfTheAccountingAccount) &&
        Objects.equals(this.updatedBy, accaccount.updatedBy) &&
        Objects.equals(this.extraData, accaccount.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, companyAccount, entities, generalAccount, subsidiaryAccount, book, updatedOnTime, dateAmpersandTimeOfCreationOfTheAccountingAccount, updatedBy, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Accaccount {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    companyAccount: ").append(toIndentedString(companyAccount)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    generalAccount: ").append(toIndentedString(generalAccount)).append("\n");
    sb.append("    subsidiaryAccount: ").append(toIndentedString(subsidiaryAccount)).append("\n");
    sb.append("    book: ").append(toIndentedString(book)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    dateAmpersandTimeOfCreationOfTheAccountingAccount: ").append(toIndentedString(dateAmpersandTimeOfCreationOfTheAccountingAccount)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

