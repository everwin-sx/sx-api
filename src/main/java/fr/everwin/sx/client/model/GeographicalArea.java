/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.CountryDataLink;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * GeographicalArea
 */
@JsonPropertyOrder({
  GeographicalArea.JSON_PROPERTY_ID,
  GeographicalArea.JSON_PROPERTY_CODE,
  GeographicalArea.JSON_PROPERTY_LABEL,
  GeographicalArea.JSON_PROPERTY_ADMINISTRATIVE_REGION,
  GeographicalArea.JSON_PROPERTY_SECONDARY_REGION,
  GeographicalArea.JSON_PROPERTY_COUNTRY
})
@JsonTypeName("geographicalArea")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class GeographicalArea {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_ADMINISTRATIVE_REGION = "administrativeRegion";
  private Integer administrativeRegion;

  public static final String JSON_PROPERTY_SECONDARY_REGION = "secondaryRegion";
  private Integer secondaryRegion;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private CountryDataLink country;

  public GeographicalArea() { 
  }

  public GeographicalArea id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public GeographicalArea code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the geographical area
   * @return code
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public GeographicalArea label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label of the geographical area
   * @return label
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLabel(String label) {
    this.label = label;
  }


  public GeographicalArea administrativeRegion(Integer administrativeRegion) {
    this.administrativeRegion = administrativeRegion;
    return this;
  }

   /**
   * Administrative region of the geographical area. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;GeographicalAreas-Administrativeregion\&quot;);&#39;&gt;Administrative regions of geographical areas&lt;/a&gt; in System data section
   * @return administrativeRegion
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAdministrativeRegion() {
    return administrativeRegion;
  }


  @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdministrativeRegion(Integer administrativeRegion) {
    this.administrativeRegion = administrativeRegion;
  }


  public GeographicalArea secondaryRegion(Integer secondaryRegion) {
    this.secondaryRegion = secondaryRegion;
    return this;
  }

   /**
   * Secondary region of the geographical area. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;GeographicalAreas-Secondaryregion\&quot;);&#39;&gt;Secondary areas of administrative regions&lt;/a&gt; in System data section
   * @return secondaryRegion
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSecondaryRegion() {
    return secondaryRegion;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryRegion(Integer secondaryRegion) {
    this.secondaryRegion = secondaryRegion;
  }


  public GeographicalArea country(CountryDataLink country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CountryDataLink getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(CountryDataLink country) {
    this.country = country;
  }


  /**
   * Return true if this geographicalArea object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeographicalArea geographicalArea = (GeographicalArea) o;
    return Objects.equals(this.id, geographicalArea.id) &&
        Objects.equals(this.code, geographicalArea.code) &&
        Objects.equals(this.label, geographicalArea.label) &&
        Objects.equals(this.administrativeRegion, geographicalArea.administrativeRegion) &&
        Objects.equals(this.secondaryRegion, geographicalArea.secondaryRegion) &&
        Objects.equals(this.country, geographicalArea.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, label, administrativeRegion, secondaryRegion, country);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeographicalArea {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    administrativeRegion: ").append(toIndentedString(administrativeRegion)).append("\n");
    sb.append("    secondaryRegion: ").append(toIndentedString(secondaryRegion)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

