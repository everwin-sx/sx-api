/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.CountryDataLink;
import fr.everwin.sx.client.model.CurrencyDataLink;
import fr.everwin.sx.client.model.DataLink;
import fr.everwin.sx.client.model.EmployeeDataLink;
import fr.everwin.sx.client.model.EntityDataLink;
import fr.everwin.sx.client.model.ProfileDataLink;
import fr.everwin.sx.client.model.ScaleDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * Employee
 */
@JsonPropertyOrder({
  Employee.JSON_PROPERTY_ID,
  Employee.JSON_PROPERTY_CODE,
  Employee.JSON_PROPERTY_FIRST_NAME,
  Employee.JSON_PROPERTY_LAST_NAME,
  Employee.JSON_PROPERTY_TITLE,
  Employee.JSON_PROPERTY_TYPE,
  Employee.JSON_PROPERTY_ENTITY,
  Employee.JSON_PROPERTY_SECOND_ENTITIES,
  Employee.JSON_PROPERTY_FINANCIAL_ENTITY,
  Employee.JSON_PROPERTY_SECOND_FINANCIAL_ENTITIES,
  Employee.JSON_PROPERTY_ARRIVAL_DATE,
  Employee.JSON_PROPERTY_LEAVING_DATE,
  Employee.JSON_PROPERTY_BIRTH_DATE,
  Employee.JSON_PROPERTY_PROFILES,
  Employee.JSON_PROPERTY_MAIN_PROFILE,
  Employee.JSON_PROPERTY_MANAGER,
  Employee.JSON_PROPERTY_SUPPORTED_COMMERCIALS,
  Employee.JSON_PROPERTY_WORK_MODE,
  Employee.JSON_PROPERTY_CONTRACT_TYPE,
  Employee.JSON_PROPERTY_HIERARCHICAL_LEVEL,
  Employee.JSON_PROPERTY_ANNUAL_SALARY,
  Employee.JSON_PROPERTY_SALE_PRICE,
  Employee.JSON_PROPERTY_FULL_COST_PRICE,
  Employee.JSON_PROPERTY_DIRECT_COST_PRICE,
  Employee.JSON_PROPERTY_DISTANCE_SCALE,
  Employee.JSON_PROPERTY_IS_ARCHIVED,
  Employee.JSON_PROPERTY_ARCHIVED_DATE,
  Employee.JSON_PROPERTY_LOGIN,
  Employee.JSON_PROPERTY_PASSWORD,
  Employee.JSON_PROPERTY_USER_ROLE,
  Employee.JSON_PROPERTY_USER_LANGUAGE,
  Employee.JSON_PROPERTY_FUNCTION,
  Employee.JSON_PROPERTY_LANGUAGES,
  Employee.JSON_PROPERTY_NATIONALITY,
  Employee.JSON_PROPERTY_PHONE,
  Employee.JSON_PROPERTY_PERSONAL_PHONE,
  Employee.JSON_PROPERTY_MOBILE,
  Employee.JSON_PROPERTY_FAX,
  Employee.JSON_PROPERTY_ADDRESS,
  Employee.JSON_PROPERTY_ADDRESS2,
  Employee.JSON_PROPERTY_ADDRESS3,
  Employee.JSON_PROPERTY_POSTAL_CODE,
  Employee.JSON_PROPERTY_CITY,
  Employee.JSON_PROPERTY_COUNTRY,
  Employee.JSON_PROPERTY_EMAIL,
  Employee.JSON_PROPERTY_PAYROLL_ID,
  Employee.JSON_PROPERTY_ACCOUNT,
  Employee.JSON_PROPERTY_SECONDARY_ACCOUNT,
  Employee.JSON_PROPERTY_FISCAL_POSITION,
  Employee.JSON_PROPERTY_COMMENT,
  Employee.JSON_PROPERTY_UPDATED_BY,
  Employee.JSON_PROPERTY_UPDATED_ON_TIME,
  Employee.JSON_PROPERTY_CREATED_ON_TIME,
  Employee.JSON_PROPERTY_IBAN,
  Employee.JSON_PROPERTY_BIC,
  Employee.JSON_PROPERTY_PICTURE,
  Employee.JSON_PROPERTY_LOGIN_MODE,
  Employee.JSON_PROPERTY_CURRENCY,
  Employee.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("employee")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Employee {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  /**
   * Title of the employee.
   */
  public enum TitleEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    TitleEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TitleEnum fromValue(Integer value) {
      for (TitleEnum b : TitleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TITLE = "title";
  private TitleEnum title;

  /**
   * Type of employee. 0 : internal, 2 : external
   */
  public enum TypeEnum {
    NUMBER_0(0),
    
    NUMBER_2(2);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(Integer value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private EntityDataLink entity;

  public static final String JSON_PROPERTY_SECOND_ENTITIES = "secondEntities";
  private List<EntityDataLink> secondEntities;

  public static final String JSON_PROPERTY_FINANCIAL_ENTITY = "financialEntity";
  private EntityDataLink financialEntity;

  public static final String JSON_PROPERTY_SECOND_FINANCIAL_ENTITIES = "secondFinancialEntities";
  private List<EntityDataLink> secondFinancialEntities;

  public static final String JSON_PROPERTY_ARRIVAL_DATE = "arrivalDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime arrivalDate;

  public static final String JSON_PROPERTY_LEAVING_DATE = "leavingDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime leavingDate;

  public static final String JSON_PROPERTY_BIRTH_DATE = "birthDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime birthDate;

  public static final String JSON_PROPERTY_PROFILES = "profiles";
  private List<ProfileDataLink> profiles;

  public static final String JSON_PROPERTY_MAIN_PROFILE = "mainProfile";
  private ProfileDataLink mainProfile;

  public static final String JSON_PROPERTY_MANAGER = "manager";
  private EmployeeDataLink manager;

  public static final String JSON_PROPERTY_SUPPORTED_COMMERCIALS = "supportedCommercials";
  private List<EmployeeDataLink> supportedCommercials;

  public static final String JSON_PROPERTY_WORK_MODE = "workMode";
  private DataLink workMode;

  public static final String JSON_PROPERTY_CONTRACT_TYPE = "contractType";
  private DataLink contractType;

  public static final String JSON_PROPERTY_HIERARCHICAL_LEVEL = "hierarchicalLevel";
  private DataLink hierarchicalLevel;

  public static final String JSON_PROPERTY_ANNUAL_SALARY = "annualSalary";
  private Double annualSalary;

  public static final String JSON_PROPERTY_SALE_PRICE = "salePrice";
  private Double salePrice;

  public static final String JSON_PROPERTY_FULL_COST_PRICE = "fullCostPrice";
  private Double fullCostPrice;

  public static final String JSON_PROPERTY_DIRECT_COST_PRICE = "directCostPrice";
  private Double directCostPrice;

  public static final String JSON_PROPERTY_DISTANCE_SCALE = "distanceScale";
  private ScaleDataLink distanceScale;

  public static final String JSON_PROPERTY_IS_ARCHIVED = "isArchived";
  private Integer isArchived;

  public static final String JSON_PROPERTY_ARCHIVED_DATE = "archivedDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime archivedDate;

  public static final String JSON_PROPERTY_LOGIN = "login";
  private String login;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_USER_ROLE = "userRole";
  private String userRole;

  public static final String JSON_PROPERTY_USER_LANGUAGE = "userLanguage";
  private DataLink userLanguage;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private String function;

  public static final String JSON_PROPERTY_LANGUAGES = "languages";
  private List<DataLink> languages;

  public static final String JSON_PROPERTY_NATIONALITY = "nationality";
  private DataLink nationality;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private String phone;

  public static final String JSON_PROPERTY_PERSONAL_PHONE = "personalPhone";
  private String personalPhone;

  public static final String JSON_PROPERTY_MOBILE = "mobile";
  private String mobile;

  public static final String JSON_PROPERTY_FAX = "fax";
  private String fax;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private String address;

  public static final String JSON_PROPERTY_ADDRESS2 = "address2";
  private String address2;

  public static final String JSON_PROPERTY_ADDRESS3 = "address3";
  private String address3;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private CountryDataLink country;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_PAYROLL_ID = "payrollId";
  private String payrollId;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private String account;

  public static final String JSON_PROPERTY_SECONDARY_ACCOUNT = "secondaryAccount";
  private String secondaryAccount;

  public static final String JSON_PROPERTY_FISCAL_POSITION = "fiscalPosition";
  private DataLink fiscalPosition;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_IBAN = "iban";
  private String iban;

  public static final String JSON_PROPERTY_BIC = "bic";
  private String bic;

  public static final String JSON_PROPERTY_PICTURE = "picture";
  private String picture;

  public static final String JSON_PROPERTY_LOGIN_MODE = "loginMode";
  private String loginMode;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private CurrencyDataLink currency;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Employee() { 
  }

  @JsonCreator
  public Employee(
    @JsonProperty(JSON_PROPERTY_IS_ARCHIVED) Integer isArchived, 
    @JsonProperty(JSON_PROPERTY_ARCHIVED_DATE) java.time.LocalDateTime archivedDate, 
    @JsonProperty(JSON_PROPERTY_UPDATED_BY) String updatedBy, 
    @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME) java.time.LocalDateTime updatedOnTime, 
    @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME) java.time.LocalDateTime createdOnTime
  ) {
    this();
    this.isArchived = isArchived;
    this.archivedDate = archivedDate;
    this.updatedBy = updatedBy;
    this.updatedOnTime = updatedOnTime;
    this.createdOnTime = createdOnTime;
  }

  public Employee id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Employee code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Unique &amp; mandatory identifier for the employee
   * @return code
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public Employee firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Mandatory first name of the employee
   * @return firstName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public Employee lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Mandatory last Name of the employee
   * @return lastName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public Employee title(TitleEnum title) {
    this.title = title;
    return this;
  }

   /**
   * Title of the employee.
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TitleEnum getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(TitleEnum title) {
    this.title = title;
  }


  public Employee type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of employee. 0 : internal, 2 : external
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Employee entity(EntityDataLink entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EntityDataLink getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntity(EntityDataLink entity) {
    this.entity = entity;
  }


  public Employee secondEntities(List<EntityDataLink> secondEntities) {
    this.secondEntities = secondEntities;
    return this;
  }

  public Employee addSecondEntitiesItem(EntityDataLink secondEntitiesItem) {
    if (this.secondEntities == null) {
      this.secondEntities = new ArrayList<>();
    }
    this.secondEntities.add(secondEntitiesItem);
    return this;
  }

   /**
   * Link to secondary entities of the employee. For more information see the /entities resource
   * @return secondEntities
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECOND_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityDataLink> getSecondEntities() {
    return secondEntities;
  }


  @JsonProperty(JSON_PROPERTY_SECOND_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondEntities(List<EntityDataLink> secondEntities) {
    this.secondEntities = secondEntities;
  }


  public Employee financialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
    return this;
  }

   /**
   * Get financialEntity
   * @return financialEntity
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EntityDataLink getFinancialEntity() {
    return financialEntity;
  }


  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFinancialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
  }


  public Employee secondFinancialEntities(List<EntityDataLink> secondFinancialEntities) {
    this.secondFinancialEntities = secondFinancialEntities;
    return this;
  }

  public Employee addSecondFinancialEntitiesItem(EntityDataLink secondFinancialEntitiesItem) {
    if (this.secondFinancialEntities == null) {
      this.secondFinancialEntities = new ArrayList<>();
    }
    this.secondFinancialEntities.add(secondFinancialEntitiesItem);
    return this;
  }

   /**
   * Link to secondary financial entities of the employee. For more information see the / entities resource
   * @return secondFinancialEntities
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECOND_FINANCIAL_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityDataLink> getSecondFinancialEntities() {
    return secondFinancialEntities;
  }


  @JsonProperty(JSON_PROPERTY_SECOND_FINANCIAL_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondFinancialEntities(List<EntityDataLink> secondFinancialEntities) {
    this.secondFinancialEntities = secondFinancialEntities;
  }


  public Employee arrivalDate(java.time.LocalDateTime arrivalDate) {
    this.arrivalDate = arrivalDate;
    return this;
  }

   /**
   * Arrival date of the employee in the company
   * @return arrivalDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARRIVAL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getArrivalDate() {
    return arrivalDate;
  }


  @JsonProperty(JSON_PROPERTY_ARRIVAL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArrivalDate(java.time.LocalDateTime arrivalDate) {
    this.arrivalDate = arrivalDate;
  }


  public Employee leavingDate(java.time.LocalDateTime leavingDate) {
    this.leavingDate = leavingDate;
    return this;
  }

   /**
   * Leaving date of the employee of the company
   * @return leavingDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEAVING_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getLeavingDate() {
    return leavingDate;
  }


  @JsonProperty(JSON_PROPERTY_LEAVING_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeavingDate(java.time.LocalDateTime leavingDate) {
    this.leavingDate = leavingDate;
  }


  public Employee birthDate(java.time.LocalDateTime birthDate) {
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Date of birth of the employee
   * @return birthDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTH_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getBirthDate() {
    return birthDate;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthDate(java.time.LocalDateTime birthDate) {
    this.birthDate = birthDate;
  }


  public Employee profiles(List<ProfileDataLink> profiles) {
    this.profiles = profiles;
    return this;
  }

  public Employee addProfilesItem(ProfileDataLink profilesItem) {
    if (this.profiles == null) {
      this.profiles = new ArrayList<>();
    }
    this.profiles.add(profilesItem);
    return this;
  }

   /**
   * Multiple link to profiles of the employee. For more information, see the /profiles resource
   * @return profiles
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ProfileDataLink> getProfiles() {
    return profiles;
  }


  @JsonProperty(JSON_PROPERTY_PROFILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfiles(List<ProfileDataLink> profiles) {
    this.profiles = profiles;
  }


  public Employee mainProfile(ProfileDataLink mainProfile) {
    this.mainProfile = mainProfile;
    return this;
  }

   /**
   * Get mainProfile
   * @return mainProfile
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProfileDataLink getMainProfile() {
    return mainProfile;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainProfile(ProfileDataLink mainProfile) {
    this.mainProfile = mainProfile;
  }


  public Employee manager(EmployeeDataLink manager) {
    this.manager = manager;
    return this;
  }

   /**
   * Get manager
   * @return manager
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getManager() {
    return manager;
  }


  @JsonProperty(JSON_PROPERTY_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManager(EmployeeDataLink manager) {
    this.manager = manager;
  }


  public Employee supportedCommercials(List<EmployeeDataLink> supportedCommercials) {
    this.supportedCommercials = supportedCommercials;
    return this;
  }

  public Employee addSupportedCommercialsItem(EmployeeDataLink supportedCommercialsItem) {
    if (this.supportedCommercials == null) {
      this.supportedCommercials = new ArrayList<>();
    }
    this.supportedCommercials.add(supportedCommercialsItem);
    return this;
  }

   /**
   * Multiple link to commercial employees. For more information see the /employees/commercials resource
   * @return supportedCommercials
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPORTED_COMMERCIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EmployeeDataLink> getSupportedCommercials() {
    return supportedCommercials;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORTED_COMMERCIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportedCommercials(List<EmployeeDataLink> supportedCommercials) {
    this.supportedCommercials = supportedCommercials;
  }


  public Employee workMode(DataLink workMode) {
    this.workMode = workMode;
    return this;
  }

   /**
   * Get workMode
   * @return workMode
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DataLink getWorkMode() {
    return workMode;
  }


  @JsonProperty(JSON_PROPERTY_WORK_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkMode(DataLink workMode) {
    this.workMode = workMode;
  }


  public Employee contractType(DataLink contractType) {
    this.contractType = contractType;
    return this;
  }

   /**
   * Get contractType
   * @return contractType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTRACT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getContractType() {
    return contractType;
  }


  @JsonProperty(JSON_PROPERTY_CONTRACT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContractType(DataLink contractType) {
    this.contractType = contractType;
  }


  public Employee hierarchicalLevel(DataLink hierarchicalLevel) {
    this.hierarchicalLevel = hierarchicalLevel;
    return this;
  }

   /**
   * Get hierarchicalLevel
   * @return hierarchicalLevel
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIERARCHICAL_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getHierarchicalLevel() {
    return hierarchicalLevel;
  }


  @JsonProperty(JSON_PROPERTY_HIERARCHICAL_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHierarchicalLevel(DataLink hierarchicalLevel) {
    this.hierarchicalLevel = hierarchicalLevel;
  }


  public Employee annualSalary(Double annualSalary) {
    this.annualSalary = annualSalary;
    return this;
  }

   /**
   * Gross annual salary of the employee
   * @return annualSalary
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNUAL_SALARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAnnualSalary() {
    return annualSalary;
  }


  @JsonProperty(JSON_PROPERTY_ANNUAL_SALARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnualSalary(Double annualSalary) {
    this.annualSalary = annualSalary;
  }


  public Employee salePrice(Double salePrice) {
    this.salePrice = salePrice;
    return this;
  }

   /**
   * Sale price of the employee
   * @return salePrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SALE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getSalePrice() {
    return salePrice;
  }


  @JsonProperty(JSON_PROPERTY_SALE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSalePrice(Double salePrice) {
    this.salePrice = salePrice;
  }


  public Employee fullCostPrice(Double fullCostPrice) {
    this.fullCostPrice = fullCostPrice;
    return this;
  }

   /**
   * Full cost price of the employee
   * @return fullCostPrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_COST_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFullCostPrice() {
    return fullCostPrice;
  }


  @JsonProperty(JSON_PROPERTY_FULL_COST_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullCostPrice(Double fullCostPrice) {
    this.fullCostPrice = fullCostPrice;
  }


  public Employee directCostPrice(Double directCostPrice) {
    this.directCostPrice = directCostPrice;
    return this;
  }

   /**
   * Direct cost price of the employee
   * @return directCostPrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECT_COST_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getDirectCostPrice() {
    return directCostPrice;
  }


  @JsonProperty(JSON_PROPERTY_DIRECT_COST_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectCostPrice(Double directCostPrice) {
    this.directCostPrice = directCostPrice;
  }


  public Employee distanceScale(ScaleDataLink distanceScale) {
    this.distanceScale = distanceScale;
    return this;
  }

   /**
   * Get distanceScale
   * @return distanceScale
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISTANCE_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ScaleDataLink getDistanceScale() {
    return distanceScale;
  }


  @JsonProperty(JSON_PROPERTY_DISTANCE_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistanceScale(ScaleDataLink distanceScale) {
    this.distanceScale = distanceScale;
  }


   /**
   * Indicates if the employee is still in company or not. 0 : No, 50 : Yes
   * @return isArchived
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIsArchived() {
    return isArchived;
  }




   /**
   * Archived date
   * @return archivedDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getArchivedDate() {
    return archivedDate;
  }




  public Employee login(String login) {
    this.login = login;
    return this;
  }

   /**
   * Login of the employee for the application
   * @return login
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLogin() {
    return login;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogin(String login) {
    this.login = login;
  }


  public Employee password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password of the employee for the application
   * @return password
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(String password) {
    this.password = password;
  }


  public Employee userRole(String userRole) {
    this.userRole = userRole;
    return this;
  }

   /**
   * User application role of the employee
   * @return userRole
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserRole() {
    return userRole;
  }


  @JsonProperty(JSON_PROPERTY_USER_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserRole(String userRole) {
    this.userRole = userRole;
  }


  public Employee userLanguage(DataLink userLanguage) {
    this.userLanguage = userLanguage;
    return this;
  }

   /**
   * Get userLanguage
   * @return userLanguage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getUserLanguage() {
    return userLanguage;
  }


  @JsonProperty(JSON_PROPERTY_USER_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserLanguage(DataLink userLanguage) {
    this.userLanguage = userLanguage;
  }


  public Employee function(String function) {
    this.function = function;
    return this;
  }

   /**
   * Function  of the employee
   * @return function
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunction() {
    return function;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunction(String function) {
    this.function = function;
  }


  public Employee languages(List<DataLink> languages) {
    this.languages = languages;
    return this;
  }

  public Employee addLanguagesItem(DataLink languagesItem) {
    if (this.languages == null) {
      this.languages = new ArrayList<>();
    }
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * Multiple link to the languages of the employee. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Employees-Languages\&quot;);&#39;&gt;Employees Languages&lt;/a&gt; in System data section
   * @return languages
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANGUAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DataLink> getLanguages() {
    return languages;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguages(List<DataLink> languages) {
    this.languages = languages;
  }


  public Employee nationality(DataLink nationality) {
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getNationality() {
    return nationality;
  }


  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNationality(DataLink nationality) {
    this.nationality = nationality;
  }


  public Employee phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Phone number of the employee
   * @return phone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(String phone) {
    this.phone = phone;
  }


  public Employee personalPhone(String personalPhone) {
    this.personalPhone = personalPhone;
    return this;
  }

   /**
   * Personal phone number of the employee
   * @return personalPhone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERSONAL_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPersonalPhone() {
    return personalPhone;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalPhone(String personalPhone) {
    this.personalPhone = personalPhone;
  }


  public Employee mobile(String mobile) {
    this.mobile = mobile;
    return this;
  }

   /**
   * Mobile phone of the employee
   * @return mobile
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOBILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMobile() {
    return mobile;
  }


  @JsonProperty(JSON_PROPERTY_MOBILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMobile(String mobile) {
    this.mobile = mobile;
  }


  public Employee fax(String fax) {
    this.fax = fax;
    return this;
  }

   /**
   * Fax of the employee
   * @return fax
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFax() {
    return fax;
  }


  @JsonProperty(JSON_PROPERTY_FAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFax(String fax) {
    this.fax = fax;
  }


  public Employee address(String address) {
    this.address = address;
    return this;
  }

   /**
   * First address line of the employee
   * @return address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(String address) {
    this.address = address;
  }


  public Employee address2(String address2) {
    this.address2 = address2;
    return this;
  }

   /**
   * Second address line of the employee
   * @return address2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress2() {
    return address2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress2(String address2) {
    this.address2 = address2;
  }


  public Employee address3(String address3) {
    this.address3 = address3;
    return this;
  }

   /**
   * Third adress line of the employee
   * @return address3
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress3() {
    return address3;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress3(String address3) {
    this.address3 = address3;
  }


  public Employee postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal code of the employee
   * @return postalCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public Employee city(String city) {
    this.city = city;
    return this;
  }

   /**
   * City of the employee
   * @return city
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public Employee country(CountryDataLink country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CountryDataLink getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(CountryDataLink country) {
    this.country = country;
  }


  public Employee email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email  of the employee
   * @return email
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public Employee payrollId(String payrollId) {
    this.payrollId = payrollId;
    return this;
  }

   /**
   * Payroll registration of the employee
   * @return payrollId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYROLL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayrollId() {
    return payrollId;
  }


  @JsonProperty(JSON_PROPERTY_PAYROLL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayrollId(String payrollId) {
    this.payrollId = payrollId;
  }


  public Employee account(String account) {
    this.account = account;
    return this;
  }

   /**
   * Resource account of the employee
   * @return account
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(String account) {
    this.account = account;
  }


  public Employee secondaryAccount(String secondaryAccount) {
    this.secondaryAccount = secondaryAccount;
    return this;
  }

   /**
   * Resource secondary account of the employee
   * @return secondaryAccount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondaryAccount() {
    return secondaryAccount;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryAccount(String secondaryAccount) {
    this.secondaryAccount = secondaryAccount;
  }


  public Employee fiscalPosition(DataLink fiscalPosition) {
    this.fiscalPosition = fiscalPosition;
    return this;
  }

   /**
   * Get fiscalPosition
   * @return fiscalPosition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FISCAL_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getFiscalPosition() {
    return fiscalPosition;
  }


  @JsonProperty(JSON_PROPERTY_FISCAL_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFiscalPosition(DataLink fiscalPosition) {
    this.fiscalPosition = fiscalPosition;
  }


  public Employee comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment about the employee
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


   /**
   * Login of the user doing the last update on the employee
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }




   /**
   * Date &amp; time of the last update of the employee
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }




   /**
   * Date &amp; time of creation of the employee
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }




  public Employee iban(String iban) {
    this.iban = iban;
    return this;
  }

   /**
   * IBAN of the employee
   * @return iban
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIban() {
    return iban;
  }


  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIban(String iban) {
    this.iban = iban;
  }


  public Employee bic(String bic) {
    this.bic = bic;
    return this;
  }

   /**
   * BIC of the employee
   * @return bic
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBic() {
    return bic;
  }


  @JsonProperty(JSON_PROPERTY_BIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBic(String bic) {
    this.bic = bic;
  }


  public Employee picture(String picture) {
    this.picture = picture;
    return this;
  }

   /**
   * Picture of the employee (Base64 without line feed)
   * @return picture
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PICTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPicture() {
    return picture;
  }


  @JsonProperty(JSON_PROPERTY_PICTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPicture(String picture) {
    this.picture = picture;
  }


  public Employee loginMode(String loginMode) {
    this.loginMode = loginMode;
    return this;
  }

   /**
   * Authentication mode. sx, ldap, microsoft or google if the application is configured.
   * @return loginMode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGIN_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoginMode() {
    return loginMode;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoginMode(String loginMode) {
    this.loginMode = loginMode;
  }


  public Employee currency(CurrencyDataLink currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CurrencyDataLink getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(CurrencyDataLink currency) {
    this.currency = currency;
  }


  public Employee extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Employee addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the employee. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this employee object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Employee employee = (Employee) o;
    return Objects.equals(this.id, employee.id) &&
        Objects.equals(this.code, employee.code) &&
        Objects.equals(this.firstName, employee.firstName) &&
        Objects.equals(this.lastName, employee.lastName) &&
        Objects.equals(this.title, employee.title) &&
        Objects.equals(this.type, employee.type) &&
        Objects.equals(this.entity, employee.entity) &&
        Objects.equals(this.secondEntities, employee.secondEntities) &&
        Objects.equals(this.financialEntity, employee.financialEntity) &&
        Objects.equals(this.secondFinancialEntities, employee.secondFinancialEntities) &&
        Objects.equals(this.arrivalDate, employee.arrivalDate) &&
        Objects.equals(this.leavingDate, employee.leavingDate) &&
        Objects.equals(this.birthDate, employee.birthDate) &&
        Objects.equals(this.profiles, employee.profiles) &&
        Objects.equals(this.mainProfile, employee.mainProfile) &&
        Objects.equals(this.manager, employee.manager) &&
        Objects.equals(this.supportedCommercials, employee.supportedCommercials) &&
        Objects.equals(this.workMode, employee.workMode) &&
        Objects.equals(this.contractType, employee.contractType) &&
        Objects.equals(this.hierarchicalLevel, employee.hierarchicalLevel) &&
        Objects.equals(this.annualSalary, employee.annualSalary) &&
        Objects.equals(this.salePrice, employee.salePrice) &&
        Objects.equals(this.fullCostPrice, employee.fullCostPrice) &&
        Objects.equals(this.directCostPrice, employee.directCostPrice) &&
        Objects.equals(this.distanceScale, employee.distanceScale) &&
        Objects.equals(this.isArchived, employee.isArchived) &&
        Objects.equals(this.archivedDate, employee.archivedDate) &&
        Objects.equals(this.login, employee.login) &&
        Objects.equals(this.password, employee.password) &&
        Objects.equals(this.userRole, employee.userRole) &&
        Objects.equals(this.userLanguage, employee.userLanguage) &&
        Objects.equals(this.function, employee.function) &&
        Objects.equals(this.languages, employee.languages) &&
        Objects.equals(this.nationality, employee.nationality) &&
        Objects.equals(this.phone, employee.phone) &&
        Objects.equals(this.personalPhone, employee.personalPhone) &&
        Objects.equals(this.mobile, employee.mobile) &&
        Objects.equals(this.fax, employee.fax) &&
        Objects.equals(this.address, employee.address) &&
        Objects.equals(this.address2, employee.address2) &&
        Objects.equals(this.address3, employee.address3) &&
        Objects.equals(this.postalCode, employee.postalCode) &&
        Objects.equals(this.city, employee.city) &&
        Objects.equals(this.country, employee.country) &&
        Objects.equals(this.email, employee.email) &&
        Objects.equals(this.payrollId, employee.payrollId) &&
        Objects.equals(this.account, employee.account) &&
        Objects.equals(this.secondaryAccount, employee.secondaryAccount) &&
        Objects.equals(this.fiscalPosition, employee.fiscalPosition) &&
        Objects.equals(this.comment, employee.comment) &&
        Objects.equals(this.updatedBy, employee.updatedBy) &&
        Objects.equals(this.updatedOnTime, employee.updatedOnTime) &&
        Objects.equals(this.createdOnTime, employee.createdOnTime) &&
        Objects.equals(this.iban, employee.iban) &&
        Objects.equals(this.bic, employee.bic) &&
        Objects.equals(this.picture, employee.picture) &&
        Objects.equals(this.loginMode, employee.loginMode) &&
        Objects.equals(this.currency, employee.currency) &&
        Objects.equals(this.extraData, employee.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, firstName, lastName, title, type, entity, secondEntities, financialEntity, secondFinancialEntities, arrivalDate, leavingDate, birthDate, profiles, mainProfile, manager, supportedCommercials, workMode, contractType, hierarchicalLevel, annualSalary, salePrice, fullCostPrice, directCostPrice, distanceScale, isArchived, archivedDate, login, password, userRole, userLanguage, function, languages, nationality, phone, personalPhone, mobile, fax, address, address2, address3, postalCode, city, country, email, payrollId, account, secondaryAccount, fiscalPosition, comment, updatedBy, updatedOnTime, createdOnTime, iban, bic, picture, loginMode, currency, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Employee {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    secondEntities: ").append(toIndentedString(secondEntities)).append("\n");
    sb.append("    financialEntity: ").append(toIndentedString(financialEntity)).append("\n");
    sb.append("    secondFinancialEntities: ").append(toIndentedString(secondFinancialEntities)).append("\n");
    sb.append("    arrivalDate: ").append(toIndentedString(arrivalDate)).append("\n");
    sb.append("    leavingDate: ").append(toIndentedString(leavingDate)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    profiles: ").append(toIndentedString(profiles)).append("\n");
    sb.append("    mainProfile: ").append(toIndentedString(mainProfile)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    supportedCommercials: ").append(toIndentedString(supportedCommercials)).append("\n");
    sb.append("    workMode: ").append(toIndentedString(workMode)).append("\n");
    sb.append("    contractType: ").append(toIndentedString(contractType)).append("\n");
    sb.append("    hierarchicalLevel: ").append(toIndentedString(hierarchicalLevel)).append("\n");
    sb.append("    annualSalary: ").append(toIndentedString(annualSalary)).append("\n");
    sb.append("    salePrice: ").append(toIndentedString(salePrice)).append("\n");
    sb.append("    fullCostPrice: ").append(toIndentedString(fullCostPrice)).append("\n");
    sb.append("    directCostPrice: ").append(toIndentedString(directCostPrice)).append("\n");
    sb.append("    distanceScale: ").append(toIndentedString(distanceScale)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    archivedDate: ").append(toIndentedString(archivedDate)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    userRole: ").append(toIndentedString(userRole)).append("\n");
    sb.append("    userLanguage: ").append(toIndentedString(userLanguage)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    personalPhone: ").append(toIndentedString(personalPhone)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    address3: ").append(toIndentedString(address3)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    payrollId: ").append(toIndentedString(payrollId)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    secondaryAccount: ").append(toIndentedString(secondaryAccount)).append("\n");
    sb.append("    fiscalPosition: ").append(toIndentedString(fiscalPosition)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    loginMode: ").append(toIndentedString(loginMode)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

