/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.ServletContext;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * HttpSession
 */
@JsonPropertyOrder({
  HttpSession.JSON_PROPERTY_ID,
  HttpSession.JSON_PROPERTY_CREATION_TIME,
  HttpSession.JSON_PROPERTY_SERVLET_CONTEXT,
  HttpSession.JSON_PROPERTY_MAX_INACTIVE_INTERVAL,
  HttpSession.JSON_PROPERTY_LAST_ACCESSED_TIME,
  HttpSession.JSON_PROPERTY_NEW,
  HttpSession.JSON_PROPERTY_ATTRIBUTE_NAMES
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-21T16:37:39.682984900+02:00[Europe/Paris]")
public class HttpSession {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATION_TIME = "creationTime";
  private Long creationTime;

  public static final String JSON_PROPERTY_SERVLET_CONTEXT = "servletContext";
  private ServletContext servletContext;

  public static final String JSON_PROPERTY_MAX_INACTIVE_INTERVAL = "maxInactiveInterval";
  private Integer maxInactiveInterval;

  public static final String JSON_PROPERTY_LAST_ACCESSED_TIME = "lastAccessedTime";
  private Long lastAccessedTime;

  public static final String JSON_PROPERTY_NEW = "new";
  private Boolean _new;

  public static final String JSON_PROPERTY_ATTRIBUTE_NAMES = "attributeNames";
  private Object attributeNames;

  public HttpSession() { 
  }

  public HttpSession id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public HttpSession creationTime(Long creationTime) {
    this.creationTime = creationTime;
    return this;
  }

   /**
   * Get creationTime
   * @return creationTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATION_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCreationTime() {
    return creationTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationTime(Long creationTime) {
    this.creationTime = creationTime;
  }


  public HttpSession servletContext(ServletContext servletContext) {
    this.servletContext = servletContext;
    return this;
  }

   /**
   * Get servletContext
   * @return servletContext
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVLET_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServletContext getServletContext() {
    return servletContext;
  }


  @JsonProperty(JSON_PROPERTY_SERVLET_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServletContext(ServletContext servletContext) {
    this.servletContext = servletContext;
  }


  public HttpSession maxInactiveInterval(Integer maxInactiveInterval) {
    this.maxInactiveInterval = maxInactiveInterval;
    return this;
  }

   /**
   * Get maxInactiveInterval
   * @return maxInactiveInterval
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_INACTIVE_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxInactiveInterval() {
    return maxInactiveInterval;
  }


  @JsonProperty(JSON_PROPERTY_MAX_INACTIVE_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxInactiveInterval(Integer maxInactiveInterval) {
    this.maxInactiveInterval = maxInactiveInterval;
  }


  public HttpSession lastAccessedTime(Long lastAccessedTime) {
    this.lastAccessedTime = lastAccessedTime;
    return this;
  }

   /**
   * Get lastAccessedTime
   * @return lastAccessedTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_ACCESSED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLastAccessedTime() {
    return lastAccessedTime;
  }


  @JsonProperty(JSON_PROPERTY_LAST_ACCESSED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastAccessedTime(Long lastAccessedTime) {
    this.lastAccessedTime = lastAccessedTime;
  }


  public HttpSession _new(Boolean _new) {
    this._new = _new;
    return this;
  }

   /**
   * Get _new
   * @return _new
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNew() {
    return _new;
  }


  @JsonProperty(JSON_PROPERTY_NEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNew(Boolean _new) {
    this._new = _new;
  }


  public HttpSession attributeNames(Object attributeNames) {
    this.attributeNames = attributeNames;
    return this;
  }

   /**
   * Get attributeNames
   * @return attributeNames
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTRIBUTE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getAttributeNames() {
    return attributeNames;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributeNames(Object attributeNames) {
    this.attributeNames = attributeNames;
  }


  /**
   * Return true if this HttpSession object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HttpSession httpSession = (HttpSession) o;
    return Objects.equals(this.id, httpSession.id) &&
        Objects.equals(this.creationTime, httpSession.creationTime) &&
        Objects.equals(this.servletContext, httpSession.servletContext) &&
        Objects.equals(this.maxInactiveInterval, httpSession.maxInactiveInterval) &&
        Objects.equals(this.lastAccessedTime, httpSession.lastAccessedTime) &&
        Objects.equals(this._new, httpSession._new) &&
        Objects.equals(this.attributeNames, httpSession.attributeNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, creationTime, servletContext, maxInactiveInterval, lastAccessedTime, _new, attributeNames);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HttpSession {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    servletContext: ").append(toIndentedString(servletContext)).append("\n");
    sb.append("    maxInactiveInterval: ").append(toIndentedString(maxInactiveInterval)).append("\n");
    sb.append("    lastAccessedTime: ").append(toIndentedString(lastAccessedTime)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("    attributeNames: ").append(toIndentedString(attributeNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

