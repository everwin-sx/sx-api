/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;


/**
 * SXAuthenticationInfo
 */
@JsonPropertyOrder({
  SXAuthenticationInfo.JSON_PROPERTY_USERNAME,
  SXAuthenticationInfo.JSON_PROPERTY_PASSWORD,
  SXAuthenticationInfo.JSON_PROPERTY_HELPDESKPIN,
  SXAuthenticationInfo.JSON_PROPERTY_HELPDESKUSER,
  SXAuthenticationInfo.JSON_PROPERTY_HELPDESKTICKET,
  SXAuthenticationInfo.JSON_PROPERTY_HELPDESKGOAL,
  SXAuthenticationInfo.JSON_PROPERTY_USERSCOPE,
  SXAuthenticationInfo.JSON_PROPERTY_NEW_PASSWORD
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class SXAuthenticationInfo {
  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_HELPDESKPIN = "helpdeskpin";
  private String helpdeskpin;

  public static final String JSON_PROPERTY_HELPDESKUSER = "helpdeskuser";
  private String helpdeskuser;

  public static final String JSON_PROPERTY_HELPDESKTICKET = "helpdeskticket";
  private String helpdeskticket;

  public static final String JSON_PROPERTY_HELPDESKGOAL = "helpdeskgoal";
  private String helpdeskgoal;

  public static final String JSON_PROPERTY_USERSCOPE = "userscope";
  private String userscope;

  public static final String JSON_PROPERTY_NEW_PASSWORD = "newPassword";
  private String newPassword;

  public SXAuthenticationInfo() { 
  }

  public SXAuthenticationInfo username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsername(String username) {
    this.username = username;
  }


  public SXAuthenticationInfo password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(String password) {
    this.password = password;
  }


  public SXAuthenticationInfo helpdeskpin(String helpdeskpin) {
    this.helpdeskpin = helpdeskpin;
    return this;
  }

   /**
   * Get helpdeskpin
   * @return helpdeskpin
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HELPDESKPIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHelpdeskpin() {
    return helpdeskpin;
  }


  @JsonProperty(JSON_PROPERTY_HELPDESKPIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHelpdeskpin(String helpdeskpin) {
    this.helpdeskpin = helpdeskpin;
  }


  public SXAuthenticationInfo helpdeskuser(String helpdeskuser) {
    this.helpdeskuser = helpdeskuser;
    return this;
  }

   /**
   * Get helpdeskuser
   * @return helpdeskuser
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HELPDESKUSER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHelpdeskuser() {
    return helpdeskuser;
  }


  @JsonProperty(JSON_PROPERTY_HELPDESKUSER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHelpdeskuser(String helpdeskuser) {
    this.helpdeskuser = helpdeskuser;
  }


  public SXAuthenticationInfo helpdeskticket(String helpdeskticket) {
    this.helpdeskticket = helpdeskticket;
    return this;
  }

   /**
   * Get helpdeskticket
   * @return helpdeskticket
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HELPDESKTICKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHelpdeskticket() {
    return helpdeskticket;
  }


  @JsonProperty(JSON_PROPERTY_HELPDESKTICKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHelpdeskticket(String helpdeskticket) {
    this.helpdeskticket = helpdeskticket;
  }


  public SXAuthenticationInfo helpdeskgoal(String helpdeskgoal) {
    this.helpdeskgoal = helpdeskgoal;
    return this;
  }

   /**
   * Get helpdeskgoal
   * @return helpdeskgoal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HELPDESKGOAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHelpdeskgoal() {
    return helpdeskgoal;
  }


  @JsonProperty(JSON_PROPERTY_HELPDESKGOAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHelpdeskgoal(String helpdeskgoal) {
    this.helpdeskgoal = helpdeskgoal;
  }


  public SXAuthenticationInfo userscope(String userscope) {
    this.userscope = userscope;
    return this;
  }

   /**
   * Get userscope
   * @return userscope
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERSCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserscope() {
    return userscope;
  }


  @JsonProperty(JSON_PROPERTY_USERSCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserscope(String userscope) {
    this.userscope = userscope;
  }


  public SXAuthenticationInfo newPassword(String newPassword) {
    this.newPassword = newPassword;
    return this;
  }

   /**
   * Get newPassword
   * @return newPassword
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNewPassword() {
    return newPassword;
  }


  @JsonProperty(JSON_PROPERTY_NEW_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewPassword(String newPassword) {
    this.newPassword = newPassword;
  }


  /**
   * Return true if this SXAuthenticationInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SXAuthenticationInfo sxAuthenticationInfo = (SXAuthenticationInfo) o;
    return Objects.equals(this.username, sxAuthenticationInfo.username) &&
        Objects.equals(this.password, sxAuthenticationInfo.password) &&
        Objects.equals(this.helpdeskpin, sxAuthenticationInfo.helpdeskpin) &&
        Objects.equals(this.helpdeskuser, sxAuthenticationInfo.helpdeskuser) &&
        Objects.equals(this.helpdeskticket, sxAuthenticationInfo.helpdeskticket) &&
        Objects.equals(this.helpdeskgoal, sxAuthenticationInfo.helpdeskgoal) &&
        Objects.equals(this.userscope, sxAuthenticationInfo.userscope) &&
        Objects.equals(this.newPassword, sxAuthenticationInfo.newPassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password, helpdeskpin, helpdeskuser, helpdeskticket, helpdeskgoal, userscope, newPassword);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SXAuthenticationInfo {\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    helpdeskpin: ").append(toIndentedString(helpdeskpin)).append("\n");
    sb.append("    helpdeskuser: ").append(toIndentedString(helpdeskuser)).append("\n");
    sb.append("    helpdeskticket: ").append(toIndentedString(helpdeskticket)).append("\n");
    sb.append("    helpdeskgoal: ").append(toIndentedString(helpdeskgoal)).append("\n");
    sb.append("    userscope: ").append(toIndentedString(userscope)).append("\n");
    sb.append("    newPassword: ").append(toIndentedString(newPassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

