/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.DataLink;
import fr.everwin.sx.client.model.EntityDataLink;
import fr.everwin.sx.client.model.FamilyDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * Equipment
 */
@JsonPropertyOrder({
  Equipment.JSON_PROPERTY_ID,
  Equipment.JSON_PROPERTY_CODE,
  Equipment.JSON_PROPERTY_TYPE,
  Equipment.JSON_PROPERTY_ENTITY,
  Equipment.JSON_PROPERTY_FINANCIAL_ENTITY,
  Equipment.JSON_PROPERTY_ARRIVAL_DATE,
  Equipment.JSON_PROPERTY_LEAVING_DATE,
  Equipment.JSON_PROPERTY_FAMILY,
  Equipment.JSON_PROPERTY_WORK_MODE,
  Equipment.JSON_PROPERTY_SALE_PRICE,
  Equipment.JSON_PROPERTY_FULL_COST_PRICE,
  Equipment.JSON_PROPERTY_DIRECT_COST_PRICE,
  Equipment.JSON_PROPERTY_COMMENT,
  Equipment.JSON_PROPERTY_UPDATED_BY,
  Equipment.JSON_PROPERTY_UPDATED_ON_TIME,
  Equipment.JSON_PROPERTY_CREATED_ON_TIME,
  Equipment.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("equipment")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Equipment {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  /**
   * Type of equipment. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Equipments-Types\&quot;);&#39;&gt;Equipments Type values&lt;/a&gt; in System data section
   */
  public enum TypeEnum {
    NUMBER_10(10),
    
    NUMBER_11(11);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(Integer value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private EntityDataLink entity;

  public static final String JSON_PROPERTY_FINANCIAL_ENTITY = "financialEntity";
  private EntityDataLink financialEntity;

  public static final String JSON_PROPERTY_ARRIVAL_DATE = "arrivalDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime arrivalDate;

  public static final String JSON_PROPERTY_LEAVING_DATE = "leavingDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime leavingDate;

  public static final String JSON_PROPERTY_FAMILY = "family";
  private FamilyDataLink family;

  public static final String JSON_PROPERTY_WORK_MODE = "workMode";
  private DataLink workMode;

  public static final String JSON_PROPERTY_SALE_PRICE = "salePrice";
  private Double salePrice;

  public static final String JSON_PROPERTY_FULL_COST_PRICE = "fullCostPrice";
  private Double fullCostPrice;

  public static final String JSON_PROPERTY_DIRECT_COST_PRICE = "directCostPrice";
  private Double directCostPrice;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Equipment() { 
  }

  @JsonCreator
  public Equipment(
    @JsonProperty(JSON_PROPERTY_UPDATED_BY) String updatedBy, 
    @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME) java.time.LocalDateTime updatedOnTime, 
    @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME) java.time.LocalDateTime createdOnTime
  ) {
    this();
    this.updatedBy = updatedBy;
    this.updatedOnTime = updatedOnTime;
    this.createdOnTime = createdOnTime;
  }

  public Equipment id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Equipment code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Unique &amp; mandatory identifier for the equipment
   * @return code
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public Equipment type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of equipment. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Equipments-Types\&quot;);&#39;&gt;Equipments Type values&lt;/a&gt; in System data section
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Equipment entity(EntityDataLink entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntity(EntityDataLink entity) {
    this.entity = entity;
  }


  public Equipment financialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
    return this;
  }

   /**
   * Get financialEntity
   * @return financialEntity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getFinancialEntity() {
    return financialEntity;
  }


  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinancialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
  }


  public Equipment arrivalDate(java.time.LocalDateTime arrivalDate) {
    this.arrivalDate = arrivalDate;
    return this;
  }

   /**
   * Arrival date of the equipment in the company
   * @return arrivalDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARRIVAL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getArrivalDate() {
    return arrivalDate;
  }


  @JsonProperty(JSON_PROPERTY_ARRIVAL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArrivalDate(java.time.LocalDateTime arrivalDate) {
    this.arrivalDate = arrivalDate;
  }


  public Equipment leavingDate(java.time.LocalDateTime leavingDate) {
    this.leavingDate = leavingDate;
    return this;
  }

   /**
   * Leaving date of the equipment of the company
   * @return leavingDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEAVING_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getLeavingDate() {
    return leavingDate;
  }


  @JsonProperty(JSON_PROPERTY_LEAVING_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeavingDate(java.time.LocalDateTime leavingDate) {
    this.leavingDate = leavingDate;
  }


  public Equipment family(FamilyDataLink family) {
    this.family = family;
    return this;
  }

   /**
   * Get family
   * @return family
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FamilyDataLink getFamily() {
    return family;
  }


  @JsonProperty(JSON_PROPERTY_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFamily(FamilyDataLink family) {
    this.family = family;
  }


  public Equipment workMode(DataLink workMode) {
    this.workMode = workMode;
    return this;
  }

   /**
   * Get workMode
   * @return workMode
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DataLink getWorkMode() {
    return workMode;
  }


  @JsonProperty(JSON_PROPERTY_WORK_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkMode(DataLink workMode) {
    this.workMode = workMode;
  }


  public Equipment salePrice(Double salePrice) {
    this.salePrice = salePrice;
    return this;
  }

   /**
   * Sale price of the equipment
   * @return salePrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SALE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getSalePrice() {
    return salePrice;
  }


  @JsonProperty(JSON_PROPERTY_SALE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSalePrice(Double salePrice) {
    this.salePrice = salePrice;
  }


  public Equipment fullCostPrice(Double fullCostPrice) {
    this.fullCostPrice = fullCostPrice;
    return this;
  }

   /**
   * Full cost price of the equipment
   * @return fullCostPrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_COST_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFullCostPrice() {
    return fullCostPrice;
  }


  @JsonProperty(JSON_PROPERTY_FULL_COST_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullCostPrice(Double fullCostPrice) {
    this.fullCostPrice = fullCostPrice;
  }


  public Equipment directCostPrice(Double directCostPrice) {
    this.directCostPrice = directCostPrice;
    return this;
  }

   /**
   * Direct cost price of the equipment
   * @return directCostPrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECT_COST_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getDirectCostPrice() {
    return directCostPrice;
  }


  @JsonProperty(JSON_PROPERTY_DIRECT_COST_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectCostPrice(Double directCostPrice) {
    this.directCostPrice = directCostPrice;
  }


  public Equipment comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment about the equipment
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


   /**
   * Login of the user doing the last update on the equipment
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }




   /**
   * Date &amp; time of the last update of the equipment
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }




   /**
   * Date &amp; time of creation of the equipment
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }




  public Equipment extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Equipment addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the equipment. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this equipment object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Equipment equipment = (Equipment) o;
    return Objects.equals(this.id, equipment.id) &&
        Objects.equals(this.code, equipment.code) &&
        Objects.equals(this.type, equipment.type) &&
        Objects.equals(this.entity, equipment.entity) &&
        Objects.equals(this.financialEntity, equipment.financialEntity) &&
        Objects.equals(this.arrivalDate, equipment.arrivalDate) &&
        Objects.equals(this.leavingDate, equipment.leavingDate) &&
        Objects.equals(this.family, equipment.family) &&
        Objects.equals(this.workMode, equipment.workMode) &&
        Objects.equals(this.salePrice, equipment.salePrice) &&
        Objects.equals(this.fullCostPrice, equipment.fullCostPrice) &&
        Objects.equals(this.directCostPrice, equipment.directCostPrice) &&
        Objects.equals(this.comment, equipment.comment) &&
        Objects.equals(this.updatedBy, equipment.updatedBy) &&
        Objects.equals(this.updatedOnTime, equipment.updatedOnTime) &&
        Objects.equals(this.createdOnTime, equipment.createdOnTime) &&
        Objects.equals(this.extraData, equipment.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, type, entity, financialEntity, arrivalDate, leavingDate, family, workMode, salePrice, fullCostPrice, directCostPrice, comment, updatedBy, updatedOnTime, createdOnTime, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Equipment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    financialEntity: ").append(toIndentedString(financialEntity)).append("\n");
    sb.append("    arrivalDate: ").append(toIndentedString(arrivalDate)).append("\n");
    sb.append("    leavingDate: ").append(toIndentedString(leavingDate)).append("\n");
    sb.append("    family: ").append(toIndentedString(family)).append("\n");
    sb.append("    workMode: ").append(toIndentedString(workMode)).append("\n");
    sb.append("    salePrice: ").append(toIndentedString(salePrice)).append("\n");
    sb.append("    fullCostPrice: ").append(toIndentedString(fullCostPrice)).append("\n");
    sb.append("    directCostPrice: ").append(toIndentedString(directCostPrice)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

