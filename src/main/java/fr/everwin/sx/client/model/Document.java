/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.DataLink;
import fr.everwin.sx.client.model.EmployeeDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * Document
 */
@JsonPropertyOrder({
  Document.JSON_PROPERTY_ID,
  Document.JSON_PROPERTY_TITLE,
  Document.JSON_PROPERTY_TYPE,
  Document.JSON_PROPERTY_NATURE,
  Document.JSON_PROPERTY_VIEWING_LEVEL,
  Document.JSON_PROPERTY_MODIFICATION_LEVEL,
  Document.JSON_PROPERTY_KEYWORDS,
  Document.JSON_PROPERTY_COMMENT,
  Document.JSON_PROPERTY_SIZE,
  Document.JSON_PROPERTY_AUTHOR,
  Document.JSON_PROPERTY_THESAURUS,
  Document.JSON_PROPERTY_LINK,
  Document.JSON_PROPERTY_CHORUS_TYPE,
  Document.JSON_PROPERTY_INDICACTES_IF_THE_DOCUMENT_HAS_BEEN_SENT_TO_CHORUS0_COLON_NO_COMMA1_COLON_YES,
  Document.JSON_PROPERTY_EUSER_LOCK_DOC,
  Document.JSON_PROPERTY_DATE_AMPERSAND_TIME_OF_CREATION_OF_THE_DOCUMENT,
  Document.JSON_PROPERTY_UPDATED_ON_TIME,
  Document.JSON_PROPERTY_UPDATED_BY,
  Document.JSON_PROPERTY_DOWNLOAD_URI,
  Document.JSON_PROPERTY_EXTRA_DATA
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Document {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_TYPE = "type";
  private DataLink type;

  /**
   * Nature of the document. 0: File; 1 Link
   */
  public enum NatureEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    NatureEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static NatureEnum fromValue(Integer value) {
      for (NatureEnum b : NatureEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_NATURE = "nature";
  private NatureEnum nature;

  public static final String JSON_PROPERTY_VIEWING_LEVEL = "viewingLevel";
  private Integer viewingLevel;

  public static final String JSON_PROPERTY_MODIFICATION_LEVEL = "modificationLevel";
  private Integer modificationLevel;

  public static final String JSON_PROPERTY_KEYWORDS = "keywords";
  private List<DataLink> keywords;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Double size;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private EmployeeDataLink author;

  public static final String JSON_PROPERTY_THESAURUS = "thesaurus";
  private List<DataLink> thesaurus;

  public static final String JSON_PROPERTY_LINK = "link";
  private String link;

  public static final String JSON_PROPERTY_CHORUS_TYPE = "chorusType";
  private String chorusType;

  /**
   * Gets or Sets indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes
   */
  public enum IndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYesEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    IndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYesEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYesEnum fromValue(Integer value) {
      for (IndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYesEnum b : IndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INDICACTES_IF_THE_DOCUMENT_HAS_BEEN_SENT_TO_CHORUS0_COLON_NO_COMMA1_COLON_YES = "Indicactes if the document has been sent to Chorus. 0 : No, 1 : Yes";
  private IndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYesEnum indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes;

  public static final String JSON_PROPERTY_EUSER_LOCK_DOC = "euserLockDoc";
  private String euserLockDoc;

  public static final String JSON_PROPERTY_DATE_AMPERSAND_TIME_OF_CREATION_OF_THE_DOCUMENT = "Date &amp; time of creation of the document";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime dateAmpersandTimeOfCreationOfTheDocument;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_DOWNLOAD_URI = "downloadUri";
  private String downloadUri;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Document() { 
  }

  public Document id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Document title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title of the comment
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public Document type(DataLink type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(DataLink type) {
    this.type = type;
  }


  public Document nature(NatureEnum nature) {
    this.nature = nature;
    return this;
  }

   /**
   * Nature of the document. 0: File; 1 Link
   * @return nature
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NatureEnum getNature() {
    return nature;
  }


  @JsonProperty(JSON_PROPERTY_NATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNature(NatureEnum nature) {
    this.nature = nature;
  }


  public Document viewingLevel(Integer viewingLevel) {
    this.viewingLevel = viewingLevel;
    return this;
  }

   /**
   * Viewing level of the document. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Documents-Viewing Levels\&quot;);&#39;&gt;Viewing Levels&lt;/a&gt; in System data section
   * @return viewingLevel
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIEWING_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getViewingLevel() {
    return viewingLevel;
  }


  @JsonProperty(JSON_PROPERTY_VIEWING_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewingLevel(Integer viewingLevel) {
    this.viewingLevel = viewingLevel;
  }


  public Document modificationLevel(Integer modificationLevel) {
    this.modificationLevel = modificationLevel;
    return this;
  }

   /**
   * Modification level of the document. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Documents-Modification Levels\&quot;);&#39;&gt;Modification Levels&lt;/a&gt; in System data section
   * @return modificationLevel
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODIFICATION_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getModificationLevel() {
    return modificationLevel;
  }


  @JsonProperty(JSON_PROPERTY_MODIFICATION_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModificationLevel(Integer modificationLevel) {
    this.modificationLevel = modificationLevel;
  }


  public Document keywords(List<DataLink> keywords) {
    this.keywords = keywords;
    return this;
  }

  public Document addKeywordsItem(DataLink keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

   /**
   * Keywords of the document. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Documents-Keywords\&quot;);&#39;&gt;Keywords&lt;/a&gt; in System data section
   * @return keywords
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEYWORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DataLink> getKeywords() {
    return keywords;
  }


  @JsonProperty(JSON_PROPERTY_KEYWORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeywords(List<DataLink> keywords) {
    this.keywords = keywords;
  }


  public Document comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment about the document
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public Document size(Double size) {
    this.size = size;
    return this;
  }

   /**
   * Size of the document
   * @return size
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(Double size) {
    this.size = size;
  }


  public Document author(EmployeeDataLink author) {
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthor(EmployeeDataLink author) {
    this.author = author;
  }


  public Document thesaurus(List<DataLink> thesaurus) {
    this.thesaurus = thesaurus;
    return this;
  }

  public Document addThesaurusItem(DataLink thesaurusItem) {
    if (this.thesaurus == null) {
      this.thesaurus = new ArrayList<>();
    }
    this.thesaurus.add(thesaurusItem);
    return this;
  }

   /**
   * Thesaurus of the document. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Documents-Thesaurus\&quot;);&#39;&gt;Thesaurus&lt;/a&gt; in System data section
   * @return thesaurus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THESAURUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DataLink> getThesaurus() {
    return thesaurus;
  }


  @JsonProperty(JSON_PROPERTY_THESAURUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThesaurus(List<DataLink> thesaurus) {
    this.thesaurus = thesaurus;
  }


  public Document link(String link) {
    this.link = link;
    return this;
  }

   /**
   * Link to document
   * @return link
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLink(String link) {
    this.link = link;
  }


  public Document chorusType(String chorusType) {
    this.chorusType = chorusType;
    return this;
  }

   /**
   * Chorus type of the document
   * @return chorusType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHORUS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChorusType() {
    return chorusType;
  }


  @JsonProperty(JSON_PROPERTY_CHORUS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChorusType(String chorusType) {
    this.chorusType = chorusType;
  }


  public Document indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes(IndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYesEnum indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes) {
    this.indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes = indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes;
    return this;
  }

   /**
   * Get indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes
   * @return indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INDICACTES_IF_THE_DOCUMENT_HAS_BEEN_SENT_TO_CHORUS0_COLON_NO_COMMA1_COLON_YES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYesEnum getIndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes() {
    return indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes;
  }


  @JsonProperty(JSON_PROPERTY_INDICACTES_IF_THE_DOCUMENT_HAS_BEEN_SENT_TO_CHORUS0_COLON_NO_COMMA1_COLON_YES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes(IndicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYesEnum indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes) {
    this.indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes = indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes;
  }


  public Document euserLockDoc(String euserLockDoc) {
    this.euserLockDoc = euserLockDoc;
    return this;
  }

   /**
   * Login of the user locking the document
   * @return euserLockDoc
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EUSER_LOCK_DOC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEuserLockDoc() {
    return euserLockDoc;
  }


  @JsonProperty(JSON_PROPERTY_EUSER_LOCK_DOC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEuserLockDoc(String euserLockDoc) {
    this.euserLockDoc = euserLockDoc;
  }


  public Document dateAmpersandTimeOfCreationOfTheDocument(java.time.LocalDateTime dateAmpersandTimeOfCreationOfTheDocument) {
    this.dateAmpersandTimeOfCreationOfTheDocument = dateAmpersandTimeOfCreationOfTheDocument;
    return this;
  }

   /**
   * Get dateAmpersandTimeOfCreationOfTheDocument
   * @return dateAmpersandTimeOfCreationOfTheDocument
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_AMPERSAND_TIME_OF_CREATION_OF_THE_DOCUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getDateAmpersandTimeOfCreationOfTheDocument() {
    return dateAmpersandTimeOfCreationOfTheDocument;
  }


  @JsonProperty(JSON_PROPERTY_DATE_AMPERSAND_TIME_OF_CREATION_OF_THE_DOCUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateAmpersandTimeOfCreationOfTheDocument(java.time.LocalDateTime dateAmpersandTimeOfCreationOfTheDocument) {
    this.dateAmpersandTimeOfCreationOfTheDocument = dateAmpersandTimeOfCreationOfTheDocument;
  }


  public Document updatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
    return this;
  }

   /**
   * Date &amp; time of the last update of the document
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
  }


  public Document updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Login of the user doing the last update on the document
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public Document downloadUri(String downloadUri) {
    this.downloadUri = downloadUri;
    return this;
  }

   /**
   * Get downloadUri
   * @return downloadUri
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOWNLOAD_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDownloadUri() {
    return downloadUri;
  }


  @JsonProperty(JSON_PROPERTY_DOWNLOAD_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDownloadUri(String downloadUri) {
    this.downloadUri = downloadUri;
  }


  public Document extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Document addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the company. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this Document object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this.id, document.id) &&
        Objects.equals(this.title, document.title) &&
        Objects.equals(this.type, document.type) &&
        Objects.equals(this.nature, document.nature) &&
        Objects.equals(this.viewingLevel, document.viewingLevel) &&
        Objects.equals(this.modificationLevel, document.modificationLevel) &&
        Objects.equals(this.keywords, document.keywords) &&
        Objects.equals(this.comment, document.comment) &&
        Objects.equals(this.size, document.size) &&
        Objects.equals(this.author, document.author) &&
        Objects.equals(this.thesaurus, document.thesaurus) &&
        Objects.equals(this.link, document.link) &&
        Objects.equals(this.chorusType, document.chorusType) &&
        Objects.equals(this.indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes, document.indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes) &&
        Objects.equals(this.euserLockDoc, document.euserLockDoc) &&
        Objects.equals(this.dateAmpersandTimeOfCreationOfTheDocument, document.dateAmpersandTimeOfCreationOfTheDocument) &&
        Objects.equals(this.updatedOnTime, document.updatedOnTime) &&
        Objects.equals(this.updatedBy, document.updatedBy) &&
        Objects.equals(this.downloadUri, document.downloadUri) &&
        Objects.equals(this.extraData, document.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, type, nature, viewingLevel, modificationLevel, keywords, comment, size, author, thesaurus, link, chorusType, indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes, euserLockDoc, dateAmpersandTimeOfCreationOfTheDocument, updatedOnTime, updatedBy, downloadUri, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    nature: ").append(toIndentedString(nature)).append("\n");
    sb.append("    viewingLevel: ").append(toIndentedString(viewingLevel)).append("\n");
    sb.append("    modificationLevel: ").append(toIndentedString(modificationLevel)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    thesaurus: ").append(toIndentedString(thesaurus)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    chorusType: ").append(toIndentedString(chorusType)).append("\n");
    sb.append("    indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes: ").append(toIndentedString(indicactesIfTheDocumentHasBeenSentToChorus0ColonNoComma1ColonYes)).append("\n");
    sb.append("    euserLockDoc: ").append(toIndentedString(euserLockDoc)).append("\n");
    sb.append("    dateAmpersandTimeOfCreationOfTheDocument: ").append(toIndentedString(dateAmpersandTimeOfCreationOfTheDocument)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    downloadUri: ").append(toIndentedString(downloadUri)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

