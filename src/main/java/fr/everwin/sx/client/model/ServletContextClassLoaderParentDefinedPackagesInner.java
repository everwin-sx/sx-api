/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ServletContextClassLoaderParentDefinedPackagesInner
 */
@JsonPropertyOrder({
  ServletContextClassLoaderParentDefinedPackagesInner.JSON_PROPERTY_NAME,
  ServletContextClassLoaderParentDefinedPackagesInner.JSON_PROPERTY_ANNOTATIONS,
  ServletContextClassLoaderParentDefinedPackagesInner.JSON_PROPERTY_DECLARED_ANNOTATIONS,
  ServletContextClassLoaderParentDefinedPackagesInner.JSON_PROPERTY_SEALED,
  ServletContextClassLoaderParentDefinedPackagesInner.JSON_PROPERTY_SPECIFICATION_TITLE,
  ServletContextClassLoaderParentDefinedPackagesInner.JSON_PROPERTY_SPECIFICATION_VERSION,
  ServletContextClassLoaderParentDefinedPackagesInner.JSON_PROPERTY_SPECIFICATION_VENDOR,
  ServletContextClassLoaderParentDefinedPackagesInner.JSON_PROPERTY_IMPLEMENTATION_TITLE,
  ServletContextClassLoaderParentDefinedPackagesInner.JSON_PROPERTY_IMPLEMENTATION_VERSION,
  ServletContextClassLoaderParentDefinedPackagesInner.JSON_PROPERTY_IMPLEMENTATION_VENDOR
})
@JsonTypeName("ServletContext_classLoader_parent_definedPackages_inner")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-21T16:37:39.682984900+02:00[Europe/Paris]")
public class ServletContextClassLoaderParentDefinedPackagesInner {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ANNOTATIONS = "annotations";
  private List<Object> annotations;

  public static final String JSON_PROPERTY_DECLARED_ANNOTATIONS = "declaredAnnotations";
  private List<Object> declaredAnnotations;

  public static final String JSON_PROPERTY_SEALED = "sealed";
  private Boolean sealed;

  public static final String JSON_PROPERTY_SPECIFICATION_TITLE = "specificationTitle";
  private String specificationTitle;

  public static final String JSON_PROPERTY_SPECIFICATION_VERSION = "specificationVersion";
  private String specificationVersion;

  public static final String JSON_PROPERTY_SPECIFICATION_VENDOR = "specificationVendor";
  private String specificationVendor;

  public static final String JSON_PROPERTY_IMPLEMENTATION_TITLE = "implementationTitle";
  private String implementationTitle;

  public static final String JSON_PROPERTY_IMPLEMENTATION_VERSION = "implementationVersion";
  private String implementationVersion;

  public static final String JSON_PROPERTY_IMPLEMENTATION_VENDOR = "implementationVendor";
  private String implementationVendor;

  public ServletContextClassLoaderParentDefinedPackagesInner() { 
  }

  public ServletContextClassLoaderParentDefinedPackagesInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ServletContextClassLoaderParentDefinedPackagesInner annotations(List<Object> annotations) {
    this.annotations = annotations;
    return this;
  }

  public ServletContextClassLoaderParentDefinedPackagesInner addAnnotationsItem(Object annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new ArrayList<>();
    }
    this.annotations.add(annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getAnnotations() {
    return annotations;
  }


  @JsonProperty(JSON_PROPERTY_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnotations(List<Object> annotations) {
    this.annotations = annotations;
  }


  public ServletContextClassLoaderParentDefinedPackagesInner declaredAnnotations(List<Object> declaredAnnotations) {
    this.declaredAnnotations = declaredAnnotations;
    return this;
  }

  public ServletContextClassLoaderParentDefinedPackagesInner addDeclaredAnnotationsItem(Object declaredAnnotationsItem) {
    if (this.declaredAnnotations == null) {
      this.declaredAnnotations = new ArrayList<>();
    }
    this.declaredAnnotations.add(declaredAnnotationsItem);
    return this;
  }

   /**
   * Get declaredAnnotations
   * @return declaredAnnotations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECLARED_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getDeclaredAnnotations() {
    return declaredAnnotations;
  }


  @JsonProperty(JSON_PROPERTY_DECLARED_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeclaredAnnotations(List<Object> declaredAnnotations) {
    this.declaredAnnotations = declaredAnnotations;
  }


  public ServletContextClassLoaderParentDefinedPackagesInner sealed(Boolean sealed) {
    this.sealed = sealed;
    return this;
  }

   /**
   * Get sealed
   * @return sealed
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEALED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSealed() {
    return sealed;
  }


  @JsonProperty(JSON_PROPERTY_SEALED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSealed(Boolean sealed) {
    this.sealed = sealed;
  }


  public ServletContextClassLoaderParentDefinedPackagesInner specificationTitle(String specificationTitle) {
    this.specificationTitle = specificationTitle;
    return this;
  }

   /**
   * Get specificationTitle
   * @return specificationTitle
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPECIFICATION_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSpecificationTitle() {
    return specificationTitle;
  }


  @JsonProperty(JSON_PROPERTY_SPECIFICATION_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecificationTitle(String specificationTitle) {
    this.specificationTitle = specificationTitle;
  }


  public ServletContextClassLoaderParentDefinedPackagesInner specificationVersion(String specificationVersion) {
    this.specificationVersion = specificationVersion;
    return this;
  }

   /**
   * Get specificationVersion
   * @return specificationVersion
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPECIFICATION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSpecificationVersion() {
    return specificationVersion;
  }


  @JsonProperty(JSON_PROPERTY_SPECIFICATION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecificationVersion(String specificationVersion) {
    this.specificationVersion = specificationVersion;
  }


  public ServletContextClassLoaderParentDefinedPackagesInner specificationVendor(String specificationVendor) {
    this.specificationVendor = specificationVendor;
    return this;
  }

   /**
   * Get specificationVendor
   * @return specificationVendor
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPECIFICATION_VENDOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSpecificationVendor() {
    return specificationVendor;
  }


  @JsonProperty(JSON_PROPERTY_SPECIFICATION_VENDOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecificationVendor(String specificationVendor) {
    this.specificationVendor = specificationVendor;
  }


  public ServletContextClassLoaderParentDefinedPackagesInner implementationTitle(String implementationTitle) {
    this.implementationTitle = implementationTitle;
    return this;
  }

   /**
   * Get implementationTitle
   * @return implementationTitle
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPLEMENTATION_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImplementationTitle() {
    return implementationTitle;
  }


  @JsonProperty(JSON_PROPERTY_IMPLEMENTATION_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImplementationTitle(String implementationTitle) {
    this.implementationTitle = implementationTitle;
  }


  public ServletContextClassLoaderParentDefinedPackagesInner implementationVersion(String implementationVersion) {
    this.implementationVersion = implementationVersion;
    return this;
  }

   /**
   * Get implementationVersion
   * @return implementationVersion
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPLEMENTATION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImplementationVersion() {
    return implementationVersion;
  }


  @JsonProperty(JSON_PROPERTY_IMPLEMENTATION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImplementationVersion(String implementationVersion) {
    this.implementationVersion = implementationVersion;
  }


  public ServletContextClassLoaderParentDefinedPackagesInner implementationVendor(String implementationVendor) {
    this.implementationVendor = implementationVendor;
    return this;
  }

   /**
   * Get implementationVendor
   * @return implementationVendor
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPLEMENTATION_VENDOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImplementationVendor() {
    return implementationVendor;
  }


  @JsonProperty(JSON_PROPERTY_IMPLEMENTATION_VENDOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImplementationVendor(String implementationVendor) {
    this.implementationVendor = implementationVendor;
  }


  /**
   * Return true if this ServletContext_classLoader_parent_definedPackages_inner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServletContextClassLoaderParentDefinedPackagesInner servletContextClassLoaderParentDefinedPackagesInner = (ServletContextClassLoaderParentDefinedPackagesInner) o;
    return Objects.equals(this.name, servletContextClassLoaderParentDefinedPackagesInner.name) &&
        Objects.equals(this.annotations, servletContextClassLoaderParentDefinedPackagesInner.annotations) &&
        Objects.equals(this.declaredAnnotations, servletContextClassLoaderParentDefinedPackagesInner.declaredAnnotations) &&
        Objects.equals(this.sealed, servletContextClassLoaderParentDefinedPackagesInner.sealed) &&
        Objects.equals(this.specificationTitle, servletContextClassLoaderParentDefinedPackagesInner.specificationTitle) &&
        Objects.equals(this.specificationVersion, servletContextClassLoaderParentDefinedPackagesInner.specificationVersion) &&
        Objects.equals(this.specificationVendor, servletContextClassLoaderParentDefinedPackagesInner.specificationVendor) &&
        Objects.equals(this.implementationTitle, servletContextClassLoaderParentDefinedPackagesInner.implementationTitle) &&
        Objects.equals(this.implementationVersion, servletContextClassLoaderParentDefinedPackagesInner.implementationVersion) &&
        Objects.equals(this.implementationVendor, servletContextClassLoaderParentDefinedPackagesInner.implementationVendor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, annotations, declaredAnnotations, sealed, specificationTitle, specificationVersion, specificationVendor, implementationTitle, implementationVersion, implementationVendor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServletContextClassLoaderParentDefinedPackagesInner {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    declaredAnnotations: ").append(toIndentedString(declaredAnnotations)).append("\n");
    sb.append("    sealed: ").append(toIndentedString(sealed)).append("\n");
    sb.append("    specificationTitle: ").append(toIndentedString(specificationTitle)).append("\n");
    sb.append("    specificationVersion: ").append(toIndentedString(specificationVersion)).append("\n");
    sb.append("    specificationVendor: ").append(toIndentedString(specificationVendor)).append("\n");
    sb.append("    implementationTitle: ").append(toIndentedString(implementationTitle)).append("\n");
    sb.append("    implementationVersion: ").append(toIndentedString(implementationVersion)).append("\n");
    sb.append("    implementationVendor: ").append(toIndentedString(implementationVendor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

