/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * AdvanceAffectation
 */
@JsonPropertyOrder({
  AdvanceAffectation.JSON_PROPERTY_ID,
  AdvanceAffectation.JSON_PROPERTY_ADVANCE,
  AdvanceAffectation.JSON_PROPERTY_EXPENSE_SHEET,
  AdvanceAffectation.JSON_PROPERTY_AFFECTED_AMOUNT,
  AdvanceAffectation.JSON_PROPERTY_CURRENCY,
  AdvanceAffectation.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("advanceAffectation")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class AdvanceAffectation {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_ADVANCE = "advance";
  private AdvanceDataLink advance;

  public static final String JSON_PROPERTY_EXPENSE_SHEET = "expenseSheet";
  private ExpenseSheetDataLink expenseSheet;

  public static final String JSON_PROPERTY_AFFECTED_AMOUNT = "affectedAmount";
  private Double affectedAmount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private CurrencyDataLink currency;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public AdvanceAffectation() { 
  }

  public AdvanceAffectation id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public AdvanceAffectation advance(AdvanceDataLink advance) {
    this.advance = advance;
    return this;
  }

   /**
   * Get advance
   * @return advance
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADVANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AdvanceDataLink getAdvance() {
    return advance;
  }


  @JsonProperty(JSON_PROPERTY_ADVANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdvance(AdvanceDataLink advance) {
    this.advance = advance;
  }


  public AdvanceAffectation expenseSheet(ExpenseSheetDataLink expenseSheet) {
    this.expenseSheet = expenseSheet;
    return this;
  }

   /**
   * Get expenseSheet
   * @return expenseSheet
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPENSE_SHEET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ExpenseSheetDataLink getExpenseSheet() {
    return expenseSheet;
  }


  @JsonProperty(JSON_PROPERTY_EXPENSE_SHEET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpenseSheet(ExpenseSheetDataLink expenseSheet) {
    this.expenseSheet = expenseSheet;
  }


  public AdvanceAffectation affectedAmount(Double affectedAmount) {
    this.affectedAmount = affectedAmount;
    return this;
  }

   /**
   * Amount of the affectation
   * @return affectedAmount
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AFFECTED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getAffectedAmount() {
    return affectedAmount;
  }


  @JsonProperty(JSON_PROPERTY_AFFECTED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAffectedAmount(Double affectedAmount) {
    this.affectedAmount = affectedAmount;
  }


  public AdvanceAffectation currency(CurrencyDataLink currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CurrencyDataLink getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(CurrencyDataLink currency) {
    this.currency = currency;
  }


  public AdvanceAffectation extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public AdvanceAffectation addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the advance affectation. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this advanceAffectation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdvanceAffectation advanceAffectation = (AdvanceAffectation) o;
    return Objects.equals(this.id, advanceAffectation.id) &&
        Objects.equals(this.advance, advanceAffectation.advance) &&
        Objects.equals(this.expenseSheet, advanceAffectation.expenseSheet) &&
        Objects.equals(this.affectedAmount, advanceAffectation.affectedAmount) &&
        Objects.equals(this.currency, advanceAffectation.currency) &&
        Objects.equals(this.extraData, advanceAffectation.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, advance, expenseSheet, affectedAmount, currency, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdvanceAffectation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    advance: ").append(toIndentedString(advance)).append("\n");
    sb.append("    expenseSheet: ").append(toIndentedString(expenseSheet)).append("\n");
    sb.append("    affectedAmount: ").append(toIndentedString(affectedAmount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

