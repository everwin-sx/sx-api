/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Account
 */
@JsonPropertyOrder({
  Account.JSON_PROPERTY_ID,
  Account.JSON_PROPERTY_LABEL,
  Account.JSON_PROPERTY_ACCOUNT,
  Account.JSON_PROPERTY_VAT_SYSTEM,
  Account.JSON_PROPERTY_TYPE,
  Account.JSON_PROPERTY_FISCAL_POSITION,
  Account.JSON_PROPERTY_ACCOUNTING_ENTITIES,
  Account.JSON_PROPERTY_CATEGORIES,
  Account.JSON_PROPERTY_VATS,
  Account.JSON_PROPERTY_ROW_TYPES,
  Account.JSON_PROPERTY_ROW_TYPE_PARAMETERS
})
@JsonTypeName("account")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class Account {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private String account;

  public static final String JSON_PROPERTY_VAT_SYSTEM = "vatSystem";
  private Integer vatSystem;

  public static final String JSON_PROPERTY_TYPE = "type";
  private Integer type;

  public static final String JSON_PROPERTY_FISCAL_POSITION = "fiscalPosition";
  private DataLink fiscalPosition;

  public static final String JSON_PROPERTY_ACCOUNTING_ENTITIES = "accountingEntities";
  private List<EntityDataLink> accountingEntities;

  public static final String JSON_PROPERTY_CATEGORIES = "categories";
  private List<ProjectCategoryDataLink> categories;

  public static final String JSON_PROPERTY_VATS = "vats";
  private List<VatTypeDataLink> vats;

  public static final String JSON_PROPERTY_ROW_TYPES = "rowTypes";
  private List<RowtypeDataLink> rowTypes;

  public static final String JSON_PROPERTY_ROW_TYPE_PARAMETERS = "rowTypeParameters";
  private List<RowTypeParameterDataLink> rowTypeParameters;

  public Account() { 
  }

  public Account id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Account label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label of the revenue or expenditure
   * @return label
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public Account account(String account) {
    this.account = account;
    return this;
  }

   /**
   * Code of the revenue or expenditure
   * @return account
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(String account) {
    this.account = account;
  }


  public Account vatSystem(Integer vatSystem) {
    this.vatSystem = vatSystem;
    return this;
  }

   /**
   * VAT system of the revenue or expenditure
   * @return vatSystem
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVatSystem() {
    return vatSystem;
  }


  @JsonProperty(JSON_PROPERTY_VAT_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVatSystem(Integer vatSystem) {
    this.vatSystem = vatSystem;
  }


  public Account type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Type used by the revenue or expenditure
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(Integer type) {
    this.type = type;
  }


  public Account fiscalPosition(DataLink fiscalPosition) {
    this.fiscalPosition = fiscalPosition;
    return this;
  }

   /**
   * Get fiscalPosition
   * @return fiscalPosition
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FISCAL_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getFiscalPosition() {
    return fiscalPosition;
  }


  @JsonProperty(JSON_PROPERTY_FISCAL_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFiscalPosition(DataLink fiscalPosition) {
    this.fiscalPosition = fiscalPosition;
  }


  public Account accountingEntities(List<EntityDataLink> accountingEntities) {
    this.accountingEntities = accountingEntities;
    return this;
  }

  public Account addAccountingEntitiesItem(EntityDataLink accountingEntitiesItem) {
    if (this.accountingEntities == null) {
      this.accountingEntities = new ArrayList<>();
    }
    this.accountingEntities.add(accountingEntitiesItem);
    return this;
  }

   /**
   * Multiple link to accounting entity that own this revenue or expenditure. For more informations see the /entities resource
   * @return accountingEntities
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNTING_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityDataLink> getAccountingEntities() {
    return accountingEntities;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNTING_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountingEntities(List<EntityDataLink> accountingEntities) {
    this.accountingEntities = accountingEntities;
  }


  public Account categories(List<ProjectCategoryDataLink> categories) {
    this.categories = categories;
    return this;
  }

  public Account addCategoriesItem(ProjectCategoryDataLink categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Link to the project categories revenue or expenditure. For more informations see the /project-categories resource
   * @return categories
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ProjectCategoryDataLink> getCategories() {
    return categories;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategories(List<ProjectCategoryDataLink> categories) {
    this.categories = categories;
  }


  public Account vats(List<VatTypeDataLink> vats) {
    this.vats = vats;
    return this;
  }

  public Account addVatsItem(VatTypeDataLink vatsItem) {
    if (this.vats == null) {
      this.vats = new ArrayList<>();
    }
    this.vats.add(vatsItem);
    return this;
  }

   /**
   * VATS of the revenue or expenditure
   * @return vats
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<VatTypeDataLink> getVats() {
    return vats;
  }


  @JsonProperty(JSON_PROPERTY_VATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVats(List<VatTypeDataLink> vats) {
    this.vats = vats;
  }


  public Account rowTypes(List<RowtypeDataLink> rowTypes) {
    this.rowTypes = rowTypes;
    return this;
  }

  public Account addRowTypesItem(RowtypeDataLink rowTypesItem) {
    if (this.rowTypes == null) {
      this.rowTypes = new ArrayList<>();
    }
    this.rowTypes.add(rowTypesItem);
    return this;
  }

   /**
   * Rowtypes of the revenue or expenditure
   * @return rowTypes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROW_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RowtypeDataLink> getRowTypes() {
    return rowTypes;
  }


  @JsonProperty(JSON_PROPERTY_ROW_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRowTypes(List<RowtypeDataLink> rowTypes) {
    this.rowTypes = rowTypes;
  }


  public Account rowTypeParameters(List<RowTypeParameterDataLink> rowTypeParameters) {
    this.rowTypeParameters = rowTypeParameters;
    return this;
  }

  public Account addRowTypeParametersItem(RowTypeParameterDataLink rowTypeParametersItem) {
    if (this.rowTypeParameters == null) {
      this.rowTypeParameters = new ArrayList<>();
    }
    this.rowTypeParameters.add(rowTypeParametersItem);
    return this;
  }

   /**
   * Row type parameter.
   * @return rowTypeParameters
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROW_TYPE_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RowTypeParameterDataLink> getRowTypeParameters() {
    return rowTypeParameters;
  }


  @JsonProperty(JSON_PROPERTY_ROW_TYPE_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRowTypeParameters(List<RowTypeParameterDataLink> rowTypeParameters) {
    this.rowTypeParameters = rowTypeParameters;
  }


  /**
   * Return true if this account object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.id, account.id) &&
        Objects.equals(this.label, account.label) &&
        Objects.equals(this.account, account.account) &&
        Objects.equals(this.vatSystem, account.vatSystem) &&
        Objects.equals(this.type, account.type) &&
        Objects.equals(this.fiscalPosition, account.fiscalPosition) &&
        Objects.equals(this.accountingEntities, account.accountingEntities) &&
        Objects.equals(this.categories, account.categories) &&
        Objects.equals(this.vats, account.vats) &&
        Objects.equals(this.rowTypes, account.rowTypes) &&
        Objects.equals(this.rowTypeParameters, account.rowTypeParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, label, account, vatSystem, type, fiscalPosition, accountingEntities, categories, vats, rowTypes, rowTypeParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    vatSystem: ").append(toIndentedString(vatSystem)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    fiscalPosition: ").append(toIndentedString(fiscalPosition)).append("\n");
    sb.append("    accountingEntities: ").append(toIndentedString(accountingEntities)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    vats: ").append(toIndentedString(vats)).append("\n");
    sb.append("    rowTypes: ").append(toIndentedString(rowTypes)).append("\n");
    sb.append("    rowTypeParameters: ").append(toIndentedString(rowTypeParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

