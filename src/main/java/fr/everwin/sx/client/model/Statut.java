/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.Objects;


/**
 * Represents the statut of a customer or a supplier
 */
@JsonPropertyOrder({
  Statut.JSON_PROPERTY_ID,
  Statut.JSON_PROPERTY_NAME,
  Statut.JSON_PROPERTY_LABEL,
  Statut.JSON_PROPERTY_ACCESS,
  Statut.JSON_PROPERTY_DEFAULT_STATUS,
  Statut.JSON_PROPERTY_COLOR,
  Statut.JSON_PROPERTY_ARCHIVED,
  Statut.JSON_PROPERTY_CORPORAMA_STATUS
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class Statut {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  /**
   * Access CRM and/or PRM. 0 : CRM, 1 : CRM and PRM customer, 2 : PRM customer, 3 : CRM and PRM customer or supplier, 4 : CRM and PRM supplier, 5 : PRM supplier
   */
  public enum AccessEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5);

    private Integer value;

    AccessEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AccessEnum fromValue(Integer value) {
      for (AccessEnum b : AccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACCESS = "access";
  private AccessEnum access;

  /**
   * Is default statut. 0 : No, 1 : Yes
   */
  public enum DefaultStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    DefaultStatusEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DefaultStatusEnum fromValue(Integer value) {
      for (DefaultStatusEnum b : DefaultStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DEFAULT_STATUS = "defaultStatus";
  private DefaultStatusEnum defaultStatus;

  public static final String JSON_PROPERTY_COLOR = "color";
  private String color;

  /**
   * Is active. 0 : Active, 10 : Unavailable
   */
  public enum ArchivedEnum {
    NUMBER_0(0),
    
    NUMBER_10(10);

    private Integer value;

    ArchivedEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ArchivedEnum fromValue(Integer value) {
      for (ArchivedEnum b : ArchivedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ARCHIVED = "archived";
  private ArchivedEnum archived;

  /**
   * Corporama statut. 0 : No, 1 : Yes
   */
  public enum CorporamaStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    CorporamaStatusEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CorporamaStatusEnum fromValue(Integer value) {
      for (CorporamaStatusEnum b : CorporamaStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CORPORAMA_STATUS = "corporamaStatus";
  private CorporamaStatusEnum corporamaStatus;

  public Statut() { 
  }

  @JsonCreator
  public Statut(
    @JsonProperty(JSON_PROPERTY_NAME) String name, 
    @JsonProperty(JSON_PROPERTY_LABEL) String label, 
    @JsonProperty(JSON_PROPERTY_ACCESS) AccessEnum access, 
    @JsonProperty(JSON_PROPERTY_DEFAULT_STATUS) DefaultStatusEnum defaultStatus, 
    @JsonProperty(JSON_PROPERTY_COLOR) String color, 
    @JsonProperty(JSON_PROPERTY_ARCHIVED) ArchivedEnum archived, 
    @JsonProperty(JSON_PROPERTY_CORPORAMA_STATUS) CorporamaStatusEnum corporamaStatus
  ) {
    this();
    this.name = name;
    this.label = label;
    this.access = access;
    this.defaultStatus = defaultStatus;
    this.color = color;
    this.archived = archived;
    this.corporamaStatus = corporamaStatus;
  }

  public Statut id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


   /**
   * Name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }




   /**
   * Label
   * @return label
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }




   /**
   * Access CRM and/or PRM. 0 : CRM, 1 : CRM and PRM customer, 2 : PRM customer, 3 : CRM and PRM customer or supplier, 4 : CRM and PRM supplier, 5 : PRM supplier
   * @return access
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccessEnum getAccess() {
    return access;
  }




   /**
   * Is default statut. 0 : No, 1 : Yes
   * @return defaultStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DefaultStatusEnum getDefaultStatus() {
    return defaultStatus;
  }




   /**
   * Color
   * @return color
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColor() {
    return color;
  }




   /**
   * Is active. 0 : Active, 10 : Unavailable
   * @return archived
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ArchivedEnum getArchived() {
    return archived;
  }




   /**
   * Corporama statut. 0 : No, 1 : Yes
   * @return corporamaStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CORPORAMA_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CorporamaStatusEnum getCorporamaStatus() {
    return corporamaStatus;
  }




  /**
   * Return true if this Statut object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Statut statut = (Statut) o;
    return Objects.equals(this.id, statut.id) &&
        Objects.equals(this.name, statut.name) &&
        Objects.equals(this.label, statut.label) &&
        Objects.equals(this.access, statut.access) &&
        Objects.equals(this.defaultStatus, statut.defaultStatus) &&
        Objects.equals(this.color, statut.color) &&
        Objects.equals(this.archived, statut.archived) &&
        Objects.equals(this.corporamaStatus, statut.corporamaStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, label, access, defaultStatus, color, archived, corporamaStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Statut {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    defaultStatus: ").append(toIndentedString(defaultStatus)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    corporamaStatus: ").append(toIndentedString(corporamaStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

