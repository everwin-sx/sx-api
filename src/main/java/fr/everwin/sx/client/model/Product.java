/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Product
 */
@JsonPropertyOrder({
  Product.JSON_PROPERTY_ID,
  Product.JSON_PROPERTY_NAME,
  Product.JSON_PROPERTY_LABEL,
  Product.JSON_PROPERTY_ROW_TYPES,
  Product.JSON_PROPERTY_CUSTOMER_REF,
  Product.JSON_PROPERTY_SUPPLIER,
  Product.JSON_PROPERTY_SUPPLIER_REF,
  Product.JSON_PROPERTY_SALE_PRICE,
  Product.JSON_PROPERTY_PURCHASE_PRICE,
  Product.JSON_PROPERTY_PURCHASE_LIST_PRICE,
  Product.JSON_PROPERTY_PURCHASE_DISCOUNT_RATE,
  Product.JSON_PROPERTY_CURRENCY,
  Product.JSON_PROPERTY_IS_ARCHIVED,
  Product.JSON_PROPERTY_CATEGORY,
  Product.JSON_PROPERTY_CUSTOMER_ASSETS_GENERATION,
  Product.JSON_PROPERTY_ENTITIES,
  Product.JSON_PROPERTY_CREATED_ON_TIME,
  Product.JSON_PROPERTY_UPDATED_ON_TIME,
  Product.JSON_PROPERTY_UPDATED_BY,
  Product.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("product")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class Product {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_ROW_TYPES = "rowTypes";
  private List<RowtypeDataLink> rowTypes;

  public static final String JSON_PROPERTY_CUSTOMER_REF = "customerRef";
  private String customerRef;

  public static final String JSON_PROPERTY_SUPPLIER = "supplier";
  private CompanyDataLink supplier;

  public static final String JSON_PROPERTY_SUPPLIER_REF = "supplierRef";
  private String supplierRef;

  public static final String JSON_PROPERTY_SALE_PRICE = "salePrice";
  private Double salePrice;

  public static final String JSON_PROPERTY_PURCHASE_PRICE = "purchasePrice";
  private Double purchasePrice;

  public static final String JSON_PROPERTY_PURCHASE_LIST_PRICE = "purchaseListPrice";
  private Double purchaseListPrice;

  public static final String JSON_PROPERTY_PURCHASE_DISCOUNT_RATE = "purchaseDiscountRate";
  private Double purchaseDiscountRate;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private DataLink currency;

  /**
   * Indicates if product is active or not. 0 : Active, 10 : Unavailable
   */
  public enum IsArchivedEnum {
    NUMBER_0(0),
    
    NUMBER_10(10);

    private Integer value;

    IsArchivedEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IsArchivedEnum fromValue(Integer value) {
      for (IsArchivedEnum b : IsArchivedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IS_ARCHIVED = "isArchived";
  private IsArchivedEnum isArchived;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private DataLink category;

  /**
   * Indicates if customer assets are automaticly generated when a quote is validated. 0 : No, 1 : Yes only one, 2 : Yes as much as the sold quantity
   */
  public enum CustomerAssetsGenerationEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    CustomerAssetsGenerationEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CustomerAssetsGenerationEnum fromValue(Integer value) {
      for (CustomerAssetsGenerationEnum b : CustomerAssetsGenerationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CUSTOMER_ASSETS_GENERATION = "customerAssetsGeneration";
  private CustomerAssetsGenerationEnum customerAssetsGeneration;

  public static final String JSON_PROPERTY_ENTITIES = "entities";
  private List<EntityDataLink> entities;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Product() { 
  }

  @JsonCreator
  public Product(
    @JsonProperty(JSON_PROPERTY_UPDATED_BY) String updatedBy
  ) {
    this();
    this.updatedBy = updatedBy;
  }

  public Product id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Product name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Mandatory name of the product
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Product label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Complete label of the product
   * @return label
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public Product rowTypes(List<RowtypeDataLink> rowTypes) {
    this.rowTypes = rowTypes;
    return this;
  }

  public Product addRowTypesItem(RowtypeDataLink rowTypesItem) {
    if (this.rowTypes == null) {
      this.rowTypes = new ArrayList<>();
    }
    this.rowTypes.add(rowTypesItem);
    return this;
  }

   /**
   * Link to the row type of the product
   * @return rowTypes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROW_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RowtypeDataLink> getRowTypes() {
    return rowTypes;
  }


  @JsonProperty(JSON_PROPERTY_ROW_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRowTypes(List<RowtypeDataLink> rowTypes) {
    this.rowTypes = rowTypes;
  }


  public Product customerRef(String customerRef) {
    this.customerRef = customerRef;
    return this;
  }

   /**
   * Reference of the product for customers
   * @return customerRef
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomerRef() {
    return customerRef;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerRef(String customerRef) {
    this.customerRef = customerRef;
  }


  public Product supplier(CompanyDataLink supplier) {
    this.supplier = supplier;
    return this;
  }

   /**
   * Get supplier
   * @return supplier
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPLIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyDataLink getSupplier() {
    return supplier;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupplier(CompanyDataLink supplier) {
    this.supplier = supplier;
  }


  public Product supplierRef(String supplierRef) {
    this.supplierRef = supplierRef;
    return this;
  }

   /**
   * Reference of the product in supplier list
   * @return supplierRef
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPLIER_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSupplierRef() {
    return supplierRef;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupplierRef(String supplierRef) {
    this.supplierRef = supplierRef;
  }


  public Product salePrice(Double salePrice) {
    this.salePrice = salePrice;
    return this;
  }

   /**
   * Sales price of the product
   * @return salePrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SALE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getSalePrice() {
    return salePrice;
  }


  @JsonProperty(JSON_PROPERTY_SALE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSalePrice(Double salePrice) {
    this.salePrice = salePrice;
  }


  public Product purchasePrice(Double purchasePrice) {
    this.purchasePrice = purchasePrice;
    return this;
  }

   /**
   * Purchase price of the product
   * @return purchasePrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPurchasePrice() {
    return purchasePrice;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchasePrice(Double purchasePrice) {
    this.purchasePrice = purchasePrice;
  }


  public Product purchaseListPrice(Double purchaseListPrice) {
    this.purchaseListPrice = purchaseListPrice;
    return this;
  }

   /**
   * Initial purchase price of the product in supplier list
   * @return purchaseListPrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_LIST_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPurchaseListPrice() {
    return purchaseListPrice;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_LIST_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseListPrice(Double purchaseListPrice) {
    this.purchaseListPrice = purchaseListPrice;
  }


  public Product purchaseDiscountRate(Double purchaseDiscountRate) {
    this.purchaseDiscountRate = purchaseDiscountRate;
    return this;
  }

   /**
   * Discount rate between supplier list price and purchase price
   * @return purchaseDiscountRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PURCHASE_DISCOUNT_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPurchaseDiscountRate() {
    return purchaseDiscountRate;
  }


  @JsonProperty(JSON_PROPERTY_PURCHASE_DISCOUNT_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurchaseDiscountRate(Double purchaseDiscountRate) {
    this.purchaseDiscountRate = purchaseDiscountRate;
  }


  public Product currency(DataLink currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(DataLink currency) {
    this.currency = currency;
  }


  public Product isArchived(IsArchivedEnum isArchived) {
    this.isArchived = isArchived;
    return this;
  }

   /**
   * Indicates if product is active or not. 0 : Active, 10 : Unavailable
   * @return isArchived
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IsArchivedEnum getIsArchived() {
    return isArchived;
  }


  @JsonProperty(JSON_PROPERTY_IS_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsArchived(IsArchivedEnum isArchived) {
    this.isArchived = isArchived;
  }


  public Product category(DataLink category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(DataLink category) {
    this.category = category;
  }


  public Product customerAssetsGeneration(CustomerAssetsGenerationEnum customerAssetsGeneration) {
    this.customerAssetsGeneration = customerAssetsGeneration;
    return this;
  }

   /**
   * Indicates if customer assets are automaticly generated when a quote is validated. 0 : No, 1 : Yes only one, 2 : Yes as much as the sold quantity
   * @return customerAssetsGeneration
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ASSETS_GENERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerAssetsGenerationEnum getCustomerAssetsGeneration() {
    return customerAssetsGeneration;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ASSETS_GENERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerAssetsGeneration(CustomerAssetsGenerationEnum customerAssetsGeneration) {
    this.customerAssetsGeneration = customerAssetsGeneration;
  }


  public Product entities(List<EntityDataLink> entities) {
    this.entities = entities;
    return this;
  }

  public Product addEntitiesItem(EntityDataLink entitiesItem) {
    if (this.entities == null) {
      this.entities = new ArrayList<>();
    }
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * Multiple link to entities that own this product. For more informations see the /entities resource
   * @return entities
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityDataLink> getEntities() {
    return entities;
  }


  @JsonProperty(JSON_PROPERTY_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntities(List<EntityDataLink> entities) {
    this.entities = entities;
  }


  public Product createdOnTime(java.time.LocalDateTime createdOnTime) {
    this.createdOnTime = createdOnTime;
    return this;
  }

   /**
   * Date &amp; time of creation of the product
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedOnTime(java.time.LocalDateTime createdOnTime) {
    this.createdOnTime = createdOnTime;
  }


  public Product updatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
    return this;
  }

   /**
   * Date &amp; time of the last update of the product
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
  }


   /**
   * Login of the user doing the last update on the product
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }




  public Product extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Product addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the product. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this product object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.id, product.id) &&
        Objects.equals(this.name, product.name) &&
        Objects.equals(this.label, product.label) &&
        Objects.equals(this.rowTypes, product.rowTypes) &&
        Objects.equals(this.customerRef, product.customerRef) &&
        Objects.equals(this.supplier, product.supplier) &&
        Objects.equals(this.supplierRef, product.supplierRef) &&
        Objects.equals(this.salePrice, product.salePrice) &&
        Objects.equals(this.purchasePrice, product.purchasePrice) &&
        Objects.equals(this.purchaseListPrice, product.purchaseListPrice) &&
        Objects.equals(this.purchaseDiscountRate, product.purchaseDiscountRate) &&
        Objects.equals(this.currency, product.currency) &&
        Objects.equals(this.isArchived, product.isArchived) &&
        Objects.equals(this.category, product.category) &&
        Objects.equals(this.customerAssetsGeneration, product.customerAssetsGeneration) &&
        Objects.equals(this.entities, product.entities) &&
        Objects.equals(this.createdOnTime, product.createdOnTime) &&
        Objects.equals(this.updatedOnTime, product.updatedOnTime) &&
        Objects.equals(this.updatedBy, product.updatedBy) &&
        Objects.equals(this.extraData, product.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, label, rowTypes, customerRef, supplier, supplierRef, salePrice, purchasePrice, purchaseListPrice, purchaseDiscountRate, currency, isArchived, category, customerAssetsGeneration, entities, createdOnTime, updatedOnTime, updatedBy, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    rowTypes: ").append(toIndentedString(rowTypes)).append("\n");
    sb.append("    customerRef: ").append(toIndentedString(customerRef)).append("\n");
    sb.append("    supplier: ").append(toIndentedString(supplier)).append("\n");
    sb.append("    supplierRef: ").append(toIndentedString(supplierRef)).append("\n");
    sb.append("    salePrice: ").append(toIndentedString(salePrice)).append("\n");
    sb.append("    purchasePrice: ").append(toIndentedString(purchasePrice)).append("\n");
    sb.append("    purchaseListPrice: ").append(toIndentedString(purchaseListPrice)).append("\n");
    sb.append("    purchaseDiscountRate: ").append(toIndentedString(purchaseDiscountRate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    customerAssetsGeneration: ").append(toIndentedString(customerAssetsGeneration)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

