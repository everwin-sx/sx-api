/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * InvoicingGrid
 */
@JsonPropertyOrder({
  InvoicingGrid.JSON_PROPERTY_ID,
  InvoicingGrid.JSON_PROPERTY_INVOICE,
  InvoicingGrid.JSON_PROPERTY_PAYMENT_REQUEST,
  InvoicingGrid.JSON_PROPERTY_TYPE,
  InvoicingGrid.JSON_PROPERTY_PARTNER,
  InvoicingGrid.JSON_PROPERTY_PARTNER_TYPE,
  InvoicingGrid.JSON_PROPERTY_TOTAL_WITHOUT_VAT,
  InvoicingGrid.JSON_PROPERTY_VAT,
  InvoicingGrid.JSON_PROPERTY_TOTAL_INCLUDING_VAT,
  InvoicingGrid.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("invoicing-grid")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class InvoicingGrid {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_INVOICE = "invoice";
  private CustomerInvoiceDataLink invoice;

  public static final String JSON_PROPERTY_PAYMENT_REQUEST = "paymentRequest";
  private ChorusPaymentRequestDataLink paymentRequest;

  /**
   * Type of the invoicing grid. 0 : Manual, 1 : Automatic
   */
  public enum TypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(Integer value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_PARTNER = "partner";
  private CompanyDataLink partner;

  /**
   * Type of the invoicing grid. 0 : Subcontractor, 1 : Co-contractor
   */
  public enum PartnerTypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    PartnerTypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PartnerTypeEnum fromValue(Integer value) {
      for (PartnerTypeEnum b : PartnerTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PARTNER_TYPE = "partnerType";
  private PartnerTypeEnum partnerType;

  public static final String JSON_PROPERTY_TOTAL_WITHOUT_VAT = "totalWithoutVat";
  private Double totalWithoutVat;

  public static final String JSON_PROPERTY_VAT = "vat";
  private VatTypeDataLink vat;

  public static final String JSON_PROPERTY_TOTAL_INCLUDING_VAT = "totalIncludingVat";
  private Double totalIncludingVat;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public InvoicingGrid() { 
  }

  @JsonCreator
  public InvoicingGrid(
    @JsonProperty(JSON_PROPERTY_TYPE) TypeEnum type, 
    @JsonProperty(JSON_PROPERTY_PARTNER_TYPE) PartnerTypeEnum partnerType
  ) {
    this();
    this.type = type;
    this.partnerType = partnerType;
  }

  public InvoicingGrid id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public InvoicingGrid invoice(CustomerInvoiceDataLink invoice) {
    this.invoice = invoice;
    return this;
  }

   /**
   * Get invoice
   * @return invoice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerInvoiceDataLink getInvoice() {
    return invoice;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoice(CustomerInvoiceDataLink invoice) {
    this.invoice = invoice;
  }


  public InvoicingGrid paymentRequest(ChorusPaymentRequestDataLink paymentRequest) {
    this.paymentRequest = paymentRequest;
    return this;
  }

   /**
   * Get paymentRequest
   * @return paymentRequest
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChorusPaymentRequestDataLink getPaymentRequest() {
    return paymentRequest;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentRequest(ChorusPaymentRequestDataLink paymentRequest) {
    this.paymentRequest = paymentRequest;
  }


   /**
   * Type of the invoicing grid. 0 : Manual, 1 : Automatic
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }




  public InvoicingGrid partner(CompanyDataLink partner) {
    this.partner = partner;
    return this;
  }

   /**
   * Get partner
   * @return partner
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyDataLink getPartner() {
    return partner;
  }


  @JsonProperty(JSON_PROPERTY_PARTNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartner(CompanyDataLink partner) {
    this.partner = partner;
  }


   /**
   * Type of the invoicing grid. 0 : Subcontractor, 1 : Co-contractor
   * @return partnerType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTNER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PartnerTypeEnum getPartnerType() {
    return partnerType;
  }




  public InvoicingGrid totalWithoutVat(Double totalWithoutVat) {
    this.totalWithoutVat = totalWithoutVat;
    return this;
  }

   /**
   * Total of the invoicing grid excluding VAT
   * @return totalWithoutVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalWithoutVat() {
    return totalWithoutVat;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalWithoutVat(Double totalWithoutVat) {
    this.totalWithoutVat = totalWithoutVat;
  }


  public InvoicingGrid vat(VatTypeDataLink vat) {
    this.vat = vat;
    return this;
  }

   /**
   * Get vat
   * @return vat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VatTypeDataLink getVat() {
    return vat;
  }


  @JsonProperty(JSON_PROPERTY_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVat(VatTypeDataLink vat) {
    this.vat = vat;
  }


  public InvoicingGrid totalIncludingVat(Double totalIncludingVat) {
    this.totalIncludingVat = totalIncludingVat;
    return this;
  }

   /**
   * Total of the invoicing grid including VAT
   * @return totalIncludingVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_INCLUDING_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalIncludingVat() {
    return totalIncludingVat;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_INCLUDING_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalIncludingVat(Double totalIncludingVat) {
    this.totalIncludingVat = totalIncludingVat;
  }


  public InvoicingGrid extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public InvoicingGrid addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the invoicing grid. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this invoicing-grid object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoicingGrid invoicingGrid = (InvoicingGrid) o;
    return Objects.equals(this.id, invoicingGrid.id) &&
        Objects.equals(this.invoice, invoicingGrid.invoice) &&
        Objects.equals(this.paymentRequest, invoicingGrid.paymentRequest) &&
        Objects.equals(this.type, invoicingGrid.type) &&
        Objects.equals(this.partner, invoicingGrid.partner) &&
        Objects.equals(this.partnerType, invoicingGrid.partnerType) &&
        Objects.equals(this.totalWithoutVat, invoicingGrid.totalWithoutVat) &&
        Objects.equals(this.vat, invoicingGrid.vat) &&
        Objects.equals(this.totalIncludingVat, invoicingGrid.totalIncludingVat) &&
        Objects.equals(this.extraData, invoicingGrid.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, invoice, paymentRequest, type, partner, partnerType, totalWithoutVat, vat, totalIncludingVat, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoicingGrid {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    invoice: ").append(toIndentedString(invoice)).append("\n");
    sb.append("    paymentRequest: ").append(toIndentedString(paymentRequest)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    partner: ").append(toIndentedString(partner)).append("\n");
    sb.append("    partnerType: ").append(toIndentedString(partnerType)).append("\n");
    sb.append("    totalWithoutVat: ").append(toIndentedString(totalWithoutVat)).append("\n");
    sb.append("    vat: ").append(toIndentedString(vat)).append("\n");
    sb.append("    totalIncludingVat: ").append(toIndentedString(totalIncludingVat)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

