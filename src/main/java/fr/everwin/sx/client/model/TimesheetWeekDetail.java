/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * Details per week if timesheets are managed per month
 */
@JsonPropertyOrder({
  TimesheetWeekDetail.JSON_PROPERTY_DATE,
  TimesheetWeekDetail.JSON_PROPERTY_EXPECTED_HOURS,
  TimesheetWeekDetail.JSON_PROPERTY_EXPECTED_DAYS
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class TimesheetWeekDetail {
  public static final String JSON_PROPERTY_DATE = "date";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime date;

  public static final String JSON_PROPERTY_EXPECTED_HOURS = "expectedHours";
  private Double expectedHours;

  public static final String JSON_PROPERTY_EXPECTED_DAYS = "expectedDays";
  private Double expectedDays;

  public TimesheetWeekDetail() { 
  }

  public TimesheetWeekDetail date(java.time.LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the monday of the week
   * @return date
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.time.LocalDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDate(java.time.LocalDateTime date) {
    this.date = date;
  }


  public TimesheetWeekDetail expectedHours(Double expectedHours) {
    this.expectedHours = expectedHours;
    return this;
  }

   /**
   * Indicates the expected hours for the timesheet
   * @return expectedHours
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getExpectedHours() {
    return expectedHours;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedHours(Double expectedHours) {
    this.expectedHours = expectedHours;
  }


  public TimesheetWeekDetail expectedDays(Double expectedDays) {
    this.expectedDays = expectedDays;
    return this;
  }

   /**
   * Indicates the expected days for the timesheet
   * @return expectedDays
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getExpectedDays() {
    return expectedDays;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedDays(Double expectedDays) {
    this.expectedDays = expectedDays;
  }


  /**
   * Return true if this TimesheetWeekDetail object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimesheetWeekDetail timesheetWeekDetail = (TimesheetWeekDetail) o;
    return Objects.equals(this.date, timesheetWeekDetail.date) &&
        Objects.equals(this.expectedHours, timesheetWeekDetail.expectedHours) &&
        Objects.equals(this.expectedDays, timesheetWeekDetail.expectedDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, expectedHours, expectedDays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimesheetWeekDetail {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    expectedHours: ").append(toIndentedString(expectedHours)).append("\n");
    sb.append("    expectedDays: ").append(toIndentedString(expectedDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

