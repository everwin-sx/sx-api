/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.Access;
import fr.everwin.sx.client.model.EmployeeDataLink;
import fr.everwin.sx.client.model.NoWorkDay;
import fr.everwin.sx.client.model.SpecificData;
import fr.everwin.sx.client.model.TimesheetWeekDetail;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * Timesheet
 */
@JsonPropertyOrder({
  Timesheet.JSON_PROPERTY_ID,
  Timesheet.JSON_PROPERTY_VALIDATION_STEP,
  Timesheet.JSON_PROPERTY_EMPLOYEE,
  Timesheet.JSON_PROPERTY_DATE,
  Timesheet.JSON_PROPERTY_PARTIAL_VALIDATION,
  Timesheet.JSON_PROPERTY_EXTRA_DATA,
  Timesheet.JSON_PROPERTY_PARTIAL_VALID,
  Timesheet.JSON_PROPERTY_EXPECTED_HOURS,
  Timesheet.JSON_PROPERTY_EXPECTED_DAYS,
  Timesheet.JSON_PROPERTY_CAN_PARTIAL_VALIDATION,
  Timesheet.JSON_PROPERTY_LAST_COMMENT,
  Timesheet.JSON_PROPERTY_HAS_VALIDATION_HISTORY,
  Timesheet.JSON_PROPERTY_ACCESS,
  Timesheet.JSON_PROPERTY_WEEK_DETAILS,
  Timesheet.JSON_PROPERTY_NO_WORK_DAYS
})
@JsonTypeName("timesheet")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Timesheet {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_VALIDATION_STEP = "validationStep";
  private String validationStep;

  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private EmployeeDataLink employee;

  public static final String JSON_PROPERTY_DATE = "date";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime date;

  /**
   * Partial validation of the timesheet
   */
  public enum PartialValidationEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    PartialValidationEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PartialValidationEnum fromValue(Integer value) {
      for (PartialValidationEnum b : PartialValidationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PARTIAL_VALIDATION = "partialValidation";
  private PartialValidationEnum partialValidation;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public static final String JSON_PROPERTY_PARTIAL_VALID = "partialValid";
  private Boolean partialValid;

  public static final String JSON_PROPERTY_EXPECTED_HOURS = "expectedHours";
  private Double expectedHours;

  public static final String JSON_PROPERTY_EXPECTED_DAYS = "expectedDays";
  private Double expectedDays;

  public static final String JSON_PROPERTY_CAN_PARTIAL_VALIDATION = "canPartialValidation";
  private Boolean canPartialValidation;

  public static final String JSON_PROPERTY_LAST_COMMENT = "lastComment";
  private String lastComment;

  public static final String JSON_PROPERTY_HAS_VALIDATION_HISTORY = "hasValidationHistory";
  private Boolean hasValidationHistory;

  public static final String JSON_PROPERTY_ACCESS = "access";
  private Access access;

  public static final String JSON_PROPERTY_WEEK_DETAILS = "weekDetails";
  private List<TimesheetWeekDetail> weekDetails;

  public static final String JSON_PROPERTY_NO_WORK_DAYS = "noWorkDays";
  private List<NoWorkDay> noWorkDays;

  public Timesheet() { 
  }

  @JsonCreator
  public Timesheet(
    @JsonProperty(JSON_PROPERTY_LAST_COMMENT) String lastComment, 
    @JsonProperty(JSON_PROPERTY_HAS_VALIDATION_HISTORY) Boolean hasValidationHistory
  ) {
    this();
    this.lastComment = lastComment;
    this.hasValidationHistory = hasValidationHistory;
  }

  public Timesheet id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Timesheet validationStep(String validationStep) {
    this.validationStep = validationStep;
    return this;
  }

   /**
   * Validation step of the element
   * @return validationStep
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getValidationStep() {
    return validationStep;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidationStep(String validationStep) {
    this.validationStep = validationStep;
  }


  public Timesheet employee(EmployeeDataLink employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EmployeeDataLink getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmployee(EmployeeDataLink employee) {
    this.employee = employee;
  }


  public Timesheet date(java.time.LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the timesheet
   * @return date
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.time.LocalDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDate(java.time.LocalDateTime date) {
    this.date = date;
  }


  public Timesheet partialValidation(PartialValidationEnum partialValidation) {
    this.partialValidation = partialValidation;
    return this;
  }

   /**
   * Partial validation of the timesheet
   * @return partialValidation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTIAL_VALIDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PartialValidationEnum getPartialValidation() {
    return partialValidation;
  }


  @JsonProperty(JSON_PROPERTY_PARTIAL_VALIDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartialValidation(PartialValidationEnum partialValidation) {
    this.partialValidation = partialValidation;
  }


  public Timesheet extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Timesheet addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the timesheet. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  public Timesheet partialValid(Boolean partialValid) {
    this.partialValid = partialValid;
    return this;
  }

   /**
   * Indicates whether the timesheet must be validated partially or entirely. true &#x3D; partially. false &#x3D; entirely
   * @return partialValid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTIAL_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPartialValid() {
    return partialValid;
  }


  @JsonProperty(JSON_PROPERTY_PARTIAL_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartialValid(Boolean partialValid) {
    this.partialValid = partialValid;
  }


  public Timesheet expectedHours(Double expectedHours) {
    this.expectedHours = expectedHours;
    return this;
  }

   /**
   * Indicates the expected hours for the timesheet
   * @return expectedHours
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getExpectedHours() {
    return expectedHours;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedHours(Double expectedHours) {
    this.expectedHours = expectedHours;
  }


  public Timesheet expectedDays(Double expectedDays) {
    this.expectedDays = expectedDays;
    return this;
  }

   /**
   * Indicates the expected days for the timesheet
   * @return expectedDays
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getExpectedDays() {
    return expectedDays;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedDays(Double expectedDays) {
    this.expectedDays = expectedDays;
  }


  public Timesheet canPartialValidation(Boolean canPartialValidation) {
    this.canPartialValidation = canPartialValidation;
    return this;
  }

   /**
   * Indicates the partial validation is allowed for the timesheet
   * @return canPartialValidation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAN_PARTIAL_VALIDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanPartialValidation() {
    return canPartialValidation;
  }


  @JsonProperty(JSON_PROPERTY_CAN_PARTIAL_VALIDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanPartialValidation(Boolean canPartialValidation) {
    this.canPartialValidation = canPartialValidation;
  }


   /**
   * Last validation comment
   * @return lastComment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastComment() {
    return lastComment;
  }




   /**
   * True is timesheet has validation history data
   * @return hasValidationHistory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_VALIDATION_HISTORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasValidationHistory() {
    return hasValidationHistory;
  }




  public Timesheet access(Access access) {
    this.access = access;
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Access getAccess() {
    return access;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccess(Access access) {
    this.access = access;
  }


  public Timesheet weekDetails(List<TimesheetWeekDetail> weekDetails) {
    this.weekDetails = weekDetails;
    return this;
  }

  public Timesheet addWeekDetailsItem(TimesheetWeekDetail weekDetailsItem) {
    if (this.weekDetails == null) {
      this.weekDetails = new ArrayList<>();
    }
    this.weekDetails.add(weekDetailsItem);
    return this;
  }

   /**
   * Details per week if timesheets are managed per month
   * @return weekDetails
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEEK_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TimesheetWeekDetail> getWeekDetails() {
    return weekDetails;
  }


  @JsonProperty(JSON_PROPERTY_WEEK_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeekDetails(List<TimesheetWeekDetail> weekDetails) {
    this.weekDetails = weekDetails;
  }


  public Timesheet noWorkDays(List<NoWorkDay> noWorkDays) {
    this.noWorkDays = noWorkDays;
    return this;
  }

  public Timesheet addNoWorkDaysItem(NoWorkDay noWorkDaysItem) {
    if (this.noWorkDays == null) {
      this.noWorkDays = new ArrayList<>();
    }
    this.noWorkDays.add(noWorkDaysItem);
    return this;
  }

   /**
   * Days where the employee does not work because of his work mode or holiday
   * @return noWorkDays
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NO_WORK_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<NoWorkDay> getNoWorkDays() {
    return noWorkDays;
  }


  @JsonProperty(JSON_PROPERTY_NO_WORK_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNoWorkDays(List<NoWorkDay> noWorkDays) {
    this.noWorkDays = noWorkDays;
  }


  /**
   * Return true if this timesheet object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Timesheet timesheet = (Timesheet) o;
    return Objects.equals(this.id, timesheet.id) &&
        Objects.equals(this.validationStep, timesheet.validationStep) &&
        Objects.equals(this.employee, timesheet.employee) &&
        Objects.equals(this.date, timesheet.date) &&
        Objects.equals(this.partialValidation, timesheet.partialValidation) &&
        Objects.equals(this.extraData, timesheet.extraData) &&
        Objects.equals(this.partialValid, timesheet.partialValid) &&
        Objects.equals(this.expectedHours, timesheet.expectedHours) &&
        Objects.equals(this.expectedDays, timesheet.expectedDays) &&
        Objects.equals(this.canPartialValidation, timesheet.canPartialValidation) &&
        Objects.equals(this.lastComment, timesheet.lastComment) &&
        Objects.equals(this.hasValidationHistory, timesheet.hasValidationHistory) &&
        Objects.equals(this.access, timesheet.access) &&
        Objects.equals(this.weekDetails, timesheet.weekDetails) &&
        Objects.equals(this.noWorkDays, timesheet.noWorkDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, validationStep, employee, date, partialValidation, extraData, partialValid, expectedHours, expectedDays, canPartialValidation, lastComment, hasValidationHistory, access, weekDetails, noWorkDays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Timesheet {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    validationStep: ").append(toIndentedString(validationStep)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    partialValidation: ").append(toIndentedString(partialValidation)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("    partialValid: ").append(toIndentedString(partialValid)).append("\n");
    sb.append("    expectedHours: ").append(toIndentedString(expectedHours)).append("\n");
    sb.append("    expectedDays: ").append(toIndentedString(expectedDays)).append("\n");
    sb.append("    canPartialValidation: ").append(toIndentedString(canPartialValidation)).append("\n");
    sb.append("    lastComment: ").append(toIndentedString(lastComment)).append("\n");
    sb.append("    hasValidationHistory: ").append(toIndentedString(hasValidationHistory)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    weekDetails: ").append(toIndentedString(weekDetails)).append("\n");
    sb.append("    noWorkDays: ").append(toIndentedString(noWorkDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

