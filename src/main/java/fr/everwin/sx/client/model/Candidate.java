/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Candidate
 */
@JsonPropertyOrder({
  Candidate.JSON_PROPERTY_ID,
  Candidate.JSON_PROPERTY_CODE,
  Candidate.JSON_PROPERTY_FIRST_NAME,
  Candidate.JSON_PROPERTY_LAST_NAME,
  Candidate.JSON_PROPERTY_TITLE,
  Candidate.JSON_PROPERTY_FAMILY_SITUATION,
  Candidate.JSON_PROPERTY_BIRTH_DATE,
  Candidate.JSON_PROPERTY_NATIONALITY,
  Candidate.JSON_PROPERTY_STATUS,
  Candidate.JSON_PROPERTY_CONNECTION_TYPE,
  Candidate.JSON_PROPERTY_ACTIVITY_CATEGORIES,
  Candidate.JSON_PROPERTY_BUSINESSES,
  Candidate.JSON_PROPERTY_CANDIDACY_ORIGIN,
  Candidate.JSON_PROPERTY_EXPERIENCE_DURATION,
  Candidate.JSON_PROPERTY_AVAILABILITY,
  Candidate.JSON_PROPERTY_DEGREE_LEVEL,
  Candidate.JSON_PROPERTY_MANAGER,
  Candidate.JSON_PROPERTY_RECRUITMENT_MANAGER,
  Candidate.JSON_PROPERTY_CV_TITLE,
  Candidate.JSON_PROPERTY_IS_ARCHIVED,
  Candidate.JSON_PROPERTY_ARCHIVED_DATE,
  Candidate.JSON_PROPERTY_CANDIDACY_COMMENT,
  Candidate.JSON_PROPERTY_PERSONAL_PHONE,
  Candidate.JSON_PROPERTY_PERSONAL_MOBILE,
  Candidate.JSON_PROPERTY_PERSONAL_EMAIL,
  Candidate.JSON_PROPERTY_ADDRESS,
  Candidate.JSON_PROPERTY_ADDRESS2,
  Candidate.JSON_PROPERTY_ADDRESS3,
  Candidate.JSON_PROPERTY_POSTAL_CODE,
  Candidate.JSON_PROPERTY_CITY,
  Candidate.JSON_PROPERTY_COUNTRY,
  Candidate.JSON_PROPERTY_UPDATED_BY,
  Candidate.JSON_PROPERTY_UPDATED_ON_TIME,
  Candidate.JSON_PROPERTY_CREATED_ON_TIME,
  Candidate.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("candidate")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class Candidate {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  /**
   * Title of the candidate.
   */
  public enum TitleEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    TitleEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TitleEnum fromValue(Integer value) {
      for (TitleEnum b : TitleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TITLE = "title";
  private TitleEnum title;

  public static final String JSON_PROPERTY_FAMILY_SITUATION = "familySituation";
  private String familySituation;

  public static final String JSON_PROPERTY_BIRTH_DATE = "birthDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime birthDate;

  public static final String JSON_PROPERTY_NATIONALITY = "nationality";
  private DataLink nationality;

  public static final String JSON_PROPERTY_STATUS = "status";
  private DataLink status;

  public static final String JSON_PROPERTY_CONNECTION_TYPE = "connectionType";
  private DataLink connectionType;

  public static final String JSON_PROPERTY_ACTIVITY_CATEGORIES = "activityCategories";
  private List<DataLink> activityCategories;

  public static final String JSON_PROPERTY_BUSINESSES = "businesses";
  private List<DataLink> businesses;

  public static final String JSON_PROPERTY_CANDIDACY_ORIGIN = "candidacyOrigin";
  private DataLink candidacyOrigin;

  public static final String JSON_PROPERTY_EXPERIENCE_DURATION = "experienceDuration";
  private DataLink experienceDuration;

  public static final String JSON_PROPERTY_AVAILABILITY = "availability";
  private DataLink availability;

  public static final String JSON_PROPERTY_DEGREE_LEVEL = "degreeLevel";
  private DataLink degreeLevel;

  public static final String JSON_PROPERTY_MANAGER = "manager";
  private EmployeeDataLink manager;

  public static final String JSON_PROPERTY_RECRUITMENT_MANAGER = "recruitmentManager";
  private EmployeeDataLink recruitmentManager;

  public static final String JSON_PROPERTY_CV_TITLE = "cvTitle";
  private String cvTitle;

  /**
   * Indicates if the candidate is still searching a job. 0 : No, 50 : Yes
   */
  public enum IsArchivedEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    IsArchivedEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IsArchivedEnum fromValue(Integer value) {
      for (IsArchivedEnum b : IsArchivedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IS_ARCHIVED = "isArchived";
  private IsArchivedEnum isArchived;

  public static final String JSON_PROPERTY_ARCHIVED_DATE = "archivedDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime archivedDate;

  public static final String JSON_PROPERTY_CANDIDACY_COMMENT = "candidacyComment";
  private String candidacyComment;

  public static final String JSON_PROPERTY_PERSONAL_PHONE = "personalPhone";
  private String personalPhone;

  public static final String JSON_PROPERTY_PERSONAL_MOBILE = "personalMobile";
  private String personalMobile;

  public static final String JSON_PROPERTY_PERSONAL_EMAIL = "personalEmail";
  private String personalEmail;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private String address;

  public static final String JSON_PROPERTY_ADDRESS2 = "address2";
  private String address2;

  public static final String JSON_PROPERTY_ADDRESS3 = "address3";
  private String address3;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private CountryDataLink country;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Candidate() { 
  }

  @JsonCreator
  public Candidate(
    @JsonProperty(JSON_PROPERTY_ARCHIVED_DATE) java.time.LocalDateTime archivedDate, 
    @JsonProperty(JSON_PROPERTY_UPDATED_BY) String updatedBy, 
    @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME) java.time.LocalDateTime updatedOnTime, 
    @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME) java.time.LocalDateTime createdOnTime
  ) {
    this();
    this.archivedDate = archivedDate;
    this.updatedBy = updatedBy;
    this.updatedOnTime = updatedOnTime;
    this.createdOnTime = createdOnTime;
  }

  public Candidate id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Candidate code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Unique &amp; mandatory identifier for the candidate
   * @return code
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public Candidate firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Mandatory first name of the candidate
   * @return firstName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public Candidate lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Mandatory last Name of the candidate
   * @return lastName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public Candidate title(TitleEnum title) {
    this.title = title;
    return this;
  }

   /**
   * Title of the candidate.
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TitleEnum getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(TitleEnum title) {
    this.title = title;
  }


  public Candidate familySituation(String familySituation) {
    this.familySituation = familySituation;
    return this;
  }

   /**
   * Family situation of the candidate
   * @return familySituation
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FAMILY_SITUATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFamilySituation() {
    return familySituation;
  }


  @JsonProperty(JSON_PROPERTY_FAMILY_SITUATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFamilySituation(String familySituation) {
    this.familySituation = familySituation;
  }


  public Candidate birthDate(java.time.LocalDateTime birthDate) {
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Date of birth of the candidate
   * @return birthDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTH_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getBirthDate() {
    return birthDate;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthDate(java.time.LocalDateTime birthDate) {
    this.birthDate = birthDate;
  }


  public Candidate nationality(DataLink nationality) {
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getNationality() {
    return nationality;
  }


  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNationality(DataLink nationality) {
    this.nationality = nationality;
  }


  public Candidate status(DataLink status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(DataLink status) {
    this.status = status;
  }


  public Candidate connectionType(DataLink connectionType) {
    this.connectionType = connectionType;
    return this;
  }

   /**
   * Get connectionType
   * @return connectionType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getConnectionType() {
    return connectionType;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionType(DataLink connectionType) {
    this.connectionType = connectionType;
  }


  public Candidate activityCategories(List<DataLink> activityCategories) {
    this.activityCategories = activityCategories;
    return this;
  }

  public Candidate addActivityCategoriesItem(DataLink activityCategoriesItem) {
    if (this.activityCategories == null) {
      this.activityCategories = new ArrayList<>();
    }
    this.activityCategories.add(activityCategoriesItem);
    return this;
  }

   /**
   * Multiple link to activity categories of the candidate. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Candidates-ActivityCategories\&quot;);&#39;&gt;Candidates Activity categories&lt;/a&gt; in System data section
   * @return activityCategories
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVITY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DataLink> getActivityCategories() {
    return activityCategories;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVITY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActivityCategories(List<DataLink> activityCategories) {
    this.activityCategories = activityCategories;
  }


  public Candidate businesses(List<DataLink> businesses) {
    this.businesses = businesses;
    return this;
  }

  public Candidate addBusinessesItem(DataLink businessesItem) {
    if (this.businesses == null) {
      this.businesses = new ArrayList<>();
    }
    this.businesses.add(businessesItem);
    return this;
  }

   /**
   * Multiple link to businesses of the candidate. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Candidates-Businesses\&quot;);&#39;&gt;Candidates Businesses&lt;/a&gt; in System data section
   * @return businesses
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUSINESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DataLink> getBusinesses() {
    return businesses;
  }


  @JsonProperty(JSON_PROPERTY_BUSINESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBusinesses(List<DataLink> businesses) {
    this.businesses = businesses;
  }


  public Candidate candidacyOrigin(DataLink candidacyOrigin) {
    this.candidacyOrigin = candidacyOrigin;
    return this;
  }

   /**
   * Get candidacyOrigin
   * @return candidacyOrigin
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANDIDACY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getCandidacyOrigin() {
    return candidacyOrigin;
  }


  @JsonProperty(JSON_PROPERTY_CANDIDACY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCandidacyOrigin(DataLink candidacyOrigin) {
    this.candidacyOrigin = candidacyOrigin;
  }


  public Candidate experienceDuration(DataLink experienceDuration) {
    this.experienceDuration = experienceDuration;
    return this;
  }

   /**
   * Get experienceDuration
   * @return experienceDuration
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPERIENCE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getExperienceDuration() {
    return experienceDuration;
  }


  @JsonProperty(JSON_PROPERTY_EXPERIENCE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExperienceDuration(DataLink experienceDuration) {
    this.experienceDuration = experienceDuration;
  }


  public Candidate availability(DataLink availability) {
    this.availability = availability;
    return this;
  }

   /**
   * Get availability
   * @return availability
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getAvailability() {
    return availability;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailability(DataLink availability) {
    this.availability = availability;
  }


  public Candidate degreeLevel(DataLink degreeLevel) {
    this.degreeLevel = degreeLevel;
    return this;
  }

   /**
   * Get degreeLevel
   * @return degreeLevel
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEGREE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getDegreeLevel() {
    return degreeLevel;
  }


  @JsonProperty(JSON_PROPERTY_DEGREE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDegreeLevel(DataLink degreeLevel) {
    this.degreeLevel = degreeLevel;
  }


  public Candidate manager(EmployeeDataLink manager) {
    this.manager = manager;
    return this;
  }

   /**
   * Get manager
   * @return manager
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getManager() {
    return manager;
  }


  @JsonProperty(JSON_PROPERTY_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManager(EmployeeDataLink manager) {
    this.manager = manager;
  }


  public Candidate recruitmentManager(EmployeeDataLink recruitmentManager) {
    this.recruitmentManager = recruitmentManager;
    return this;
  }

   /**
   * Get recruitmentManager
   * @return recruitmentManager
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECRUITMENT_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getRecruitmentManager() {
    return recruitmentManager;
  }


  @JsonProperty(JSON_PROPERTY_RECRUITMENT_MANAGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecruitmentManager(EmployeeDataLink recruitmentManager) {
    this.recruitmentManager = recruitmentManager;
  }


  public Candidate cvTitle(String cvTitle) {
    this.cvTitle = cvTitle;
    return this;
  }

   /**
   * CV Title of the candidate
   * @return cvTitle
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CV_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCvTitle() {
    return cvTitle;
  }


  @JsonProperty(JSON_PROPERTY_CV_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCvTitle(String cvTitle) {
    this.cvTitle = cvTitle;
  }


  public Candidate isArchived(IsArchivedEnum isArchived) {
    this.isArchived = isArchived;
    return this;
  }

   /**
   * Indicates if the candidate is still searching a job. 0 : No, 50 : Yes
   * @return isArchived
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IsArchivedEnum getIsArchived() {
    return isArchived;
  }


  @JsonProperty(JSON_PROPERTY_IS_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsArchived(IsArchivedEnum isArchived) {
    this.isArchived = isArchived;
  }


   /**
   * Archived date
   * @return archivedDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getArchivedDate() {
    return archivedDate;
  }




  public Candidate candidacyComment(String candidacyComment) {
    this.candidacyComment = candidacyComment;
    return this;
  }

   /**
   * Comment about the candidate
   * @return candidacyComment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANDIDACY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCandidacyComment() {
    return candidacyComment;
  }


  @JsonProperty(JSON_PROPERTY_CANDIDACY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCandidacyComment(String candidacyComment) {
    this.candidacyComment = candidacyComment;
  }


  public Candidate personalPhone(String personalPhone) {
    this.personalPhone = personalPhone;
    return this;
  }

   /**
   * Personal phone number of the candidate
   * @return personalPhone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERSONAL_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPersonalPhone() {
    return personalPhone;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalPhone(String personalPhone) {
    this.personalPhone = personalPhone;
  }


  public Candidate personalMobile(String personalMobile) {
    this.personalMobile = personalMobile;
    return this;
  }

   /**
   * Personal mobile number of the candidate
   * @return personalMobile
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERSONAL_MOBILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPersonalMobile() {
    return personalMobile;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL_MOBILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalMobile(String personalMobile) {
    this.personalMobile = personalMobile;
  }


  public Candidate personalEmail(String personalEmail) {
    this.personalEmail = personalEmail;
    return this;
  }

   /**
   * Personal email of the candidate
   * @return personalEmail
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERSONAL_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPersonalEmail() {
    return personalEmail;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalEmail(String personalEmail) {
    this.personalEmail = personalEmail;
  }


  public Candidate address(String address) {
    this.address = address;
    return this;
  }

   /**
   * First address line of the candidate
   * @return address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(String address) {
    this.address = address;
  }


  public Candidate address2(String address2) {
    this.address2 = address2;
    return this;
  }

   /**
   * Second address line of the candidate
   * @return address2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress2() {
    return address2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress2(String address2) {
    this.address2 = address2;
  }


  public Candidate address3(String address3) {
    this.address3 = address3;
    return this;
  }

   /**
   * Third adress line of the candidate
   * @return address3
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress3() {
    return address3;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress3(String address3) {
    this.address3 = address3;
  }


  public Candidate postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal code of the candidate
   * @return postalCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public Candidate city(String city) {
    this.city = city;
    return this;
  }

   /**
   * City of the candidate
   * @return city
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public Candidate country(CountryDataLink country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CountryDataLink getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(CountryDataLink country) {
    this.country = country;
  }


   /**
   * Login of the user doing the last update on the candidate
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }




   /**
   * Date &amp; time of the last update of the candidate
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }




   /**
   * Date &amp; time of creation of the candidate
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }




  public Candidate extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Candidate addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the company. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this candidate object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Candidate candidate = (Candidate) o;
    return Objects.equals(this.id, candidate.id) &&
        Objects.equals(this.code, candidate.code) &&
        Objects.equals(this.firstName, candidate.firstName) &&
        Objects.equals(this.lastName, candidate.lastName) &&
        Objects.equals(this.title, candidate.title) &&
        Objects.equals(this.familySituation, candidate.familySituation) &&
        Objects.equals(this.birthDate, candidate.birthDate) &&
        Objects.equals(this.nationality, candidate.nationality) &&
        Objects.equals(this.status, candidate.status) &&
        Objects.equals(this.connectionType, candidate.connectionType) &&
        Objects.equals(this.activityCategories, candidate.activityCategories) &&
        Objects.equals(this.businesses, candidate.businesses) &&
        Objects.equals(this.candidacyOrigin, candidate.candidacyOrigin) &&
        Objects.equals(this.experienceDuration, candidate.experienceDuration) &&
        Objects.equals(this.availability, candidate.availability) &&
        Objects.equals(this.degreeLevel, candidate.degreeLevel) &&
        Objects.equals(this.manager, candidate.manager) &&
        Objects.equals(this.recruitmentManager, candidate.recruitmentManager) &&
        Objects.equals(this.cvTitle, candidate.cvTitle) &&
        Objects.equals(this.isArchived, candidate.isArchived) &&
        Objects.equals(this.archivedDate, candidate.archivedDate) &&
        Objects.equals(this.candidacyComment, candidate.candidacyComment) &&
        Objects.equals(this.personalPhone, candidate.personalPhone) &&
        Objects.equals(this.personalMobile, candidate.personalMobile) &&
        Objects.equals(this.personalEmail, candidate.personalEmail) &&
        Objects.equals(this.address, candidate.address) &&
        Objects.equals(this.address2, candidate.address2) &&
        Objects.equals(this.address3, candidate.address3) &&
        Objects.equals(this.postalCode, candidate.postalCode) &&
        Objects.equals(this.city, candidate.city) &&
        Objects.equals(this.country, candidate.country) &&
        Objects.equals(this.updatedBy, candidate.updatedBy) &&
        Objects.equals(this.updatedOnTime, candidate.updatedOnTime) &&
        Objects.equals(this.createdOnTime, candidate.createdOnTime) &&
        Objects.equals(this.extraData, candidate.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, firstName, lastName, title, familySituation, birthDate, nationality, status, connectionType, activityCategories, businesses, candidacyOrigin, experienceDuration, availability, degreeLevel, manager, recruitmentManager, cvTitle, isArchived, archivedDate, candidacyComment, personalPhone, personalMobile, personalEmail, address, address2, address3, postalCode, city, country, updatedBy, updatedOnTime, createdOnTime, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Candidate {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    familySituation: ").append(toIndentedString(familySituation)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    activityCategories: ").append(toIndentedString(activityCategories)).append("\n");
    sb.append("    businesses: ").append(toIndentedString(businesses)).append("\n");
    sb.append("    candidacyOrigin: ").append(toIndentedString(candidacyOrigin)).append("\n");
    sb.append("    experienceDuration: ").append(toIndentedString(experienceDuration)).append("\n");
    sb.append("    availability: ").append(toIndentedString(availability)).append("\n");
    sb.append("    degreeLevel: ").append(toIndentedString(degreeLevel)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    recruitmentManager: ").append(toIndentedString(recruitmentManager)).append("\n");
    sb.append("    cvTitle: ").append(toIndentedString(cvTitle)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    archivedDate: ").append(toIndentedString(archivedDate)).append("\n");
    sb.append("    candidacyComment: ").append(toIndentedString(candidacyComment)).append("\n");
    sb.append("    personalPhone: ").append(toIndentedString(personalPhone)).append("\n");
    sb.append("    personalMobile: ").append(toIndentedString(personalMobile)).append("\n");
    sb.append("    personalEmail: ").append(toIndentedString(personalEmail)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    address3: ").append(toIndentedString(address3)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

