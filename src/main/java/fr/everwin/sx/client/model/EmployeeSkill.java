/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.EmployeeDataLink;
import fr.everwin.sx.client.model.SkillDataLink;
import fr.everwin.sx.client.model.SkillLevelDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * EmployeeSkill
 */
@JsonPropertyOrder({
  EmployeeSkill.JSON_PROPERTY_ID,
  EmployeeSkill.JSON_PROPERTY_EMPLOYEE,
  EmployeeSkill.JSON_PROPERTY_SKILL,
  EmployeeSkill.JSON_PROPERTY_LEVEL,
  EmployeeSkill.JSON_PROPERTY_COMMENT,
  EmployeeSkill.JSON_PROPERTY_START_DATE,
  EmployeeSkill.JSON_PROPERTY_END_DATE,
  EmployeeSkill.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("employeeSkill")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class EmployeeSkill {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private EmployeeDataLink employee;

  public static final String JSON_PROPERTY_SKILL = "skill";
  private SkillDataLink skill;

  public static final String JSON_PROPERTY_LEVEL = "level";
  private SkillLevelDataLink level;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime startDate;

  public static final String JSON_PROPERTY_END_DATE = "endDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime endDate;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public EmployeeSkill() { 
  }

  public EmployeeSkill id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public EmployeeSkill employee(EmployeeDataLink employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EmployeeDataLink getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmployee(EmployeeDataLink employee) {
    this.employee = employee;
  }


  public EmployeeSkill skill(SkillDataLink skill) {
    this.skill = skill;
    return this;
  }

   /**
   * Get skill
   * @return skill
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SKILL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SkillDataLink getSkill() {
    return skill;
  }


  @JsonProperty(JSON_PROPERTY_SKILL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSkill(SkillDataLink skill) {
    this.skill = skill;
  }


  public EmployeeSkill level(SkillLevelDataLink level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SkillLevelDataLink getLevel() {
    return level;
  }


  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevel(SkillLevelDataLink level) {
    this.level = level;
  }


  public EmployeeSkill comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment about the employee skill
   * @return comment
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public EmployeeSkill startDate(java.time.LocalDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Start of validity of the employee skill
   * @return startDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(java.time.LocalDateTime startDate) {
    this.startDate = startDate;
  }


  public EmployeeSkill endDate(java.time.LocalDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * End of validity of the employee skill
   * @return endDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getEndDate() {
    return endDate;
  }


  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndDate(java.time.LocalDateTime endDate) {
    this.endDate = endDate;
  }


  public EmployeeSkill extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public EmployeeSkill addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the company. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this employeeSkill object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeSkill employeeSkill = (EmployeeSkill) o;
    return Objects.equals(this.id, employeeSkill.id) &&
        Objects.equals(this.employee, employeeSkill.employee) &&
        Objects.equals(this.skill, employeeSkill.skill) &&
        Objects.equals(this.level, employeeSkill.level) &&
        Objects.equals(this.comment, employeeSkill.comment) &&
        Objects.equals(this.startDate, employeeSkill.startDate) &&
        Objects.equals(this.endDate, employeeSkill.endDate) &&
        Objects.equals(this.extraData, employeeSkill.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, employee, skill, level, comment, startDate, endDate, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeSkill {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    skill: ").append(toIndentedString(skill)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

