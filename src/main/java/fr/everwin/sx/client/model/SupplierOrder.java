/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * SupplierOrder
 */
@JsonPropertyOrder({
  SupplierOrder.JSON_PROPERTY_ID,
  SupplierOrder.JSON_PROPERTY_VALIDATION_STEP,
  SupplierOrder.JSON_PROPERTY_CODE,
  SupplierOrder.JSON_PROPERTY_SUPPLIER,
  SupplierOrder.JSON_PROPERTY_CONTACT,
  SupplierOrder.JSON_PROPERTY_ENTITY,
  SupplierOrder.JSON_PROPERTY_FINANCIAL_ENTITY,
  SupplierOrder.JSON_PROPERTY_PROJECT,
  SupplierOrder.JSON_PROPERTY_SUB_CONTRACTING_PROJECT,
  SupplierOrder.JSON_PROPERTY_ISSUER,
  SupplierOrder.JSON_PROPERTY_SUPPLIER_ACCOUNT,
  SupplierOrder.JSON_PROPERTY_CREATION_DATE,
  SupplierOrder.JSON_PROPERTY_DELIVERY_DATE,
  SupplierOrder.JSON_PROPERTY_SUPPLIER_REFERENCE,
  SupplierOrder.JSON_PROPERTY_ESTIMATE_REFERENCE,
  SupplierOrder.JSON_PROPERTY_CURRENCY,
  SupplierOrder.JSON_PROPERTY_TOTAL_WITHOUT_VAT,
  SupplierOrder.JSON_PROPERTY_DELIVERY_ADDRESS,
  SupplierOrder.JSON_PROPERTY_DELIVERY_STATUS,
  SupplierOrder.JSON_PROPERTY_STATE,
  SupplierOrder.JSON_PROPERTY_COMMENT,
  SupplierOrder.JSON_PROPERTY_UPDATED_ON_TIME,
  SupplierOrder.JSON_PROPERTY_CREATED_ON_TIME,
  SupplierOrder.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("supplierOrder")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class SupplierOrder {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_VALIDATION_STEP = "validationStep";
  private String validationStep;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_SUPPLIER = "supplier";
  private CompanyDataLink supplier;

  public static final String JSON_PROPERTY_CONTACT = "contact";
  private ContactResponsibilityDataLink contact;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private EntityDataLink entity;

  public static final String JSON_PROPERTY_FINANCIAL_ENTITY = "financialEntity";
  private EntityDataLink financialEntity;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private ProjectDataLink project;

  public static final String JSON_PROPERTY_SUB_CONTRACTING_PROJECT = "subContractingProject";
  private SubContractingProjectDataLink subContractingProject;

  public static final String JSON_PROPERTY_ISSUER = "issuer";
  private EmployeeDataLink issuer;

  public static final String JSON_PROPERTY_SUPPLIER_ACCOUNT = "supplierAccount";
  private CompanyAccountDataLink supplierAccount;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime creationDate;

  public static final String JSON_PROPERTY_DELIVERY_DATE = "deliveryDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime deliveryDate;

  public static final String JSON_PROPERTY_SUPPLIER_REFERENCE = "supplierReference";
  private String supplierReference;

  public static final String JSON_PROPERTY_ESTIMATE_REFERENCE = "estimateReference";
  private String estimateReference;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_TOTAL_WITHOUT_VAT = "totalWithoutVat";
  private Double totalWithoutVat;

  public static final String JSON_PROPERTY_DELIVERY_ADDRESS = "deliveryAddress";
  private String deliveryAddress;

  /**
   * Delivery status  of the supplier order. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;SupplierOrders-Deliverystatus\&quot;);&#39;&gt;Delivery status&lt;/a&gt; in System data section
   */
  public enum DeliveryStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    DeliveryStatusEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DeliveryStatusEnum fromValue(Integer value) {
      for (DeliveryStatusEnum b : DeliveryStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DELIVERY_STATUS = "deliveryStatus";
  private DeliveryStatusEnum deliveryStatus;

  /**
   * State of the supplier order. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;SupplierOrders-State\&quot;);&#39;&gt;State&lt;/a&gt; in System data section
   */
  public enum StateEnum {
    NUMBER_0(0),
    
    NUMBER_5(5),
    
    NUMBER_10(10);

    private Integer value;

    StateEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(Integer value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public SupplierOrder() { 
  }

  @JsonCreator
  public SupplierOrder(
    @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT) Double totalWithoutVat, 
    @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME) java.time.LocalDateTime updatedOnTime, 
    @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME) java.time.LocalDateTime createdOnTime
  ) {
    this();
    this.totalWithoutVat = totalWithoutVat;
    this.updatedOnTime = updatedOnTime;
    this.createdOnTime = createdOnTime;
  }

  public SupplierOrder id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public SupplierOrder validationStep(String validationStep) {
    this.validationStep = validationStep;
    return this;
  }

   /**
   * Validation step of the element
   * @return validationStep
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getValidationStep() {
    return validationStep;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidationStep(String validationStep) {
    this.validationStep = validationStep;
  }


  public SupplierOrder code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the supplier order
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public SupplierOrder supplier(CompanyDataLink supplier) {
    this.supplier = supplier;
    return this;
  }

   /**
   * Get supplier
   * @return supplier
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUPPLIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CompanyDataLink getSupplier() {
    return supplier;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSupplier(CompanyDataLink supplier) {
    this.supplier = supplier;
  }


  public SupplierOrder contact(ContactResponsibilityDataLink contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContactResponsibilityDataLink getContact() {
    return contact;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContact(ContactResponsibilityDataLink contact) {
    this.contact = contact;
  }


  public SupplierOrder entity(EntityDataLink entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EntityDataLink getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntity(EntityDataLink entity) {
    this.entity = entity;
  }


  public SupplierOrder financialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
    return this;
  }

   /**
   * Get financialEntity
   * @return financialEntity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getFinancialEntity() {
    return financialEntity;
  }


  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinancialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
  }


  public SupplierOrder project(ProjectDataLink project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectDataLink getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProject(ProjectDataLink project) {
    this.project = project;
  }


  public SupplierOrder subContractingProject(SubContractingProjectDataLink subContractingProject) {
    this.subContractingProject = subContractingProject;
    return this;
  }

   /**
   * Get subContractingProject
   * @return subContractingProject
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_CONTRACTING_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SubContractingProjectDataLink getSubContractingProject() {
    return subContractingProject;
  }


  @JsonProperty(JSON_PROPERTY_SUB_CONTRACTING_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubContractingProject(SubContractingProjectDataLink subContractingProject) {
    this.subContractingProject = subContractingProject;
  }


  public SupplierOrder issuer(EmployeeDataLink issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Get issuer
   * @return issuer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getIssuer() {
    return issuer;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuer(EmployeeDataLink issuer) {
    this.issuer = issuer;
  }


  public SupplierOrder supplierAccount(CompanyAccountDataLink supplierAccount) {
    this.supplierAccount = supplierAccount;
    return this;
  }

   /**
   * Get supplierAccount
   * @return supplierAccount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPLIER_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyAccountDataLink getSupplierAccount() {
    return supplierAccount;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupplierAccount(CompanyAccountDataLink supplierAccount) {
    this.supplierAccount = supplierAccount;
  }


  public SupplierOrder creationDate(java.time.LocalDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Creation date of the supplier order
   * @return creationDate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.time.LocalDateTime getCreationDate() {
    return creationDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreationDate(java.time.LocalDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public SupplierOrder deliveryDate(java.time.LocalDateTime deliveryDate) {
    this.deliveryDate = deliveryDate;
    return this;
  }

   /**
   * Delivery date of the supplier order
   * @return deliveryDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getDeliveryDate() {
    return deliveryDate;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryDate(java.time.LocalDateTime deliveryDate) {
    this.deliveryDate = deliveryDate;
  }


  public SupplierOrder supplierReference(String supplierReference) {
    this.supplierReference = supplierReference;
    return this;
  }

   /**
   * Supplier reference of the supplier order
   * @return supplierReference
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPLIER_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSupplierReference() {
    return supplierReference;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupplierReference(String supplierReference) {
    this.supplierReference = supplierReference;
  }


  public SupplierOrder estimateReference(String estimateReference) {
    this.estimateReference = estimateReference;
    return this;
  }

   /**
   * Estimate reference of the supplier order
   * @return estimateReference
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESTIMATE_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEstimateReference() {
    return estimateReference;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATE_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimateReference(String estimateReference) {
    this.estimateReference = estimateReference;
  }


  public SupplierOrder currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency of the supplier order (ISO code)
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


   /**
   * Total without vat of the supplier order
   * @return totalWithoutVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalWithoutVat() {
    return totalWithoutVat;
  }




  public SupplierOrder deliveryAddress(String deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
    return this;
  }

   /**
   * Delivery address of the supplier order
   * @return deliveryAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryAddress() {
    return deliveryAddress;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryAddress(String deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
  }


  public SupplierOrder deliveryStatus(DeliveryStatusEnum deliveryStatus) {
    this.deliveryStatus = deliveryStatus;
    return this;
  }

   /**
   * Delivery status  of the supplier order. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;SupplierOrders-Deliverystatus\&quot;);&#39;&gt;Delivery status&lt;/a&gt; in System data section
   * @return deliveryStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeliveryStatusEnum getDeliveryStatus() {
    return deliveryStatus;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryStatus(DeliveryStatusEnum deliveryStatus) {
    this.deliveryStatus = deliveryStatus;
  }


  public SupplierOrder state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * State of the supplier order. For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;SupplierOrders-State\&quot;);&#39;&gt;State&lt;/a&gt; in System data section
   * @return state
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(StateEnum state) {
    this.state = state;
  }


  public SupplierOrder comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment of the supplier order
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


   /**
   * Date &amp; time of the last update of the contact
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }




   /**
   * Date &amp; time of creation of the contact
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }




  public SupplierOrder extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public SupplierOrder addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the company. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this supplierOrder object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupplierOrder supplierOrder = (SupplierOrder) o;
    return Objects.equals(this.id, supplierOrder.id) &&
        Objects.equals(this.validationStep, supplierOrder.validationStep) &&
        Objects.equals(this.code, supplierOrder.code) &&
        Objects.equals(this.supplier, supplierOrder.supplier) &&
        Objects.equals(this.contact, supplierOrder.contact) &&
        Objects.equals(this.entity, supplierOrder.entity) &&
        Objects.equals(this.financialEntity, supplierOrder.financialEntity) &&
        Objects.equals(this.project, supplierOrder.project) &&
        Objects.equals(this.subContractingProject, supplierOrder.subContractingProject) &&
        Objects.equals(this.issuer, supplierOrder.issuer) &&
        Objects.equals(this.supplierAccount, supplierOrder.supplierAccount) &&
        Objects.equals(this.creationDate, supplierOrder.creationDate) &&
        Objects.equals(this.deliveryDate, supplierOrder.deliveryDate) &&
        Objects.equals(this.supplierReference, supplierOrder.supplierReference) &&
        Objects.equals(this.estimateReference, supplierOrder.estimateReference) &&
        Objects.equals(this.currency, supplierOrder.currency) &&
        Objects.equals(this.totalWithoutVat, supplierOrder.totalWithoutVat) &&
        Objects.equals(this.deliveryAddress, supplierOrder.deliveryAddress) &&
        Objects.equals(this.deliveryStatus, supplierOrder.deliveryStatus) &&
        Objects.equals(this.state, supplierOrder.state) &&
        Objects.equals(this.comment, supplierOrder.comment) &&
        Objects.equals(this.updatedOnTime, supplierOrder.updatedOnTime) &&
        Objects.equals(this.createdOnTime, supplierOrder.createdOnTime) &&
        Objects.equals(this.extraData, supplierOrder.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, validationStep, code, supplier, contact, entity, financialEntity, project, subContractingProject, issuer, supplierAccount, creationDate, deliveryDate, supplierReference, estimateReference, currency, totalWithoutVat, deliveryAddress, deliveryStatus, state, comment, updatedOnTime, createdOnTime, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupplierOrder {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    validationStep: ").append(toIndentedString(validationStep)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    supplier: ").append(toIndentedString(supplier)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    financialEntity: ").append(toIndentedString(financialEntity)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    subContractingProject: ").append(toIndentedString(subContractingProject)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    supplierAccount: ").append(toIndentedString(supplierAccount)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    deliveryDate: ").append(toIndentedString(deliveryDate)).append("\n");
    sb.append("    supplierReference: ").append(toIndentedString(supplierReference)).append("\n");
    sb.append("    estimateReference: ").append(toIndentedString(estimateReference)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    totalWithoutVat: ").append(toIndentedString(totalWithoutVat)).append("\n");
    sb.append("    deliveryAddress: ").append(toIndentedString(deliveryAddress)).append("\n");
    sb.append("    deliveryStatus: ").append(toIndentedString(deliveryStatus)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

