/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * Amount of the supplier settlement line
 */
@JsonPropertyOrder({
  SupplierSettlementLineMultiCurrency.JSON_PROPERTY_MANAGEMENT,
  SupplierSettlementLineMultiCurrency.JSON_PROPERTY_ACCOUNT,
  SupplierSettlementLineMultiCurrency.JSON_PROPERTY_REPORTING,
  SupplierSettlementLineMultiCurrency.JSON_PROPERTY_TRANSACTION
})
@JsonTypeName("supplier-settlement-line-multi-currency")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class SupplierSettlementLineMultiCurrency {
  public static final String JSON_PROPERTY_MANAGEMENT = "management";
  private Double management;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private Double account;

  public static final String JSON_PROPERTY_REPORTING = "reporting";
  private Double reporting;

  public static final String JSON_PROPERTY_TRANSACTION = "transaction";
  private Double transaction;

  public SupplierSettlementLineMultiCurrency() { 
  }

  public SupplierSettlementLineMultiCurrency management(Double management) {
    this.management = management;
    return this;
  }

   /**
   * Value in management currency
   * @return management
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getManagement() {
    return management;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagement(Double management) {
    this.management = management;
  }


  public SupplierSettlementLineMultiCurrency account(Double account) {
    this.account = account;
    return this;
  }

   /**
   * Value in account currency
   * @return account
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(Double account) {
    this.account = account;
  }


  public SupplierSettlementLineMultiCurrency reporting(Double reporting) {
    this.reporting = reporting;
    return this;
  }

   /**
   * Value in reporting currency
   * @return reporting
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getReporting() {
    return reporting;
  }


  @JsonProperty(JSON_PROPERTY_REPORTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReporting(Double reporting) {
    this.reporting = reporting;
  }


  public SupplierSettlementLineMultiCurrency transaction(Double transaction) {
    this.transaction = transaction;
    return this;
  }

   /**
   * Value in transaction currency
   * @return transaction
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTransaction() {
    return transaction;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransaction(Double transaction) {
    this.transaction = transaction;
  }


  /**
   * Return true if this supplier-settlement-line-multi-currency object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupplierSettlementLineMultiCurrency supplierSettlementLineMultiCurrency = (SupplierSettlementLineMultiCurrency) o;
    return Objects.equals(this.management, supplierSettlementLineMultiCurrency.management) &&
        Objects.equals(this.account, supplierSettlementLineMultiCurrency.account) &&
        Objects.equals(this.reporting, supplierSettlementLineMultiCurrency.reporting) &&
        Objects.equals(this.transaction, supplierSettlementLineMultiCurrency.transaction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(management, account, reporting, transaction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupplierSettlementLineMultiCurrency {\n");
    sb.append("    management: ").append(toIndentedString(management)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    reporting: ").append(toIndentedString(reporting)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

