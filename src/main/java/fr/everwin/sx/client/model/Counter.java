/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.EmployeeDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * Counter
 */
@JsonPropertyOrder({
  Counter.JSON_PROPERTY_ID,
  Counter.JSON_PROPERTY_EMPLOYEE,
  Counter.JSON_PROPERTY_LABEL,
  Counter.JSON_PROPERTY_BALANCE_DATE,
  Counter.JSON_PROPERTY_BALANCE,
  Counter.JSON_PROPERTY_VALIDATED_LEAVE_REQUESTS_IN_DAY,
  Counter.JSON_PROPERTY_UNVALIDATED_LEAVE_REQUESTS_IN_DAY,
  Counter.JSON_PROPERTY_CURRENT_LEAVE_ENTITLEMENT,
  Counter.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("counter")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Counter {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private EmployeeDataLink employee;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_BALANCE_DATE = "balanceDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime balanceDate;

  public static final String JSON_PROPERTY_BALANCE = "balance";
  private Double balance;

  public static final String JSON_PROPERTY_VALIDATED_LEAVE_REQUESTS_IN_DAY = "validatedLeaveRequestsInDay";
  private Double validatedLeaveRequestsInDay;

  public static final String JSON_PROPERTY_UNVALIDATED_LEAVE_REQUESTS_IN_DAY = "unvalidatedLeaveRequestsInDay";
  private Double unvalidatedLeaveRequestsInDay;

  public static final String JSON_PROPERTY_CURRENT_LEAVE_ENTITLEMENT = "currentLeaveEntitlement";
  private Double currentLeaveEntitlement;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Counter() { 
  }

  public Counter id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Counter employee(EmployeeDataLink employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmployee(EmployeeDataLink employee) {
    this.employee = employee;
  }


  public Counter label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label of this leave counter
   * @return label
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public Counter balanceDate(java.time.LocalDateTime balanceDate) {
    this.balanceDate = balanceDate;
    return this;
  }

   /**
   * Date of the last initialisation of this leave counter
   * @return balanceDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getBalanceDate() {
    return balanceDate;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalanceDate(java.time.LocalDateTime balanceDate) {
    this.balanceDate = balanceDate;
  }


  public Counter balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Current balance of this leave counter
   * @return balance
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getBalance() {
    return balance;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalance(Double balance) {
    this.balance = balance;
  }


  public Counter validatedLeaveRequestsInDay(Double validatedLeaveRequestsInDay) {
    this.validatedLeaveRequestsInDay = validatedLeaveRequestsInDay;
    return this;
  }

   /**
   * Number of days in validated leave requests linked to this leave counter
   * @return validatedLeaveRequestsInDay
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALIDATED_LEAVE_REQUESTS_IN_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getValidatedLeaveRequestsInDay() {
    return validatedLeaveRequestsInDay;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATED_LEAVE_REQUESTS_IN_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidatedLeaveRequestsInDay(Double validatedLeaveRequestsInDay) {
    this.validatedLeaveRequestsInDay = validatedLeaveRequestsInDay;
  }


  public Counter unvalidatedLeaveRequestsInDay(Double unvalidatedLeaveRequestsInDay) {
    this.unvalidatedLeaveRequestsInDay = unvalidatedLeaveRequestsInDay;
    return this;
  }

   /**
   * Number of days in unvalidated leave requests linked to this leave counter
   * @return unvalidatedLeaveRequestsInDay
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNVALIDATED_LEAVE_REQUESTS_IN_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getUnvalidatedLeaveRequestsInDay() {
    return unvalidatedLeaveRequestsInDay;
  }


  @JsonProperty(JSON_PROPERTY_UNVALIDATED_LEAVE_REQUESTS_IN_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnvalidatedLeaveRequestsInDay(Double unvalidatedLeaveRequestsInDay) {
    this.unvalidatedLeaveRequestsInDay = unvalidatedLeaveRequestsInDay;
  }


  public Counter currentLeaveEntitlement(Double currentLeaveEntitlement) {
    this.currentLeaveEntitlement = currentLeaveEntitlement;
    return this;
  }

   /**
   * Number of days acquired for this leave counter
   * @return currentLeaveEntitlement
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_LEAVE_ENTITLEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCurrentLeaveEntitlement() {
    return currentLeaveEntitlement;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_LEAVE_ENTITLEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentLeaveEntitlement(Double currentLeaveEntitlement) {
    this.currentLeaveEntitlement = currentLeaveEntitlement;
  }


  public Counter extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Counter addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the leave counter. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this counter object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Counter counter = (Counter) o;
    return Objects.equals(this.id, counter.id) &&
        Objects.equals(this.employee, counter.employee) &&
        Objects.equals(this.label, counter.label) &&
        Objects.equals(this.balanceDate, counter.balanceDate) &&
        Objects.equals(this.balance, counter.balance) &&
        Objects.equals(this.validatedLeaveRequestsInDay, counter.validatedLeaveRequestsInDay) &&
        Objects.equals(this.unvalidatedLeaveRequestsInDay, counter.unvalidatedLeaveRequestsInDay) &&
        Objects.equals(this.currentLeaveEntitlement, counter.currentLeaveEntitlement) &&
        Objects.equals(this.extraData, counter.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, employee, label, balanceDate, balance, validatedLeaveRequestsInDay, unvalidatedLeaveRequestsInDay, currentLeaveEntitlement, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Counter {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    balanceDate: ").append(toIndentedString(balanceDate)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    validatedLeaveRequestsInDay: ").append(toIndentedString(validatedLeaveRequestsInDay)).append("\n");
    sb.append("    unvalidatedLeaveRequestsInDay: ").append(toIndentedString(unvalidatedLeaveRequestsInDay)).append("\n");
    sb.append("    currentLeaveEntitlement: ").append(toIndentedString(currentLeaveEntitlement)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

