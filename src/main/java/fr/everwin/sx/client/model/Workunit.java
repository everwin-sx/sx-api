/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.EmployeeDataLink;
import fr.everwin.sx.client.model.ProjectDataLink;
import fr.everwin.sx.client.model.ProjectLineDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * Workunit
 */
@JsonPropertyOrder({
  Workunit.JSON_PROPERTY_ID,
  Workunit.JSON_PROPERTY_VALIDATION_STEP,
  Workunit.JSON_PROPERTY_CODE,
  Workunit.JSON_PROPERTY_DATE,
  Workunit.JSON_PROPERTY_USER_DATE,
  Workunit.JSON_PROPERTY_EMPLOYEE,
  Workunit.JSON_PROPERTY_PROJECT,
  Workunit.JSON_PROPERTY_PROJECT_LINE,
  Workunit.JSON_PROPERTY_CONSUMED_QUANTITY,
  Workunit.JSON_PROPERTY_RE_INVOICEABLE_QUANTITY,
  Workunit.JSON_PROPERTY_RE_INVOICEABLE_AMOUNT,
  Workunit.JSON_PROPERTY_RE_INVOICEABLE_TOTAL,
  Workunit.JSON_PROPERTY_CURRENCY,
  Workunit.JSON_PROPERTY_DO_NOT_EVALUATE,
  Workunit.JSON_PROPERTY_CUSTOMER_COMMENT,
  Workunit.JSON_PROPERTY_INTERNAL_COMMENT,
  Workunit.JSON_PROPERTY_UPDATED_BY,
  Workunit.JSON_PROPERTY_UPDATED_ON_TIME,
  Workunit.JSON_PROPERTY_CREATED_ON_TIME,
  Workunit.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("workunit")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Workunit {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_VALIDATION_STEP = "validationStep";
  private String validationStep;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_DATE = "date";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime date;

  public static final String JSON_PROPERTY_USER_DATE = "userDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime userDate;

  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private EmployeeDataLink employee;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private ProjectDataLink project;

  public static final String JSON_PROPERTY_PROJECT_LINE = "projectLine";
  private ProjectLineDataLink projectLine;

  public static final String JSON_PROPERTY_CONSUMED_QUANTITY = "consumedQuantity";
  private Double consumedQuantity;

  public static final String JSON_PROPERTY_RE_INVOICEABLE_QUANTITY = "reInvoiceableQuantity";
  private Double reInvoiceableQuantity;

  public static final String JSON_PROPERTY_RE_INVOICEABLE_AMOUNT = "reInvoiceableAmount";
  private Double reInvoiceableAmount;

  public static final String JSON_PROPERTY_RE_INVOICEABLE_TOTAL = "reInvoiceableTotal";
  private Double reInvoiceableTotal;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_DO_NOT_EVALUATE = "doNotEvaluate";
  private Integer doNotEvaluate;

  public static final String JSON_PROPERTY_CUSTOMER_COMMENT = "customerComment";
  private String customerComment;

  public static final String JSON_PROPERTY_INTERNAL_COMMENT = "internalComment";
  private String internalComment;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public Workunit() { 
  }

  @JsonCreator
  public Workunit(
    @JsonProperty(JSON_PROPERTY_RE_INVOICEABLE_AMOUNT) Double reInvoiceableAmount, 
    @JsonProperty(JSON_PROPERTY_UPDATED_BY) String updatedBy, 
    @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME) java.time.LocalDateTime updatedOnTime, 
    @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME) java.time.LocalDateTime createdOnTime
  ) {
    this();
    this.reInvoiceableAmount = reInvoiceableAmount;
    this.updatedBy = updatedBy;
    this.updatedOnTime = updatedOnTime;
    this.createdOnTime = createdOnTime;
  }

  public Workunit id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Workunit validationStep(String validationStep) {
    this.validationStep = validationStep;
    return this;
  }

   /**
   * Validation step of the element
   * @return validationStep
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getValidationStep() {
    return validationStep;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidationStep(String validationStep) {
    this.validationStep = validationStep;
  }


  public Workunit code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the work unit
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Workunit date(java.time.LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the work unit
   * @return date
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(java.time.LocalDateTime date) {
    this.date = date;
  }


  public Workunit userDate(java.time.LocalDateTime userDate) {
    this.userDate = userDate;
    return this;
  }

   /**
   * User date of the work unit
   * @return userDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUserDate() {
    return userDate;
  }


  @JsonProperty(JSON_PROPERTY_USER_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserDate(java.time.LocalDateTime userDate) {
    this.userDate = userDate;
  }


  public Workunit employee(EmployeeDataLink employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmployee(EmployeeDataLink employee) {
    this.employee = employee;
  }


  public Workunit project(ProjectDataLink project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectDataLink getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProject(ProjectDataLink project) {
    this.project = project;
  }


  public Workunit projectLine(ProjectLineDataLink projectLine) {
    this.projectLine = projectLine;
    return this;
  }

   /**
   * Get projectLine
   * @return projectLine
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineDataLink getProjectLine() {
    return projectLine;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectLine(ProjectLineDataLink projectLine) {
    this.projectLine = projectLine;
  }


  public Workunit consumedQuantity(Double consumedQuantity) {
    this.consumedQuantity = consumedQuantity;
    return this;
  }

   /**
   * Consumed quantity
   * @return consumedQuantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSUMED_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getConsumedQuantity() {
    return consumedQuantity;
  }


  @JsonProperty(JSON_PROPERTY_CONSUMED_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsumedQuantity(Double consumedQuantity) {
    this.consumedQuantity = consumedQuantity;
  }


  public Workunit reInvoiceableQuantity(Double reInvoiceableQuantity) {
    this.reInvoiceableQuantity = reInvoiceableQuantity;
    return this;
  }

   /**
   * Re-invoiceable quantity
   * @return reInvoiceableQuantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RE_INVOICEABLE_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getReInvoiceableQuantity() {
    return reInvoiceableQuantity;
  }


  @JsonProperty(JSON_PROPERTY_RE_INVOICEABLE_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReInvoiceableQuantity(Double reInvoiceableQuantity) {
    this.reInvoiceableQuantity = reInvoiceableQuantity;
  }


   /**
   * Re-invoiceable amount
   * @return reInvoiceableAmount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RE_INVOICEABLE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getReInvoiceableAmount() {
    return reInvoiceableAmount;
  }




  public Workunit reInvoiceableTotal(Double reInvoiceableTotal) {
    this.reInvoiceableTotal = reInvoiceableTotal;
    return this;
  }

   /**
   * Re-invoiceable total
   * @return reInvoiceableTotal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RE_INVOICEABLE_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getReInvoiceableTotal() {
    return reInvoiceableTotal;
  }


  @JsonProperty(JSON_PROPERTY_RE_INVOICEABLE_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReInvoiceableTotal(Double reInvoiceableTotal) {
    this.reInvoiceableTotal = reInvoiceableTotal;
  }


  public Workunit currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency (ISO code)
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public Workunit doNotEvaluate(Integer doNotEvaluate) {
    this.doNotEvaluate = doNotEvaluate;
    return this;
  }

   /**
   * Indicator for production evaluation. 0 &#x3D; Evaluate, 1 &#x3D; Do not evaluate
   * @return doNotEvaluate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DO_NOT_EVALUATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDoNotEvaluate() {
    return doNotEvaluate;
  }


  @JsonProperty(JSON_PROPERTY_DO_NOT_EVALUATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoNotEvaluate(Integer doNotEvaluate) {
    this.doNotEvaluate = doNotEvaluate;
  }


  public Workunit customerComment(String customerComment) {
    this.customerComment = customerComment;
    return this;
  }

   /**
   * Comment of the work unit for the customer
   * @return customerComment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomerComment() {
    return customerComment;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerComment(String customerComment) {
    this.customerComment = customerComment;
  }


  public Workunit internalComment(String internalComment) {
    this.internalComment = internalComment;
    return this;
  }

   /**
   * Comment of the work unit for internal usage
   * @return internalComment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERNAL_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInternalComment() {
    return internalComment;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalComment(String internalComment) {
    this.internalComment = internalComment;
  }


   /**
   * Login of the user doing the last update on the work unit
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }




   /**
   * Date &amp; time of the last update of the work unit
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }




   /**
   * Date &amp; time of creation of the work unit
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }




  public Workunit extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public Workunit addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the work unit. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this workunit object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Workunit workunit = (Workunit) o;
    return Objects.equals(this.id, workunit.id) &&
        Objects.equals(this.validationStep, workunit.validationStep) &&
        Objects.equals(this.code, workunit.code) &&
        Objects.equals(this.date, workunit.date) &&
        Objects.equals(this.userDate, workunit.userDate) &&
        Objects.equals(this.employee, workunit.employee) &&
        Objects.equals(this.project, workunit.project) &&
        Objects.equals(this.projectLine, workunit.projectLine) &&
        Objects.equals(this.consumedQuantity, workunit.consumedQuantity) &&
        Objects.equals(this.reInvoiceableQuantity, workunit.reInvoiceableQuantity) &&
        Objects.equals(this.reInvoiceableAmount, workunit.reInvoiceableAmount) &&
        Objects.equals(this.reInvoiceableTotal, workunit.reInvoiceableTotal) &&
        Objects.equals(this.currency, workunit.currency) &&
        Objects.equals(this.doNotEvaluate, workunit.doNotEvaluate) &&
        Objects.equals(this.customerComment, workunit.customerComment) &&
        Objects.equals(this.internalComment, workunit.internalComment) &&
        Objects.equals(this.updatedBy, workunit.updatedBy) &&
        Objects.equals(this.updatedOnTime, workunit.updatedOnTime) &&
        Objects.equals(this.createdOnTime, workunit.createdOnTime) &&
        Objects.equals(this.extraData, workunit.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, validationStep, code, date, userDate, employee, project, projectLine, consumedQuantity, reInvoiceableQuantity, reInvoiceableAmount, reInvoiceableTotal, currency, doNotEvaluate, customerComment, internalComment, updatedBy, updatedOnTime, createdOnTime, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Workunit {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    validationStep: ").append(toIndentedString(validationStep)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    userDate: ").append(toIndentedString(userDate)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectLine: ").append(toIndentedString(projectLine)).append("\n");
    sb.append("    consumedQuantity: ").append(toIndentedString(consumedQuantity)).append("\n");
    sb.append("    reInvoiceableQuantity: ").append(toIndentedString(reInvoiceableQuantity)).append("\n");
    sb.append("    reInvoiceableAmount: ").append(toIndentedString(reInvoiceableAmount)).append("\n");
    sb.append("    reInvoiceableTotal: ").append(toIndentedString(reInvoiceableTotal)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    doNotEvaluate: ").append(toIndentedString(doNotEvaluate)).append("\n");
    sb.append("    customerComment: ").append(toIndentedString(customerComment)).append("\n");
    sb.append("    internalComment: ").append(toIndentedString(internalComment)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

