/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.DataLink;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * rowtype
 */
@JsonPropertyOrder({
  Rowtype.JSON_PROPERTY_ID,
  Rowtype.JSON_PROPERTY_CODE,
  Rowtype.JSON_PROPERTY_TYPE,
  Rowtype.JSON_PROPERTY_MODE,
  Rowtype.JSON_PROPERTY_ENTITIES,
  Rowtype.JSON_PROPERTY_PARENT,
  Rowtype.JSON_PROPERTY_GROUP,
  Rowtype.JSON_PROPERTY_IS_WORK_UNIT,
  Rowtype.JSON_PROPERTY_FLATE_RATE_AMOUNT,
  Rowtype.JSON_PROPERTY_SUBSCRIPTION_ROWTYPE,
  Rowtype.JSON_PROPERTY_SUBSCRIPTION_TIME_ROWTYPES,
  Rowtype.JSON_PROPERTY_IS_INVOICEABLE,
  Rowtype.JSON_PROPERTY_IS_EXCLUDED_FROM_PRODUCTION_CALCULATION,
  Rowtype.JSON_PROPERTY_ICON,
  Rowtype.JSON_PROPERTY_OCR_CATEGORY
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class Rowtype {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_TYPE = "type";
  private Integer type;

  public static final String JSON_PROPERTY_MODE = "mode";
  private Integer mode;

  public static final String JSON_PROPERTY_ENTITIES = "entities";
  private List<DataLink> entities;

  public static final String JSON_PROPERTY_PARENT = "parent";
  private DataLink parent;

  public static final String JSON_PROPERTY_GROUP = "group";
  private Integer group;

  public static final String JSON_PROPERTY_IS_WORK_UNIT = "isWorkUnit";
  private Integer isWorkUnit;

  public static final String JSON_PROPERTY_FLATE_RATE_AMOUNT = "flateRateAmount";
  private Double flateRateAmount;

  public static final String JSON_PROPERTY_SUBSCRIPTION_ROWTYPE = "subscriptionRowtype";
  private DataLink subscriptionRowtype;

  public static final String JSON_PROPERTY_SUBSCRIPTION_TIME_ROWTYPES = "subscriptionTimeRowtypes";
  private List<DataLink> subscriptionTimeRowtypes;

  public static final String JSON_PROPERTY_IS_INVOICEABLE = "isInvoiceable";
  private Integer isInvoiceable;

  public static final String JSON_PROPERTY_IS_EXCLUDED_FROM_PRODUCTION_CALCULATION = "isExcludedFromProductionCalculation";
  private Integer isExcludedFromProductionCalculation;

  public static final String JSON_PROPERTY_ICON = "icon";
  private String icon;

  public static final String JSON_PROPERTY_OCR_CATEGORY = "ocrCategory";
  private String ocrCategory;

  public Rowtype() { 
  }

  public Rowtype id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Rowtype code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Rowtype code assigned to this rowtype
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Rowtype type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Defines type of the rowtype.  For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Rowtypes-Types\&quot;);&#39;&gt;Rowtypes Type values&lt;/a&gt; in System data section
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(Integer type) {
    this.type = type;
  }


  public Rowtype mode(Integer mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Defines the type of the projects that can use the rowtype.  For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Rowtypes-Modes\&quot;);&#39;&gt;Rowtypes Mode values&lt;/a&gt; in System data section
   * @return mode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMode() {
    return mode;
  }


  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMode(Integer mode) {
    this.mode = mode;
  }


  public Rowtype entities(List<DataLink> entities) {
    this.entities = entities;
    return this;
  }

  public Rowtype addEntitiesItem(DataLink entitiesItem) {
    if (this.entities == null) {
      this.entities = new ArrayList<>();
    }
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * Link to the account or Root entities that can use the rowtype. For more informations see the /entities resource
   * @return entities
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DataLink> getEntities() {
    return entities;
  }


  @JsonProperty(JSON_PROPERTY_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntities(List<DataLink> entities) {
    this.entities = entities;
  }


  public Rowtype parent(DataLink parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getParent() {
    return parent;
  }


  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParent(DataLink parent) {
    this.parent = parent;
  }


  public Rowtype group(Integer group) {
    this.group = group;
    return this;
  }

   /**
   * Defines group of the rowtype.  For more information, see &lt;a href&#x3D;&#39;Javascript:systemInfos(\&quot;Rowtypes-Groups\&quot;);&#39;&gt;Rowtypes Group values&lt;/a&gt; in System data section
   * @return group
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGroup() {
    return group;
  }


  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroup(Integer group) {
    this.group = group;
  }


  public Rowtype isWorkUnit(Integer isWorkUnit) {
    this.isWorkUnit = isWorkUnit;
    return this;
  }

   /**
   * Indicates if the rowtype is a work unit type. Only used with the purchase rowtypes.  0 : No, 1 : Yes
   * @return isWorkUnit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_WORK_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIsWorkUnit() {
    return isWorkUnit;
  }


  @JsonProperty(JSON_PROPERTY_IS_WORK_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsWorkUnit(Integer isWorkUnit) {
    this.isWorkUnit = isWorkUnit;
  }


  public Rowtype flateRateAmount(Double flateRateAmount) {
    this.flateRateAmount = flateRateAmount;
    return this;
  }

   /**
   * Defines Flat-rate amount for the Flat-rate rowtypes
   * @return flateRateAmount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLATE_RATE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFlateRateAmount() {
    return flateRateAmount;
  }


  @JsonProperty(JSON_PROPERTY_FLATE_RATE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlateRateAmount(Double flateRateAmount) {
    this.flateRateAmount = flateRateAmount;
  }


  public Rowtype subscriptionRowtype(DataLink subscriptionRowtype) {
    this.subscriptionRowtype = subscriptionRowtype;
    return this;
  }

   /**
   * Get subscriptionRowtype
   * @return subscriptionRowtype
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ROWTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getSubscriptionRowtype() {
    return subscriptionRowtype;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ROWTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionRowtype(DataLink subscriptionRowtype) {
    this.subscriptionRowtype = subscriptionRowtype;
  }


  public Rowtype subscriptionTimeRowtypes(List<DataLink> subscriptionTimeRowtypes) {
    this.subscriptionTimeRowtypes = subscriptionTimeRowtypes;
    return this;
  }

  public Rowtype addSubscriptionTimeRowtypesItem(DataLink subscriptionTimeRowtypesItem) {
    if (this.subscriptionTimeRowtypes == null) {
      this.subscriptionTimeRowtypes = new ArrayList<>();
    }
    this.subscriptionTimeRowtypes.add(subscriptionTimeRowtypesItem);
    return this;
  }

   /**
   * Link to the times rowtypes for  the subscription rowtypes only
   * @return subscriptionTimeRowtypes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_TIME_ROWTYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DataLink> getSubscriptionTimeRowtypes() {
    return subscriptionTimeRowtypes;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_TIME_ROWTYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionTimeRowtypes(List<DataLink> subscriptionTimeRowtypes) {
    this.subscriptionTimeRowtypes = subscriptionTimeRowtypes;
  }


  public Rowtype isInvoiceable(Integer isInvoiceable) {
    this.isInvoiceable = isInvoiceable;
    return this;
  }

   /**
   * Indicates if the rowtype can be invoiced.  0 : Yes, 1 : No
   * @return isInvoiceable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_INVOICEABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIsInvoiceable() {
    return isInvoiceable;
  }


  @JsonProperty(JSON_PROPERTY_IS_INVOICEABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsInvoiceable(Integer isInvoiceable) {
    this.isInvoiceable = isInvoiceable;
  }


  public Rowtype isExcludedFromProductionCalculation(Integer isExcludedFromProductionCalculation) {
    this.isExcludedFromProductionCalculation = isExcludedFromProductionCalculation;
    return this;
  }

   /**
   * Indicates if the rowtype is excluded from the production calculation.  0 : No, 1 : Yes
   * @return isExcludedFromProductionCalculation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_EXCLUDED_FROM_PRODUCTION_CALCULATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIsExcludedFromProductionCalculation() {
    return isExcludedFromProductionCalculation;
  }


  @JsonProperty(JSON_PROPERTY_IS_EXCLUDED_FROM_PRODUCTION_CALCULATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsExcludedFromProductionCalculation(Integer isExcludedFromProductionCalculation) {
    this.isExcludedFromProductionCalculation = isExcludedFromProductionCalculation;
  }


  public Rowtype icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Name of the icon representing the type
   * @return icon
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIcon(String icon) {
    this.icon = icon;
  }


  public Rowtype ocrCategory(String ocrCategory) {
    this.ocrCategory = ocrCategory;
    return this;
  }

   /**
   * Type with ocr category
   * @return ocrCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OCR_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOcrCategory() {
    return ocrCategory;
  }


  @JsonProperty(JSON_PROPERTY_OCR_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOcrCategory(String ocrCategory) {
    this.ocrCategory = ocrCategory;
  }


  /**
   * Return true if this Rowtype object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rowtype rowtype = (Rowtype) o;
    return Objects.equals(this.id, rowtype.id) &&
        Objects.equals(this.code, rowtype.code) &&
        Objects.equals(this.type, rowtype.type) &&
        Objects.equals(this.mode, rowtype.mode) &&
        Objects.equals(this.entities, rowtype.entities) &&
        Objects.equals(this.parent, rowtype.parent) &&
        Objects.equals(this.group, rowtype.group) &&
        Objects.equals(this.isWorkUnit, rowtype.isWorkUnit) &&
        Objects.equals(this.flateRateAmount, rowtype.flateRateAmount) &&
        Objects.equals(this.subscriptionRowtype, rowtype.subscriptionRowtype) &&
        Objects.equals(this.subscriptionTimeRowtypes, rowtype.subscriptionTimeRowtypes) &&
        Objects.equals(this.isInvoiceable, rowtype.isInvoiceable) &&
        Objects.equals(this.isExcludedFromProductionCalculation, rowtype.isExcludedFromProductionCalculation) &&
        Objects.equals(this.icon, rowtype.icon) &&
        Objects.equals(this.ocrCategory, rowtype.ocrCategory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, type, mode, entities, parent, group, isWorkUnit, flateRateAmount, subscriptionRowtype, subscriptionTimeRowtypes, isInvoiceable, isExcludedFromProductionCalculation, icon, ocrCategory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rowtype {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    isWorkUnit: ").append(toIndentedString(isWorkUnit)).append("\n");
    sb.append("    flateRateAmount: ").append(toIndentedString(flateRateAmount)).append("\n");
    sb.append("    subscriptionRowtype: ").append(toIndentedString(subscriptionRowtype)).append("\n");
    sb.append("    subscriptionTimeRowtypes: ").append(toIndentedString(subscriptionTimeRowtypes)).append("\n");
    sb.append("    isInvoiceable: ").append(toIndentedString(isInvoiceable)).append("\n");
    sb.append("    isExcludedFromProductionCalculation: ").append(toIndentedString(isExcludedFromProductionCalculation)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    ocrCategory: ").append(toIndentedString(ocrCategory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

