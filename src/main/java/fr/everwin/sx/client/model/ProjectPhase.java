/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.CurrencyDataLink;
import fr.everwin.sx.client.model.ProjectDataLink;
import fr.everwin.sx.client.model.ProjectPhaseCategoryDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * ProjectPhase
 */
@JsonPropertyOrder({
  ProjectPhase.JSON_PROPERTY_ID,
  ProjectPhase.JSON_PROPERTY_CODE,
  ProjectPhase.JSON_PROPERTY_PROJECT,
  ProjectPhase.JSON_PROPERTY_ORDER,
  ProjectPhase.JSON_PROPERTY_INITIAL_START_DATE,
  ProjectPhase.JSON_PROPERTY_INITIAL_END_DATE,
  ProjectPhase.JSON_PROPERTY_UPDATED_START_DATE,
  ProjectPhase.JSON_PROPERTY_UPDATED_END_DATE,
  ProjectPhase.JSON_PROPERTY_ACTUAL_START_DATE,
  ProjectPhase.JSON_PROPERTY_ACTUAL_END_DATE,
  ProjectPhase.JSON_PROPERTY_COMMENT,
  ProjectPhase.JSON_PROPERTY_TITLE,
  ProjectPhase.JSON_PROPERTY_NUMBER,
  ProjectPhase.JSON_PROPERTY_DISTRIBUTION_RATE,
  ProjectPhase.JSON_PROPERTY_CATEGORY,
  ProjectPhase.JSON_PROPERTY_RESUMPTION,
  ProjectPhase.JSON_PROPERTY_CURRENCY,
  ProjectPhase.JSON_PROPERTY_UPDATED_ON_TIME,
  ProjectPhase.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("project-phase")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class ProjectPhase {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private ProjectDataLink project;

  public static final String JSON_PROPERTY_ORDER = "order";
  private Integer order;

  public static final String JSON_PROPERTY_INITIAL_START_DATE = "initialStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialStartDate;

  public static final String JSON_PROPERTY_INITIAL_END_DATE = "initialEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialEndDate;

  public static final String JSON_PROPERTY_UPDATED_START_DATE = "updatedStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedStartDate;

  public static final String JSON_PROPERTY_UPDATED_END_DATE = "updatedEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedEndDate;

  public static final String JSON_PROPERTY_ACTUAL_START_DATE = "actualStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime actualStartDate;

  public static final String JSON_PROPERTY_ACTUAL_END_DATE = "actualEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime actualEndDate;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private Long number;

  public static final String JSON_PROPERTY_DISTRIBUTION_RATE = "distributionRate";
  private Long distributionRate;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private ProjectPhaseCategoryDataLink category;

  public static final String JSON_PROPERTY_RESUMPTION = "resumption";
  private Integer resumption;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private CurrencyDataLink currency;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public ProjectPhase() { 
  }

  public ProjectPhase id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public ProjectPhase code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the project phase
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public ProjectPhase project(ProjectDataLink project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProjectDataLink getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProject(ProjectDataLink project) {
    this.project = project;
  }


  public ProjectPhase order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Order of the project phase
   * @return order
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(Integer order) {
    this.order = order;
  }


  public ProjectPhase initialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
    return this;
  }

   /**
   * Initial start date of the project phase
   * @return initialStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialStartDate() {
    return initialStartDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
  }


  public ProjectPhase initialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
    return this;
  }

   /**
   * Initial end date of the project phase
   * @return initialEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialEndDate() {
    return initialEndDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
  }


  public ProjectPhase updatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
    return this;
  }

   /**
   * Updated start date of the project phase
   * @return updatedStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedStartDate() {
    return updatedStartDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
  }


  public ProjectPhase updatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
    return this;
  }

   /**
   * Updated end date of the project phase
   * @return updatedEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedEndDate() {
    return updatedEndDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
  }


  public ProjectPhase actualStartDate(java.time.LocalDateTime actualStartDate) {
    this.actualStartDate = actualStartDate;
    return this;
  }

   /**
   * Actual start date of the project phase
   * @return actualStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getActualStartDate() {
    return actualStartDate;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActualStartDate(java.time.LocalDateTime actualStartDate) {
    this.actualStartDate = actualStartDate;
  }


  public ProjectPhase actualEndDate(java.time.LocalDateTime actualEndDate) {
    this.actualEndDate = actualEndDate;
    return this;
  }

   /**
   * Actual end date of the project phase
   * @return actualEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getActualEndDate() {
    return actualEndDate;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActualEndDate(java.time.LocalDateTime actualEndDate) {
    this.actualEndDate = actualEndDate;
  }


  public ProjectPhase comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment of the project phase
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public ProjectPhase title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title of the project phase
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public ProjectPhase number(Long number) {
    this.number = number;
    return this;
  }

   /**
   * Comment of the project phase
   * @return number
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(Long number) {
    this.number = number;
  }


  public ProjectPhase distributionRate(Long distributionRate) {
    this.distributionRate = distributionRate;
    return this;
  }

   /**
   * Distribution rate of the project phase
   * @return distributionRate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISTRIBUTION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getDistributionRate() {
    return distributionRate;
  }


  @JsonProperty(JSON_PROPERTY_DISTRIBUTION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistributionRate(Long distributionRate) {
    this.distributionRate = distributionRate;
  }


  public ProjectPhase category(ProjectPhaseCategoryDataLink category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectPhaseCategoryDataLink getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(ProjectPhaseCategoryDataLink category) {
    this.category = category;
  }


  public ProjectPhase resumption(Integer resumption) {
    this.resumption = resumption;
    return this;
  }

   /**
   * Resumption of the project phase
   * @return resumption
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESUMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getResumption() {
    return resumption;
  }


  @JsonProperty(JSON_PROPERTY_RESUMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResumption(Integer resumption) {
    this.resumption = resumption;
  }


  public ProjectPhase currency(CurrencyDataLink currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CurrencyDataLink getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(CurrencyDataLink currency) {
    this.currency = currency;
  }


  public ProjectPhase updatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
    return this;
  }

   /**
   * Date &amp; time of the last update of the project phase
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
  }


  public ProjectPhase extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public ProjectPhase addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the project phase. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this project-phase object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectPhase projectPhase = (ProjectPhase) o;
    return Objects.equals(this.id, projectPhase.id) &&
        Objects.equals(this.code, projectPhase.code) &&
        Objects.equals(this.project, projectPhase.project) &&
        Objects.equals(this.order, projectPhase.order) &&
        Objects.equals(this.initialStartDate, projectPhase.initialStartDate) &&
        Objects.equals(this.initialEndDate, projectPhase.initialEndDate) &&
        Objects.equals(this.updatedStartDate, projectPhase.updatedStartDate) &&
        Objects.equals(this.updatedEndDate, projectPhase.updatedEndDate) &&
        Objects.equals(this.actualStartDate, projectPhase.actualStartDate) &&
        Objects.equals(this.actualEndDate, projectPhase.actualEndDate) &&
        Objects.equals(this.comment, projectPhase.comment) &&
        Objects.equals(this.title, projectPhase.title) &&
        Objects.equals(this.number, projectPhase.number) &&
        Objects.equals(this.distributionRate, projectPhase.distributionRate) &&
        Objects.equals(this.category, projectPhase.category) &&
        Objects.equals(this.resumption, projectPhase.resumption) &&
        Objects.equals(this.currency, projectPhase.currency) &&
        Objects.equals(this.updatedOnTime, projectPhase.updatedOnTime) &&
        Objects.equals(this.extraData, projectPhase.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, project, order, initialStartDate, initialEndDate, updatedStartDate, updatedEndDate, actualStartDate, actualEndDate, comment, title, number, distributionRate, category, resumption, currency, updatedOnTime, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectPhase {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    initialStartDate: ").append(toIndentedString(initialStartDate)).append("\n");
    sb.append("    initialEndDate: ").append(toIndentedString(initialEndDate)).append("\n");
    sb.append("    updatedStartDate: ").append(toIndentedString(updatedStartDate)).append("\n");
    sb.append("    updatedEndDate: ").append(toIndentedString(updatedEndDate)).append("\n");
    sb.append("    actualStartDate: ").append(toIndentedString(actualStartDate)).append("\n");
    sb.append("    actualEndDate: ").append(toIndentedString(actualEndDate)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    distributionRate: ").append(toIndentedString(distributionRate)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    resumption: ").append(toIndentedString(resumption)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

