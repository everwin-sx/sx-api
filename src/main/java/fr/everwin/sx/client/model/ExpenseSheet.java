/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ExpenseSheet
 */
@JsonPropertyOrder({
  ExpenseSheet.JSON_PROPERTY_ID,
  ExpenseSheet.JSON_PROPERTY_VALIDATION_STEP,
  ExpenseSheet.JSON_PROPERTY_CODE,
  ExpenseSheet.JSON_PROPERTY_EMPLOYEE,
  ExpenseSheet.JSON_PROPERTY_CREATION_DATE,
  ExpenseSheet.JSON_PROPERTY_ADVANCE,
  ExpenseSheet.JSON_PROPERTY_TOTAL_TO_PAY,
  ExpenseSheet.JSON_PROPERTY_ENTITY,
  ExpenseSheet.JSON_PROPERTY_FINANCIAL_ENTITY,
  ExpenseSheet.JSON_PROPERTY_SETTLEMENT_DATE,
  ExpenseSheet.JSON_PROPERTY_NB_DAYS_LUNCH,
  ExpenseSheet.JSON_PROPERTY_DISTANCE_TRAVELLED,
  ExpenseSheet.JSON_PROPERTY_COMMENT,
  ExpenseSheet.JSON_PROPERTY_CURRENCY,
  ExpenseSheet.JSON_PROPERTY_CREATED_ON_TIME,
  ExpenseSheet.JSON_PROPERTY_CREATED_ON_PERIOD,
  ExpenseSheet.JSON_PROPERTY_UPDATED_ON_TIME,
  ExpenseSheet.JSON_PROPERTY_UPDATED_BY,
  ExpenseSheet.JSON_PROPERTY_LAST_COMMENT,
  ExpenseSheet.JSON_PROPERTY_HAS_VALIDATION_HISTORY,
  ExpenseSheet.JSON_PROPERTY_ACCESS,
  ExpenseSheet.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("expenseSheet")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class ExpenseSheet {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_VALIDATION_STEP = "validationStep";
  private String validationStep;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private EmployeeDataLink employee;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime creationDate;

  public static final String JSON_PROPERTY_ADVANCE = "advance";
  private Double advance;

  public static final String JSON_PROPERTY_TOTAL_TO_PAY = "totalToPay";
  private Double totalToPay;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private EntityDataLink entity;

  public static final String JSON_PROPERTY_FINANCIAL_ENTITY = "financialEntity";
  private EntityDataLink financialEntity;

  public static final String JSON_PROPERTY_SETTLEMENT_DATE = "settlementDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime settlementDate;

  public static final String JSON_PROPERTY_NB_DAYS_LUNCH = "nbDaysLunch";
  private Integer nbDaysLunch;

  public static final String JSON_PROPERTY_DISTANCE_TRAVELLED = "distanceTravelled";
  private Integer distanceTravelled;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private CurrencyDataLink currency;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_PERIOD = "createdOnPeriod";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnPeriod;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_LAST_COMMENT = "lastComment";
  private String lastComment;

  public static final String JSON_PROPERTY_HAS_VALIDATION_HISTORY = "hasValidationHistory";
  private Boolean hasValidationHistory;

  public static final String JSON_PROPERTY_ACCESS = "access";
  private Access access;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public ExpenseSheet() { 
  }

  @JsonCreator
  public ExpenseSheet(
    @JsonProperty(JSON_PROPERTY_TOTAL_TO_PAY) Double totalToPay, 
    @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME) java.time.LocalDateTime createdOnTime, 
    @JsonProperty(JSON_PROPERTY_CREATED_ON_PERIOD) java.time.LocalDateTime createdOnPeriod, 
    @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME) java.time.LocalDateTime updatedOnTime, 
    @JsonProperty(JSON_PROPERTY_UPDATED_BY) String updatedBy, 
    @JsonProperty(JSON_PROPERTY_LAST_COMMENT) String lastComment, 
    @JsonProperty(JSON_PROPERTY_HAS_VALIDATION_HISTORY) Boolean hasValidationHistory
  ) {
    this();
    this.totalToPay = totalToPay;
    this.createdOnTime = createdOnTime;
    this.createdOnPeriod = createdOnPeriod;
    this.updatedOnTime = updatedOnTime;
    this.updatedBy = updatedBy;
    this.lastComment = lastComment;
    this.hasValidationHistory = hasValidationHistory;
  }

  public ExpenseSheet id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public ExpenseSheet validationStep(String validationStep) {
    this.validationStep = validationStep;
    return this;
  }

   /**
   * Validation step of the element
   * @return validationStep
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getValidationStep() {
    return validationStep;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidationStep(String validationStep) {
    this.validationStep = validationStep;
  }


  public ExpenseSheet code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the expense sheet
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public ExpenseSheet employee(EmployeeDataLink employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EmployeeDataLink getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmployee(EmployeeDataLink employee) {
    this.employee = employee;
  }


  public ExpenseSheet creationDate(java.time.LocalDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Creation date of the expense sheet
   * @return creationDate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.time.LocalDateTime getCreationDate() {
    return creationDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreationDate(java.time.LocalDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public ExpenseSheet advance(Double advance) {
    this.advance = advance;
    return this;
  }

   /**
   * Advance of the expense sheet
   * @return advance
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADVANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAdvance() {
    return advance;
  }


  @JsonProperty(JSON_PROPERTY_ADVANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdvance(Double advance) {
    this.advance = advance;
  }


   /**
   * Total to pay of the expense sheet
   * @return totalToPay
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_TO_PAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalToPay() {
    return totalToPay;
  }




  public ExpenseSheet entity(EntityDataLink entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntity(EntityDataLink entity) {
    this.entity = entity;
  }


  public ExpenseSheet financialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
    return this;
  }

   /**
   * Get financialEntity
   * @return financialEntity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityDataLink getFinancialEntity() {
    return financialEntity;
  }


  @JsonProperty(JSON_PROPERTY_FINANCIAL_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinancialEntity(EntityDataLink financialEntity) {
    this.financialEntity = financialEntity;
  }


  public ExpenseSheet settlementDate(java.time.LocalDateTime settlementDate) {
    this.settlementDate = settlementDate;
    return this;
  }

   /**
   * Settlement date of the expense sheet
   * @return settlementDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SETTLEMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getSettlementDate() {
    return settlementDate;
  }


  @JsonProperty(JSON_PROPERTY_SETTLEMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSettlementDate(java.time.LocalDateTime settlementDate) {
    this.settlementDate = settlementDate;
  }


  public ExpenseSheet nbDaysLunch(Integer nbDaysLunch) {
    this.nbDaysLunch = nbDaysLunch;
    return this;
  }

   /**
   * Number of days entitling to luncheon vouchers of the expense sheet
   * @return nbDaysLunch
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NB_DAYS_LUNCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNbDaysLunch() {
    return nbDaysLunch;
  }


  @JsonProperty(JSON_PROPERTY_NB_DAYS_LUNCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNbDaysLunch(Integer nbDaysLunch) {
    this.nbDaysLunch = nbDaysLunch;
  }


  public ExpenseSheet distanceTravelled(Integer distanceTravelled) {
    this.distanceTravelled = distanceTravelled;
    return this;
  }

   /**
   * Distance travelled of the expense sheet
   * @return distanceTravelled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISTANCE_TRAVELLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDistanceTravelled() {
    return distanceTravelled;
  }


  @JsonProperty(JSON_PROPERTY_DISTANCE_TRAVELLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistanceTravelled(Integer distanceTravelled) {
    this.distanceTravelled = distanceTravelled;
  }


  public ExpenseSheet comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment of the expense sheet
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public ExpenseSheet currency(CurrencyDataLink currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CurrencyDataLink getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(CurrencyDataLink currency) {
    this.currency = currency;
  }


   /**
   * Date &amp; time of creation of the expense sheet
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }




   /**
   * Creation period of the expense sheet
   * @return createdOnPeriod
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnPeriod() {
    return createdOnPeriod;
  }




   /**
   * Date &amp; time of the last update of the expense sheet
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }




   /**
   * Login of the user doing the last update on the expense sheet
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }




   /**
   * Last validation comment
   * @return lastComment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastComment() {
    return lastComment;
  }




   /**
   * True is expense sheet has validation history data
   * @return hasValidationHistory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_VALIDATION_HISTORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasValidationHistory() {
    return hasValidationHistory;
  }




  public ExpenseSheet access(Access access) {
    this.access = access;
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Access getAccess() {
    return access;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccess(Access access) {
    this.access = access;
  }


  public ExpenseSheet extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public ExpenseSheet addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the company. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this expenseSheet object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpenseSheet expenseSheet = (ExpenseSheet) o;
    return Objects.equals(this.id, expenseSheet.id) &&
        Objects.equals(this.validationStep, expenseSheet.validationStep) &&
        Objects.equals(this.code, expenseSheet.code) &&
        Objects.equals(this.employee, expenseSheet.employee) &&
        Objects.equals(this.creationDate, expenseSheet.creationDate) &&
        Objects.equals(this.advance, expenseSheet.advance) &&
        Objects.equals(this.totalToPay, expenseSheet.totalToPay) &&
        Objects.equals(this.entity, expenseSheet.entity) &&
        Objects.equals(this.financialEntity, expenseSheet.financialEntity) &&
        Objects.equals(this.settlementDate, expenseSheet.settlementDate) &&
        Objects.equals(this.nbDaysLunch, expenseSheet.nbDaysLunch) &&
        Objects.equals(this.distanceTravelled, expenseSheet.distanceTravelled) &&
        Objects.equals(this.comment, expenseSheet.comment) &&
        Objects.equals(this.currency, expenseSheet.currency) &&
        Objects.equals(this.createdOnTime, expenseSheet.createdOnTime) &&
        Objects.equals(this.createdOnPeriod, expenseSheet.createdOnPeriod) &&
        Objects.equals(this.updatedOnTime, expenseSheet.updatedOnTime) &&
        Objects.equals(this.updatedBy, expenseSheet.updatedBy) &&
        Objects.equals(this.lastComment, expenseSheet.lastComment) &&
        Objects.equals(this.hasValidationHistory, expenseSheet.hasValidationHistory) &&
        Objects.equals(this.access, expenseSheet.access) &&
        Objects.equals(this.extraData, expenseSheet.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, validationStep, code, employee, creationDate, advance, totalToPay, entity, financialEntity, settlementDate, nbDaysLunch, distanceTravelled, comment, currency, createdOnTime, createdOnPeriod, updatedOnTime, updatedBy, lastComment, hasValidationHistory, access, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpenseSheet {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    validationStep: ").append(toIndentedString(validationStep)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    advance: ").append(toIndentedString(advance)).append("\n");
    sb.append("    totalToPay: ").append(toIndentedString(totalToPay)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    financialEntity: ").append(toIndentedString(financialEntity)).append("\n");
    sb.append("    settlementDate: ").append(toIndentedString(settlementDate)).append("\n");
    sb.append("    nbDaysLunch: ").append(toIndentedString(nbDaysLunch)).append("\n");
    sb.append("    distanceTravelled: ").append(toIndentedString(distanceTravelled)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    createdOnPeriod: ").append(toIndentedString(createdOnPeriod)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    lastComment: ").append(toIndentedString(lastComment)).append("\n");
    sb.append("    hasValidationHistory: ").append(toIndentedString(hasValidationHistory)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

