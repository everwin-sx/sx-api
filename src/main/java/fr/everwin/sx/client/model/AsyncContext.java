/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;


/**
 * AsyncContext
 */
@JsonPropertyOrder({
  AsyncContext.JSON_PROPERTY_RESPONSE,
  AsyncContext.JSON_PROPERTY_REQUEST,
  AsyncContext.JSON_PROPERTY_TIMEOUT
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-21T16:37:39.682984900+02:00[Europe/Paris]")
public class AsyncContext {
  public static final String JSON_PROPERTY_RESPONSE = "response";
  private ServletResponse response;

  public static final String JSON_PROPERTY_REQUEST = "request";
  private ServletRequest request;

  public static final String JSON_PROPERTY_TIMEOUT = "timeout";
  private Long timeout;

  public AsyncContext() { 
  }

  public AsyncContext response(ServletResponse response) {
    this.response = response;
    return this;
  }

   /**
   * Get response
   * @return response
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServletResponse getResponse() {
    return response;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponse(ServletResponse response) {
    this.response = response;
  }


  public AsyncContext request(ServletRequest request) {
    this.request = request;
    return this;
  }

   /**
   * Get request
   * @return request
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServletRequest getRequest() {
    return request;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequest(ServletRequest request) {
    this.request = request;
  }


  public AsyncContext timeout(Long timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Get timeout
   * @return timeout
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTimeout() {
    return timeout;
  }


  @JsonProperty(JSON_PROPERTY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeout(Long timeout) {
    this.timeout = timeout;
  }


  /**
   * Return true if this AsyncContext object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AsyncContext asyncContext = (AsyncContext) o;
    return Objects.equals(this.response, asyncContext.response) &&
        Objects.equals(this.request, asyncContext.request) &&
        Objects.equals(this.timeout, asyncContext.timeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(response, request, timeout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AsyncContext {\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

