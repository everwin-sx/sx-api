/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * CustomerInvoicesSubItems
 */
@JsonPropertyOrder({
  CustomerInvoicesSubItems.JSON_PROPERTY_ID,
  CustomerInvoicesSubItems.JSON_PROPERTY_INVOICE,
  CustomerInvoicesSubItems.JSON_PROPERTY_ITEM,
  CustomerInvoicesSubItems.JSON_PROPERTY_PROJECT_ACTIVITY,
  CustomerInvoicesSubItems.JSON_PROPERTY_CODE,
  CustomerInvoicesSubItems.JSON_PROPERTY_LABEL,
  CustomerInvoicesSubItems.JSON_PROPERTY_COMMENT,
  CustomerInvoicesSubItems.JSON_PROPERTY_PRINT_MODE,
  CustomerInvoicesSubItems.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("customer-invoices-sub-items")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class CustomerInvoicesSubItems {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_INVOICE = "invoice";
  private CustomerInvoiceDataLink invoice;

  public static final String JSON_PROPERTY_ITEM = "item";
  private CustomerInvoiceItemDataLink item;

  public static final String JSON_PROPERTY_PROJECT_ACTIVITY = "projectActivity";
  private ProjectActivityDataLink projectActivity;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  /**
   * Print mode for the customer invoice sub item. 0 : Hidden, 2 : Label, 4 : Total, 6 : Label/Total, 8 : Label/Com./Details/Total, 10 : Label/Com./Total, 12 : Label/Comments, 18 : Comments
   */
  public enum PrintModeEnum {
    NUMBER_0(0),
    
    NUMBER_2(2),
    
    NUMBER_4(4),
    
    NUMBER_6(6),
    
    NUMBER_8(8),
    
    NUMBER_10(10),
    
    NUMBER_12(12),
    
    NUMBER_18(18);

    private Integer value;

    PrintModeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PrintModeEnum fromValue(Integer value) {
      for (PrintModeEnum b : PrintModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PRINT_MODE = "printMode";
  private PrintModeEnum printMode;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public CustomerInvoicesSubItems() { 
  }

  @JsonCreator
  public CustomerInvoicesSubItems(
    @JsonProperty(JSON_PROPERTY_CODE) String code
  ) {
    this();
    this.code = code;
  }

  public CustomerInvoicesSubItems id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public CustomerInvoicesSubItems invoice(CustomerInvoiceDataLink invoice) {
    this.invoice = invoice;
    return this;
  }

   /**
   * Get invoice
   * @return invoice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerInvoiceDataLink getInvoice() {
    return invoice;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoice(CustomerInvoiceDataLink invoice) {
    this.invoice = invoice;
  }


  public CustomerInvoicesSubItems item(CustomerInvoiceItemDataLink item) {
    this.item = item;
    return this;
  }

   /**
   * Get item
   * @return item
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerInvoiceItemDataLink getItem() {
    return item;
  }


  @JsonProperty(JSON_PROPERTY_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItem(CustomerInvoiceItemDataLink item) {
    this.item = item;
  }


  public CustomerInvoicesSubItems projectActivity(ProjectActivityDataLink projectActivity) {
    this.projectActivity = projectActivity;
    return this;
  }

   /**
   * Get projectActivity
   * @return projectActivity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectActivityDataLink getProjectActivity() {
    return projectActivity;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectActivity(ProjectActivityDataLink projectActivity) {
    this.projectActivity = projectActivity;
  }


   /**
   * Code of the customer invoice sub item
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }




  public CustomerInvoicesSubItems label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label of the customer invoice sub item
   * @return label
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public CustomerInvoicesSubItems comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Code of the customer invoice sub item
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public CustomerInvoicesSubItems printMode(PrintModeEnum printMode) {
    this.printMode = printMode;
    return this;
  }

   /**
   * Print mode for the customer invoice sub item. 0 : Hidden, 2 : Label, 4 : Total, 6 : Label/Total, 8 : Label/Com./Details/Total, 10 : Label/Com./Total, 12 : Label/Comments, 18 : Comments
   * @return printMode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrintModeEnum getPrintMode() {
    return printMode;
  }


  @JsonProperty(JSON_PROPERTY_PRINT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintMode(PrintModeEnum printMode) {
    this.printMode = printMode;
  }


  public CustomerInvoicesSubItems extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public CustomerInvoicesSubItems addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the customer invoice sub item. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this customer-invoices-sub-items object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerInvoicesSubItems customerInvoicesSubItems = (CustomerInvoicesSubItems) o;
    return Objects.equals(this.id, customerInvoicesSubItems.id) &&
        Objects.equals(this.invoice, customerInvoicesSubItems.invoice) &&
        Objects.equals(this.item, customerInvoicesSubItems.item) &&
        Objects.equals(this.projectActivity, customerInvoicesSubItems.projectActivity) &&
        Objects.equals(this.code, customerInvoicesSubItems.code) &&
        Objects.equals(this.label, customerInvoicesSubItems.label) &&
        Objects.equals(this.comment, customerInvoicesSubItems.comment) &&
        Objects.equals(this.printMode, customerInvoicesSubItems.printMode) &&
        Objects.equals(this.extraData, customerInvoicesSubItems.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, invoice, item, projectActivity, code, label, comment, printMode, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerInvoicesSubItems {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    invoice: ").append(toIndentedString(invoice)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    projectActivity: ").append(toIndentedString(projectActivity)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    printMode: ").append(toIndentedString(printMode)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

