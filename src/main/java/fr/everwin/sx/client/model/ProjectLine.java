/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.DiscountableProjectState;
import fr.everwin.sx.client.model.EmployeeDataLink;
import fr.everwin.sx.client.model.EquipmentDataLink;
import fr.everwin.sx.client.model.FamilyDataLink;
import fr.everwin.sx.client.model.ProductDataLink;
import fr.everwin.sx.client.model.ProfileDataLink;
import fr.everwin.sx.client.model.ProjectActivityDataLink;
import fr.everwin.sx.client.model.ProjectDataLink;
import fr.everwin.sx.client.model.ProjectState;
import fr.everwin.sx.client.model.RowtypeDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * ProjectLine
 */
@JsonPropertyOrder({
  ProjectLine.JSON_PROPERTY_ID,
  ProjectLine.JSON_PROPERTY_PROJECT,
  ProjectLine.JSON_PROPERTY_ACTIVITY,
  ProjectLine.JSON_PROPERTY_TYPE,
  ProjectLine.JSON_PROPERTY_EMPLOYEE,
  ProjectLine.JSON_PROPERTY_EMPLOYEE_PROFILE,
  ProjectLine.JSON_PROPERTY_EQUIPMENT,
  ProjectLine.JSON_PROPERTY_EQUIPMENT_FAMILY,
  ProjectLine.JSON_PROPERTY_STATUS,
  ProjectLine.JSON_PROPERTY_COMMENT,
  ProjectLine.JSON_PROPERTY_INVOICING_MODE,
  ProjectLine.JSON_PROPERTY_PRODUCT,
  ProjectLine.JSON_PROPERTY_UNIT,
  ProjectLine.JSON_PROPERTY_CURRENCY,
  ProjectLine.JSON_PROPERTY_ORDER,
  ProjectLine.JSON_PROPERTY_INITIAL_START_DATE,
  ProjectLine.JSON_PROPERTY_INITIAL_END_DATE,
  ProjectLine.JSON_PROPERTY_UPDATED_START_DATE,
  ProjectLine.JSON_PROPERTY_UPDATED_END_DATE,
  ProjectLine.JSON_PROPERTY_ACTUAL_START_DATE,
  ProjectLine.JSON_PROPERTY_ACTUAL_END_DATE,
  ProjectLine.JSON_PROPERTY_EXPECTED,
  ProjectLine.JSON_PROPERTY_INITIAL,
  ProjectLine.JSON_PROPERTY_UPDATED,
  ProjectLine.JSON_PROPERTY_COMMITTED,
  ProjectLine.JSON_PROPERTY_ACTUAL,
  ProjectLine.JSON_PROPERTY_PRODUCED,
  ProjectLine.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("project-line")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class ProjectLine {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private ProjectDataLink project;

  public static final String JSON_PROPERTY_ACTIVITY = "activity";
  private ProjectActivityDataLink activity;

  public static final String JSON_PROPERTY_TYPE = "type";
  private RowtypeDataLink type;

  public static final String JSON_PROPERTY_EMPLOYEE = "employee";
  private EmployeeDataLink employee;

  public static final String JSON_PROPERTY_EMPLOYEE_PROFILE = "employeeProfile";
  private ProfileDataLink employeeProfile;

  public static final String JSON_PROPERTY_EQUIPMENT = "equipment";
  private EquipmentDataLink equipment;

  public static final String JSON_PROPERTY_EQUIPMENT_FAMILY = "equipmentFamily";
  private FamilyDataLink equipmentFamily;

  public static final String JSON_PROPERTY_STATUS = "status";
  private Integer status;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_INVOICING_MODE = "invoicingMode";
  private Integer invoicingMode;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private ProductDataLink product;

  public static final String JSON_PROPERTY_UNIT = "unit";
  private String unit;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_ORDER = "order";
  private Integer order;

  public static final String JSON_PROPERTY_INITIAL_START_DATE = "initialStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialStartDate;

  public static final String JSON_PROPERTY_INITIAL_END_DATE = "initialEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialEndDate;

  public static final String JSON_PROPERTY_UPDATED_START_DATE = "updatedStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedStartDate;

  public static final String JSON_PROPERTY_UPDATED_END_DATE = "updatedEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedEndDate;

  public static final String JSON_PROPERTY_ACTUAL_START_DATE = "actualStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime actualStartDate;

  public static final String JSON_PROPERTY_ACTUAL_END_DATE = "actualEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime actualEndDate;

  public static final String JSON_PROPERTY_EXPECTED = "expected";
  private DiscountableProjectState expected;

  public static final String JSON_PROPERTY_INITIAL = "initial";
  private ProjectState initial;

  public static final String JSON_PROPERTY_UPDATED = "updated";
  private ProjectState updated;

  public static final String JSON_PROPERTY_COMMITTED = "committed";
  private ProjectState committed;

  public static final String JSON_PROPERTY_ACTUAL = "actual";
  private ProjectState actual;

  public static final String JSON_PROPERTY_PRODUCED = "produced";
  private ProjectState produced;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public ProjectLine() { 
  }

  public ProjectLine id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public ProjectLine project(ProjectDataLink project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProjectDataLink getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProject(ProjectDataLink project) {
    this.project = project;
  }


  public ProjectLine activity(ProjectActivityDataLink activity) {
    this.activity = activity;
    return this;
  }

   /**
   * Get activity
   * @return activity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectActivityDataLink getActivity() {
    return activity;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActivity(ProjectActivityDataLink activity) {
    this.activity = activity;
  }


  public ProjectLine type(RowtypeDataLink type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RowtypeDataLink getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(RowtypeDataLink type) {
    this.type = type;
  }


  public ProjectLine employee(EmployeeDataLink employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeDataLink getEmployee() {
    return employee;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmployee(EmployeeDataLink employee) {
    this.employee = employee;
  }


  public ProjectLine employeeProfile(ProfileDataLink employeeProfile) {
    this.employeeProfile = employeeProfile;
    return this;
  }

   /**
   * Get employeeProfile
   * @return employeeProfile
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPLOYEE_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProfileDataLink getEmployeeProfile() {
    return employeeProfile;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmployeeProfile(ProfileDataLink employeeProfile) {
    this.employeeProfile = employeeProfile;
  }


  public ProjectLine equipment(EquipmentDataLink equipment) {
    this.equipment = equipment;
    return this;
  }

   /**
   * Get equipment
   * @return equipment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EQUIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EquipmentDataLink getEquipment() {
    return equipment;
  }


  @JsonProperty(JSON_PROPERTY_EQUIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEquipment(EquipmentDataLink equipment) {
    this.equipment = equipment;
  }


  public ProjectLine equipmentFamily(FamilyDataLink equipmentFamily) {
    this.equipmentFamily = equipmentFamily;
    return this;
  }

   /**
   * Get equipmentFamily
   * @return equipmentFamily
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EQUIPMENT_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FamilyDataLink getEquipmentFamily() {
    return equipmentFamily;
  }


  @JsonProperty(JSON_PROPERTY_EQUIPMENT_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEquipmentFamily(FamilyDataLink equipmentFamily) {
    this.equipmentFamily = equipmentFamily;
  }


  public ProjectLine status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the line
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(Integer status) {
    this.status = status;
  }


  public ProjectLine comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public ProjectLine invoicingMode(Integer invoicingMode) {
    this.invoicingMode = invoicingMode;
    return this;
  }

   /**
   * Invoicing mode of the line
   * @return invoicingMode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICING_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInvoicingMode() {
    return invoicingMode;
  }


  @JsonProperty(JSON_PROPERTY_INVOICING_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoicingMode(Integer invoicingMode) {
    this.invoicingMode = invoicingMode;
  }


  public ProjectLine product(ProductDataLink product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductDataLink getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProduct(ProductDataLink product) {
    this.product = product;
  }


  public ProjectLine unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Unit of the line
   * @return unit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnit(String unit) {
    this.unit = unit;
  }


  public ProjectLine currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Line management currency (ISO code)
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public ProjectLine order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Position of the line in the activity
   * @return order
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(Integer order) {
    this.order = order;
  }


  public ProjectLine initialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
    return this;
  }

   /**
   * Initial start date
   * @return initialStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialStartDate() {
    return initialStartDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
  }


  public ProjectLine initialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
    return this;
  }

   /**
   * Initial end date
   * @return initialEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialEndDate() {
    return initialEndDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
  }


  public ProjectLine updatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
    return this;
  }

   /**
   * Updated start date
   * @return updatedStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedStartDate() {
    return updatedStartDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
  }


  public ProjectLine updatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
    return this;
  }

   /**
   * Updated end date
   * @return updatedEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedEndDate() {
    return updatedEndDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
  }


  public ProjectLine actualStartDate(java.time.LocalDateTime actualStartDate) {
    this.actualStartDate = actualStartDate;
    return this;
  }

   /**
   * Actual start date
   * @return actualStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getActualStartDate() {
    return actualStartDate;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActualStartDate(java.time.LocalDateTime actualStartDate) {
    this.actualStartDate = actualStartDate;
  }


  public ProjectLine actualEndDate(java.time.LocalDateTime actualEndDate) {
    this.actualEndDate = actualEndDate;
    return this;
  }

   /**
   * Actual end date
   * @return actualEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getActualEndDate() {
    return actualEndDate;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActualEndDate(java.time.LocalDateTime actualEndDate) {
    this.actualEndDate = actualEndDate;
  }


  public ProjectLine expected(DiscountableProjectState expected) {
    this.expected = expected;
    return this;
  }

   /**
   * Get expected
   * @return expected
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DiscountableProjectState getExpected() {
    return expected;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpected(DiscountableProjectState expected) {
    this.expected = expected;
  }


  public ProjectLine initial(ProjectState initial) {
    this.initial = initial;
    return this;
  }

   /**
   * Get initial
   * @return initial
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectState getInitial() {
    return initial;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitial(ProjectState initial) {
    this.initial = initial;
  }


  public ProjectLine updated(ProjectState updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectState getUpdated() {
    return updated;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdated(ProjectState updated) {
    this.updated = updated;
  }


  public ProjectLine committed(ProjectState committed) {
    this.committed = committed;
    return this;
  }

   /**
   * Get committed
   * @return committed
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectState getCommitted() {
    return committed;
  }


  @JsonProperty(JSON_PROPERTY_COMMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommitted(ProjectState committed) {
    this.committed = committed;
  }


  public ProjectLine actual(ProjectState actual) {
    this.actual = actual;
    return this;
  }

   /**
   * Get actual
   * @return actual
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectState getActual() {
    return actual;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActual(ProjectState actual) {
    this.actual = actual;
  }


  public ProjectLine produced(ProjectState produced) {
    this.produced = produced;
    return this;
  }

   /**
   * Get produced
   * @return produced
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectState getProduced() {
    return produced;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProduced(ProjectState produced) {
    this.produced = produced;
  }


  public ProjectLine extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public ProjectLine addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the line. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this project-line object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectLine projectLine = (ProjectLine) o;
    return Objects.equals(this.id, projectLine.id) &&
        Objects.equals(this.project, projectLine.project) &&
        Objects.equals(this.activity, projectLine.activity) &&
        Objects.equals(this.type, projectLine.type) &&
        Objects.equals(this.employee, projectLine.employee) &&
        Objects.equals(this.employeeProfile, projectLine.employeeProfile) &&
        Objects.equals(this.equipment, projectLine.equipment) &&
        Objects.equals(this.equipmentFamily, projectLine.equipmentFamily) &&
        Objects.equals(this.status, projectLine.status) &&
        Objects.equals(this.comment, projectLine.comment) &&
        Objects.equals(this.invoicingMode, projectLine.invoicingMode) &&
        Objects.equals(this.product, projectLine.product) &&
        Objects.equals(this.unit, projectLine.unit) &&
        Objects.equals(this.currency, projectLine.currency) &&
        Objects.equals(this.order, projectLine.order) &&
        Objects.equals(this.initialStartDate, projectLine.initialStartDate) &&
        Objects.equals(this.initialEndDate, projectLine.initialEndDate) &&
        Objects.equals(this.updatedStartDate, projectLine.updatedStartDate) &&
        Objects.equals(this.updatedEndDate, projectLine.updatedEndDate) &&
        Objects.equals(this.actualStartDate, projectLine.actualStartDate) &&
        Objects.equals(this.actualEndDate, projectLine.actualEndDate) &&
        Objects.equals(this.expected, projectLine.expected) &&
        Objects.equals(this.initial, projectLine.initial) &&
        Objects.equals(this.updated, projectLine.updated) &&
        Objects.equals(this.committed, projectLine.committed) &&
        Objects.equals(this.actual, projectLine.actual) &&
        Objects.equals(this.produced, projectLine.produced) &&
        Objects.equals(this.extraData, projectLine.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, project, activity, type, employee, employeeProfile, equipment, equipmentFamily, status, comment, invoicingMode, product, unit, currency, order, initialStartDate, initialEndDate, updatedStartDate, updatedEndDate, actualStartDate, actualEndDate, expected, initial, updated, committed, actual, produced, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectLine {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    activity: ").append(toIndentedString(activity)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    employeeProfile: ").append(toIndentedString(employeeProfile)).append("\n");
    sb.append("    equipment: ").append(toIndentedString(equipment)).append("\n");
    sb.append("    equipmentFamily: ").append(toIndentedString(equipmentFamily)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    invoicingMode: ").append(toIndentedString(invoicingMode)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    initialStartDate: ").append(toIndentedString(initialStartDate)).append("\n");
    sb.append("    initialEndDate: ").append(toIndentedString(initialEndDate)).append("\n");
    sb.append("    updatedStartDate: ").append(toIndentedString(updatedStartDate)).append("\n");
    sb.append("    updatedEndDate: ").append(toIndentedString(updatedEndDate)).append("\n");
    sb.append("    actualStartDate: ").append(toIndentedString(actualStartDate)).append("\n");
    sb.append("    actualEndDate: ").append(toIndentedString(actualEndDate)).append("\n");
    sb.append("    expected: ").append(toIndentedString(expected)).append("\n");
    sb.append("    initial: ").append(toIndentedString(initial)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    committed: ").append(toIndentedString(committed)).append("\n");
    sb.append("    actual: ").append(toIndentedString(actual)).append("\n");
    sb.append("    produced: ").append(toIndentedString(produced)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

