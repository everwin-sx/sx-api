/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ExpenseSheetLine
 */
@JsonPropertyOrder({
  ExpenseSheetLine.JSON_PROPERTY_ID,
  ExpenseSheetLine.JSON_PROPERTY_EXPENSE_SHEET,
  ExpenseSheetLine.JSON_PROPERTY_DATE,
  ExpenseSheetLine.JSON_PROPERTY_PROJECT,
  ExpenseSheetLine.JSON_PROPERTY_TYPE,
  ExpenseSheetLine.JSON_PROPERTY_PROJECT_LINE,
  ExpenseSheetLine.JSON_PROPERTY_MISSION_ORDER,
  ExpenseSheetLine.JSON_PROPERTY_TITLE,
  ExpenseSheetLine.JSON_PROPERTY_COMMENT,
  ExpenseSheetLine.JSON_PROPERTY_PLACE,
  ExpenseSheetLine.JSON_PROPERTY_LETTERING,
  ExpenseSheetLine.JSON_PROPERTY_QUANTITY,
  ExpenseSheetLine.JSON_PROPERTY_CURRENCY,
  ExpenseSheetLine.JSON_PROPERTY_AMOUNT,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_INCLUDING_VAT,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT_NON_RECOVERABLE,
  ExpenseSheetLine.JSON_PROPERTY_ACCOUNTING_TOTAL_WITHOUT_VAT,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT_RECOVERABLE,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_INVOICE_AGAIN,
  ExpenseSheetLine.JSON_PROPERTY_REINVOICEABLE,
  ExpenseSheetLine.JSON_PROPERTY_STARTING_ADDRESS,
  ExpenseSheetLine.JSON_PROPERTY_ARRIVAL_ADDRESS,
  ExpenseSheetLine.JSON_PROPERTY_DISTANCE_FROM_O_S_M,
  ExpenseSheetLine.JSON_PROPERTY_ROUND_TRIP,
  ExpenseSheetLine.JSON_PROPERTY_ACCOUNT,
  ExpenseSheetLine.JSON_PROPERTY_VEHICLE,
  ExpenseSheetLine.JSON_PROPERTY_DISTANCE_TO_DATE,
  ExpenseSheetLine.JSON_PROPERTY_NON_REFUNDABLE,
  ExpenseSheetLine.JSON_PROPERTY_DOCUMENT_COUNT,
  ExpenseSheetLine.JSON_PROPERTY_UPDATED_BY,
  ExpenseSheetLine.JSON_PROPERTY_UPDATED_ON_TIME,
  ExpenseSheetLine.JSON_PROPERTY_CREATED_ON_TIME,
  ExpenseSheetLine.JSON_PROPERTY_EXTRA_DATA,
  ExpenseSheetLine.JSON_PROPERTY_DOCUMENT_MANDATORY,
  ExpenseSheetLine.JSON_PROPERTY_GUEST_MANDATORY,
  ExpenseSheetLine.JSON_PROPERTY_CEILING,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL1,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL2,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL3,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT1,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT2,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT3,
  ExpenseSheetLine.JSON_PROPERTY_VAT1,
  ExpenseSheetLine.JSON_PROPERTY_VAT2,
  ExpenseSheetLine.JSON_PROPERTY_VAT3,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT1_NON_RECOVERABLE,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT2_NON_RECOVERABLE,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT3_NON_RECOVERABLE,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT1_RECOVERABLE,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT2_RECOVERABLE,
  ExpenseSheetLine.JSON_PROPERTY_TOTAL_VAT3_RECOVERABLE
})
@JsonTypeName("expenseSheetLine")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class ExpenseSheetLine {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_EXPENSE_SHEET = "expenseSheet";
  private ExpenseSheetDataLink expenseSheet;

  public static final String JSON_PROPERTY_DATE = "date";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime date;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private ProjectDataLink project;

  public static final String JSON_PROPERTY_TYPE = "type";
  private RowtypeDataLink type;

  public static final String JSON_PROPERTY_PROJECT_LINE = "projectLine";
  private ProjectLineDataLink projectLine;

  public static final String JSON_PROPERTY_MISSION_ORDER = "missionOrder";
  private MissionOrderDataLink missionOrder;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_PLACE = "place";
  private String place;

  public static final String JSON_PROPERTY_LETTERING = "lettering";
  private String lettering;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Double quantity;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private CurrencyDataLink currency;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private ExpenseSheetLineMultiCurrency amount;

  public static final String JSON_PROPERTY_TOTAL_INCLUDING_VAT = "totalIncludingVat";
  private ExpenseSheetLineMultiCurrency totalIncludingVat;

  public static final String JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL = "totalWithoutVatReal";
  private ExpenseSheetLineMultiCurrency totalWithoutVatReal;

  public static final String JSON_PROPERTY_TOTAL_VAT_NON_RECOVERABLE = "totalVatNonRecoverable";
  private ExpenseSheetLineMultiCurrency totalVatNonRecoverable;

  public static final String JSON_PROPERTY_ACCOUNTING_TOTAL_WITHOUT_VAT = "accountingTotalWithoutVat";
  private ExpenseSheetLineMultiCurrency accountingTotalWithoutVat;

  public static final String JSON_PROPERTY_TOTAL_VAT = "totalVat";
  private ExpenseSheetLineMultiCurrency totalVat;

  public static final String JSON_PROPERTY_TOTAL_VAT_RECOVERABLE = "totalVatRecoverable";
  private ExpenseSheetLineMultiCurrency totalVatRecoverable;

  public static final String JSON_PROPERTY_TOTAL_INVOICE_AGAIN = "totalInvoiceAgain";
  private ExpenseSheetLineMultiCurrency totalInvoiceAgain;

  /**
   * Indicates if the expense sheet can be re-invoiceable.0 : No, 1 : Yes&#39;&gt;Re-Invoiceable&lt;/a&gt; in System data section
   */
  public enum ReinvoiceableEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    ReinvoiceableEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReinvoiceableEnum fromValue(Integer value) {
      for (ReinvoiceableEnum b : ReinvoiceableEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REINVOICEABLE = "reinvoiceable";
  private ReinvoiceableEnum reinvoiceable;

  public static final String JSON_PROPERTY_STARTING_ADDRESS = "startingAddress";
  private String startingAddress;

  public static final String JSON_PROPERTY_ARRIVAL_ADDRESS = "arrivalAddress";
  private String arrivalAddress;

  public static final String JSON_PROPERTY_DISTANCE_FROM_O_S_M = "distanceFromOSM";
  private Long distanceFromOSM;

  public static final String JSON_PROPERTY_ROUND_TRIP = "roundTrip";
  private Boolean roundTrip;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private AccountDataLink account;

  public static final String JSON_PROPERTY_VEHICLE = "vehicle";
  private VehicleDataLink vehicle;

  public static final String JSON_PROPERTY_DISTANCE_TO_DATE = "distanceToDate";
  private Double distanceToDate;

  /**
   * Indicates if the expense sheet can be non-refundable.0 : No, 1 : Yes&#39;&gt;Non refundable&lt;/a&gt; in System data section
   */
  public enum NonRefundableEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    NonRefundableEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static NonRefundableEnum fromValue(Integer value) {
      for (NonRefundableEnum b : NonRefundableEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_NON_REFUNDABLE = "nonRefundable";
  private NonRefundableEnum nonRefundable;

  public static final String JSON_PROPERTY_DOCUMENT_COUNT = "documentCount";
  private Integer documentCount;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_CREATED_ON_TIME = "createdOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime createdOnTime;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public static final String JSON_PROPERTY_DOCUMENT_MANDATORY = "documentMandatory";
  private Boolean documentMandatory;

  public static final String JSON_PROPERTY_GUEST_MANDATORY = "guestMandatory";
  private Boolean guestMandatory;

  public static final String JSON_PROPERTY_CEILING = "ceiling";
  private Double ceiling;

  public static final String JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL1 = "totalWithoutVatReal1";
  private ExpenseSheetLineMultiCurrency totalWithoutVatReal1;

  public static final String JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL2 = "totalWithoutVatReal2";
  private ExpenseSheetLineMultiCurrency totalWithoutVatReal2;

  public static final String JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL3 = "totalWithoutVatReal3";
  private ExpenseSheetLineMultiCurrency totalWithoutVatReal3;

  public static final String JSON_PROPERTY_TOTAL_VAT1 = "totalVat1";
  private ExpenseSheetLineMultiCurrency totalVat1;

  public static final String JSON_PROPERTY_TOTAL_VAT2 = "totalVat2";
  private ExpenseSheetLineMultiCurrency totalVat2;

  public static final String JSON_PROPERTY_TOTAL_VAT3 = "totalVat3";
  private ExpenseSheetLineMultiCurrency totalVat3;

  public static final String JSON_PROPERTY_VAT1 = "vat1";
  private DataLink vat1;

  public static final String JSON_PROPERTY_VAT2 = "vat2";
  private DataLink vat2;

  public static final String JSON_PROPERTY_VAT3 = "vat3";
  private DataLink vat3;

  public static final String JSON_PROPERTY_TOTAL_VAT1_NON_RECOVERABLE = "totalVat1NonRecoverable";
  private ExpenseSheetLineMultiCurrency totalVat1NonRecoverable;

  public static final String JSON_PROPERTY_TOTAL_VAT2_NON_RECOVERABLE = "totalVat2NonRecoverable";
  private ExpenseSheetLineMultiCurrency totalVat2NonRecoverable;

  public static final String JSON_PROPERTY_TOTAL_VAT3_NON_RECOVERABLE = "totalVat3NonRecoverable";
  private ExpenseSheetLineMultiCurrency totalVat3NonRecoverable;

  public static final String JSON_PROPERTY_TOTAL_VAT1_RECOVERABLE = "totalVat1Recoverable";
  private ExpenseSheetLineMultiCurrency totalVat1Recoverable;

  public static final String JSON_PROPERTY_TOTAL_VAT2_RECOVERABLE = "totalVat2Recoverable";
  private ExpenseSheetLineMultiCurrency totalVat2Recoverable;

  public static final String JSON_PROPERTY_TOTAL_VAT3_RECOVERABLE = "totalVat3Recoverable";
  private ExpenseSheetLineMultiCurrency totalVat3Recoverable;

  public ExpenseSheetLine() { 
  }

  @JsonCreator
  public ExpenseSheetLine(
    @JsonProperty(JSON_PROPERTY_LETTERING) String lettering, 
    @JsonProperty(JSON_PROPERTY_DISTANCE_TO_DATE) Double distanceToDate, 
    @JsonProperty(JSON_PROPERTY_DOCUMENT_COUNT) Integer documentCount, 
    @JsonProperty(JSON_PROPERTY_DOCUMENT_MANDATORY) Boolean documentMandatory, 
    @JsonProperty(JSON_PROPERTY_GUEST_MANDATORY) Boolean guestMandatory, 
    @JsonProperty(JSON_PROPERTY_CEILING) Double ceiling
  ) {
    this();
    this.lettering = lettering;
    this.distanceToDate = distanceToDate;
    this.documentCount = documentCount;
    this.documentMandatory = documentMandatory;
    this.guestMandatory = guestMandatory;
    this.ceiling = ceiling;
  }

  public ExpenseSheetLine id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public ExpenseSheetLine expenseSheet(ExpenseSheetDataLink expenseSheet) {
    this.expenseSheet = expenseSheet;
    return this;
  }

   /**
   * Get expenseSheet
   * @return expenseSheet
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPENSE_SHEET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ExpenseSheetDataLink getExpenseSheet() {
    return expenseSheet;
  }


  @JsonProperty(JSON_PROPERTY_EXPENSE_SHEET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpenseSheet(ExpenseSheetDataLink expenseSheet) {
    this.expenseSheet = expenseSheet;
  }


  public ExpenseSheetLine date(java.time.LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the expense sheet line
   * @return date
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.time.LocalDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDate(java.time.LocalDateTime date) {
    this.date = date;
  }


  public ExpenseSheetLine project(ProjectDataLink project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProjectDataLink getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProject(ProjectDataLink project) {
    this.project = project;
  }


  public ExpenseSheetLine type(RowtypeDataLink type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RowtypeDataLink getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(RowtypeDataLink type) {
    this.type = type;
  }


  public ExpenseSheetLine projectLine(ProjectLineDataLink projectLine) {
    this.projectLine = projectLine;
    return this;
  }

   /**
   * Get projectLine
   * @return projectLine
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectLineDataLink getProjectLine() {
    return projectLine;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectLine(ProjectLineDataLink projectLine) {
    this.projectLine = projectLine;
  }


  public ExpenseSheetLine missionOrder(MissionOrderDataLink missionOrder) {
    this.missionOrder = missionOrder;
    return this;
  }

   /**
   * Get missionOrder
   * @return missionOrder
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MISSION_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MissionOrderDataLink getMissionOrder() {
    return missionOrder;
  }


  @JsonProperty(JSON_PROPERTY_MISSION_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMissionOrder(MissionOrderDataLink missionOrder) {
    this.missionOrder = missionOrder;
  }


  public ExpenseSheetLine title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title of the expense sheet line
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public ExpenseSheetLine comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment of the expense sheet line
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public ExpenseSheetLine place(String place) {
    this.place = place;
    return this;
  }

   /**
   * Place of the expense sheet line
   * @return place
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlace() {
    return place;
  }


  @JsonProperty(JSON_PROPERTY_PLACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlace(String place) {
    this.place = place;
  }


   /**
   * Lettering of the expense sheet line
   * @return lettering
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LETTERING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLettering() {
    return lettering;
  }




  public ExpenseSheetLine quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity of the expense sheet line
   * @return quantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  public ExpenseSheetLine currency(CurrencyDataLink currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CurrencyDataLink getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(CurrencyDataLink currency) {
    this.currency = currency;
  }


  public ExpenseSheetLine amount(ExpenseSheetLineMultiCurrency amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(ExpenseSheetLineMultiCurrency amount) {
    this.amount = amount;
  }


  public ExpenseSheetLine totalIncludingVat(ExpenseSheetLineMultiCurrency totalIncludingVat) {
    this.totalIncludingVat = totalIncludingVat;
    return this;
  }

   /**
   * Get totalIncludingVat
   * @return totalIncludingVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_INCLUDING_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalIncludingVat() {
    return totalIncludingVat;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_INCLUDING_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalIncludingVat(ExpenseSheetLineMultiCurrency totalIncludingVat) {
    this.totalIncludingVat = totalIncludingVat;
  }


  public ExpenseSheetLine totalWithoutVatReal(ExpenseSheetLineMultiCurrency totalWithoutVatReal) {
    this.totalWithoutVatReal = totalWithoutVatReal;
    return this;
  }

   /**
   * Get totalWithoutVatReal
   * @return totalWithoutVatReal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalWithoutVatReal() {
    return totalWithoutVatReal;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalWithoutVatReal(ExpenseSheetLineMultiCurrency totalWithoutVatReal) {
    this.totalWithoutVatReal = totalWithoutVatReal;
  }


  public ExpenseSheetLine totalVatNonRecoverable(ExpenseSheetLineMultiCurrency totalVatNonRecoverable) {
    this.totalVatNonRecoverable = totalVatNonRecoverable;
    return this;
  }

   /**
   * Get totalVatNonRecoverable
   * @return totalVatNonRecoverable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT_NON_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVatNonRecoverable() {
    return totalVatNonRecoverable;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT_NON_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVatNonRecoverable(ExpenseSheetLineMultiCurrency totalVatNonRecoverable) {
    this.totalVatNonRecoverable = totalVatNonRecoverable;
  }


  public ExpenseSheetLine accountingTotalWithoutVat(ExpenseSheetLineMultiCurrency accountingTotalWithoutVat) {
    this.accountingTotalWithoutVat = accountingTotalWithoutVat;
    return this;
  }

   /**
   * Get accountingTotalWithoutVat
   * @return accountingTotalWithoutVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNTING_TOTAL_WITHOUT_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getAccountingTotalWithoutVat() {
    return accountingTotalWithoutVat;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNTING_TOTAL_WITHOUT_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountingTotalWithoutVat(ExpenseSheetLineMultiCurrency accountingTotalWithoutVat) {
    this.accountingTotalWithoutVat = accountingTotalWithoutVat;
  }


  public ExpenseSheetLine totalVat(ExpenseSheetLineMultiCurrency totalVat) {
    this.totalVat = totalVat;
    return this;
  }

   /**
   * Get totalVat
   * @return totalVat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVat() {
    return totalVat;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat(ExpenseSheetLineMultiCurrency totalVat) {
    this.totalVat = totalVat;
  }


  public ExpenseSheetLine totalVatRecoverable(ExpenseSheetLineMultiCurrency totalVatRecoverable) {
    this.totalVatRecoverable = totalVatRecoverable;
    return this;
  }

   /**
   * Get totalVatRecoverable
   * @return totalVatRecoverable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVatRecoverable() {
    return totalVatRecoverable;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVatRecoverable(ExpenseSheetLineMultiCurrency totalVatRecoverable) {
    this.totalVatRecoverable = totalVatRecoverable;
  }


  public ExpenseSheetLine totalInvoiceAgain(ExpenseSheetLineMultiCurrency totalInvoiceAgain) {
    this.totalInvoiceAgain = totalInvoiceAgain;
    return this;
  }

   /**
   * Get totalInvoiceAgain
   * @return totalInvoiceAgain
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_INVOICE_AGAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalInvoiceAgain() {
    return totalInvoiceAgain;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_INVOICE_AGAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalInvoiceAgain(ExpenseSheetLineMultiCurrency totalInvoiceAgain) {
    this.totalInvoiceAgain = totalInvoiceAgain;
  }


  public ExpenseSheetLine reinvoiceable(ReinvoiceableEnum reinvoiceable) {
    this.reinvoiceable = reinvoiceable;
    return this;
  }

   /**
   * Indicates if the expense sheet can be re-invoiceable.0 : No, 1 : Yes&#39;&gt;Re-Invoiceable&lt;/a&gt; in System data section
   * @return reinvoiceable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REINVOICEABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReinvoiceableEnum getReinvoiceable() {
    return reinvoiceable;
  }


  @JsonProperty(JSON_PROPERTY_REINVOICEABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReinvoiceable(ReinvoiceableEnum reinvoiceable) {
    this.reinvoiceable = reinvoiceable;
  }


  public ExpenseSheetLine startingAddress(String startingAddress) {
    this.startingAddress = startingAddress;
    return this;
  }

   /**
   * Starting address of the expense sheet line
   * @return startingAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STARTING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartingAddress() {
    return startingAddress;
  }


  @JsonProperty(JSON_PROPERTY_STARTING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartingAddress(String startingAddress) {
    this.startingAddress = startingAddress;
  }


  public ExpenseSheetLine arrivalAddress(String arrivalAddress) {
    this.arrivalAddress = arrivalAddress;
    return this;
  }

   /**
   * Arrival address of the expense sheet line
   * @return arrivalAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARRIVAL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getArrivalAddress() {
    return arrivalAddress;
  }


  @JsonProperty(JSON_PROPERTY_ARRIVAL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArrivalAddress(String arrivalAddress) {
    this.arrivalAddress = arrivalAddress;
  }


  public ExpenseSheetLine distanceFromOSM(Long distanceFromOSM) {
    this.distanceFromOSM = distanceFromOSM;
    return this;
  }

   /**
   * Travel distance of the expense sheet line
   * @return distanceFromOSM
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISTANCE_FROM_O_S_M)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getDistanceFromOSM() {
    return distanceFromOSM;
  }


  @JsonProperty(JSON_PROPERTY_DISTANCE_FROM_O_S_M)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistanceFromOSM(Long distanceFromOSM) {
    this.distanceFromOSM = distanceFromOSM;
  }


  public ExpenseSheetLine roundTrip(Boolean roundTrip) {
    this.roundTrip = roundTrip;
    return this;
  }

   /**
   * roundTrip of the expense sheet line
   * @return roundTrip
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUND_TRIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRoundTrip() {
    return roundTrip;
  }


  @JsonProperty(JSON_PROPERTY_ROUND_TRIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoundTrip(Boolean roundTrip) {
    this.roundTrip = roundTrip;
  }


  public ExpenseSheetLine account(AccountDataLink account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountDataLink getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(AccountDataLink account) {
    this.account = account;
  }


  public ExpenseSheetLine vehicle(VehicleDataLink vehicle) {
    this.vehicle = vehicle;
    return this;
  }

   /**
   * Get vehicle
   * @return vehicle
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VEHICLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VehicleDataLink getVehicle() {
    return vehicle;
  }


  @JsonProperty(JSON_PROPERTY_VEHICLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVehicle(VehicleDataLink vehicle) {
    this.vehicle = vehicle;
  }


   /**
   * Distance to date of the vehicle
   * @return distanceToDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISTANCE_TO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getDistanceToDate() {
    return distanceToDate;
  }




  public ExpenseSheetLine nonRefundable(NonRefundableEnum nonRefundable) {
    this.nonRefundable = nonRefundable;
    return this;
  }

   /**
   * Indicates if the expense sheet can be non-refundable.0 : No, 1 : Yes&#39;&gt;Non refundable&lt;/a&gt; in System data section
   * @return nonRefundable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NON_REFUNDABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NonRefundableEnum getNonRefundable() {
    return nonRefundable;
  }


  @JsonProperty(JSON_PROPERTY_NON_REFUNDABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonRefundable(NonRefundableEnum nonRefundable) {
    this.nonRefundable = nonRefundable;
  }


   /**
   * Number of attachments associated with the expense sheet line
   * @return documentCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDocumentCount() {
    return documentCount;
  }




  public ExpenseSheetLine updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Login of the user doing the last update on the expense sheet line
   * @return updatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public ExpenseSheetLine updatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
    return this;
  }

   /**
   * Date &amp; time of the last update of the expense sheet line
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedOnTime(java.time.LocalDateTime updatedOnTime) {
    this.updatedOnTime = updatedOnTime;
  }


  public ExpenseSheetLine createdOnTime(java.time.LocalDateTime createdOnTime) {
    this.createdOnTime = createdOnTime;
    return this;
  }

   /**
   * Date &amp; time of creation of the expense sheet line
   * @return createdOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getCreatedOnTime() {
    return createdOnTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedOnTime(java.time.LocalDateTime createdOnTime) {
    this.createdOnTime = createdOnTime;
  }


  public ExpenseSheetLine extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public ExpenseSheetLine addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the expense sheet line. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


   /**
   * True if documents are mandatory the expense sheet line
   * @return documentMandatory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_MANDATORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDocumentMandatory() {
    return documentMandatory;
  }




   /**
   * True if guests are mandatory the expense sheet line
   * @return guestMandatory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GUEST_MANDATORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGuestMandatory() {
    return guestMandatory;
  }




   /**
   * The expense ceiling
   * @return ceiling
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CEILING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCeiling() {
    return ceiling;
  }




  public ExpenseSheetLine totalWithoutVatReal1(ExpenseSheetLineMultiCurrency totalWithoutVatReal1) {
    this.totalWithoutVatReal1 = totalWithoutVatReal1;
    return this;
  }

   /**
   * Get totalWithoutVatReal1
   * @return totalWithoutVatReal1
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalWithoutVatReal1() {
    return totalWithoutVatReal1;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalWithoutVatReal1(ExpenseSheetLineMultiCurrency totalWithoutVatReal1) {
    this.totalWithoutVatReal1 = totalWithoutVatReal1;
  }


  public ExpenseSheetLine totalWithoutVatReal2(ExpenseSheetLineMultiCurrency totalWithoutVatReal2) {
    this.totalWithoutVatReal2 = totalWithoutVatReal2;
    return this;
  }

   /**
   * Get totalWithoutVatReal2
   * @return totalWithoutVatReal2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalWithoutVatReal2() {
    return totalWithoutVatReal2;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalWithoutVatReal2(ExpenseSheetLineMultiCurrency totalWithoutVatReal2) {
    this.totalWithoutVatReal2 = totalWithoutVatReal2;
  }


  public ExpenseSheetLine totalWithoutVatReal3(ExpenseSheetLineMultiCurrency totalWithoutVatReal3) {
    this.totalWithoutVatReal3 = totalWithoutVatReal3;
    return this;
  }

   /**
   * Get totalWithoutVatReal3
   * @return totalWithoutVatReal3
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalWithoutVatReal3() {
    return totalWithoutVatReal3;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_WITHOUT_VAT_REAL3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalWithoutVatReal3(ExpenseSheetLineMultiCurrency totalWithoutVatReal3) {
    this.totalWithoutVatReal3 = totalWithoutVatReal3;
  }


  public ExpenseSheetLine totalVat1(ExpenseSheetLineMultiCurrency totalVat1) {
    this.totalVat1 = totalVat1;
    return this;
  }

   /**
   * Get totalVat1
   * @return totalVat1
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVat1() {
    return totalVat1;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat1(ExpenseSheetLineMultiCurrency totalVat1) {
    this.totalVat1 = totalVat1;
  }


  public ExpenseSheetLine totalVat2(ExpenseSheetLineMultiCurrency totalVat2) {
    this.totalVat2 = totalVat2;
    return this;
  }

   /**
   * Get totalVat2
   * @return totalVat2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVat2() {
    return totalVat2;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat2(ExpenseSheetLineMultiCurrency totalVat2) {
    this.totalVat2 = totalVat2;
  }


  public ExpenseSheetLine totalVat3(ExpenseSheetLineMultiCurrency totalVat3) {
    this.totalVat3 = totalVat3;
    return this;
  }

   /**
   * Get totalVat3
   * @return totalVat3
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVat3() {
    return totalVat3;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat3(ExpenseSheetLineMultiCurrency totalVat3) {
    this.totalVat3 = totalVat3;
  }


  public ExpenseSheetLine vat1(DataLink vat1) {
    this.vat1 = vat1;
    return this;
  }

   /**
   * Get vat1
   * @return vat1
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getVat1() {
    return vat1;
  }


  @JsonProperty(JSON_PROPERTY_VAT1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVat1(DataLink vat1) {
    this.vat1 = vat1;
  }


  public ExpenseSheetLine vat2(DataLink vat2) {
    this.vat2 = vat2;
    return this;
  }

   /**
   * Get vat2
   * @return vat2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getVat2() {
    return vat2;
  }


  @JsonProperty(JSON_PROPERTY_VAT2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVat2(DataLink vat2) {
    this.vat2 = vat2;
  }


  public ExpenseSheetLine vat3(DataLink vat3) {
    this.vat3 = vat3;
    return this;
  }

   /**
   * Get vat3
   * @return vat3
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAT3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getVat3() {
    return vat3;
  }


  @JsonProperty(JSON_PROPERTY_VAT3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVat3(DataLink vat3) {
    this.vat3 = vat3;
  }


  public ExpenseSheetLine totalVat1NonRecoverable(ExpenseSheetLineMultiCurrency totalVat1NonRecoverable) {
    this.totalVat1NonRecoverable = totalVat1NonRecoverable;
    return this;
  }

   /**
   * Get totalVat1NonRecoverable
   * @return totalVat1NonRecoverable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT1_NON_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVat1NonRecoverable() {
    return totalVat1NonRecoverable;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT1_NON_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat1NonRecoverable(ExpenseSheetLineMultiCurrency totalVat1NonRecoverable) {
    this.totalVat1NonRecoverable = totalVat1NonRecoverable;
  }


  public ExpenseSheetLine totalVat2NonRecoverable(ExpenseSheetLineMultiCurrency totalVat2NonRecoverable) {
    this.totalVat2NonRecoverable = totalVat2NonRecoverable;
    return this;
  }

   /**
   * Get totalVat2NonRecoverable
   * @return totalVat2NonRecoverable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT2_NON_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVat2NonRecoverable() {
    return totalVat2NonRecoverable;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT2_NON_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat2NonRecoverable(ExpenseSheetLineMultiCurrency totalVat2NonRecoverable) {
    this.totalVat2NonRecoverable = totalVat2NonRecoverable;
  }


  public ExpenseSheetLine totalVat3NonRecoverable(ExpenseSheetLineMultiCurrency totalVat3NonRecoverable) {
    this.totalVat3NonRecoverable = totalVat3NonRecoverable;
    return this;
  }

   /**
   * Get totalVat3NonRecoverable
   * @return totalVat3NonRecoverable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT3_NON_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVat3NonRecoverable() {
    return totalVat3NonRecoverable;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT3_NON_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat3NonRecoverable(ExpenseSheetLineMultiCurrency totalVat3NonRecoverable) {
    this.totalVat3NonRecoverable = totalVat3NonRecoverable;
  }


  public ExpenseSheetLine totalVat1Recoverable(ExpenseSheetLineMultiCurrency totalVat1Recoverable) {
    this.totalVat1Recoverable = totalVat1Recoverable;
    return this;
  }

   /**
   * Get totalVat1Recoverable
   * @return totalVat1Recoverable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT1_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVat1Recoverable() {
    return totalVat1Recoverable;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT1_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat1Recoverable(ExpenseSheetLineMultiCurrency totalVat1Recoverable) {
    this.totalVat1Recoverable = totalVat1Recoverable;
  }


  public ExpenseSheetLine totalVat2Recoverable(ExpenseSheetLineMultiCurrency totalVat2Recoverable) {
    this.totalVat2Recoverable = totalVat2Recoverable;
    return this;
  }

   /**
   * Get totalVat2Recoverable
   * @return totalVat2Recoverable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT2_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVat2Recoverable() {
    return totalVat2Recoverable;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT2_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat2Recoverable(ExpenseSheetLineMultiCurrency totalVat2Recoverable) {
    this.totalVat2Recoverable = totalVat2Recoverable;
  }


  public ExpenseSheetLine totalVat3Recoverable(ExpenseSheetLineMultiCurrency totalVat3Recoverable) {
    this.totalVat3Recoverable = totalVat3Recoverable;
    return this;
  }

   /**
   * Get totalVat3Recoverable
   * @return totalVat3Recoverable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_VAT3_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpenseSheetLineMultiCurrency getTotalVat3Recoverable() {
    return totalVat3Recoverable;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_VAT3_RECOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalVat3Recoverable(ExpenseSheetLineMultiCurrency totalVat3Recoverable) {
    this.totalVat3Recoverable = totalVat3Recoverable;
  }


  /**
   * Return true if this expenseSheetLine object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpenseSheetLine expenseSheetLine = (ExpenseSheetLine) o;
    return Objects.equals(this.id, expenseSheetLine.id) &&
        Objects.equals(this.expenseSheet, expenseSheetLine.expenseSheet) &&
        Objects.equals(this.date, expenseSheetLine.date) &&
        Objects.equals(this.project, expenseSheetLine.project) &&
        Objects.equals(this.type, expenseSheetLine.type) &&
        Objects.equals(this.projectLine, expenseSheetLine.projectLine) &&
        Objects.equals(this.missionOrder, expenseSheetLine.missionOrder) &&
        Objects.equals(this.title, expenseSheetLine.title) &&
        Objects.equals(this.comment, expenseSheetLine.comment) &&
        Objects.equals(this.place, expenseSheetLine.place) &&
        Objects.equals(this.lettering, expenseSheetLine.lettering) &&
        Objects.equals(this.quantity, expenseSheetLine.quantity) &&
        Objects.equals(this.currency, expenseSheetLine.currency) &&
        Objects.equals(this.amount, expenseSheetLine.amount) &&
        Objects.equals(this.totalIncludingVat, expenseSheetLine.totalIncludingVat) &&
        Objects.equals(this.totalWithoutVatReal, expenseSheetLine.totalWithoutVatReal) &&
        Objects.equals(this.totalVatNonRecoverable, expenseSheetLine.totalVatNonRecoverable) &&
        Objects.equals(this.accountingTotalWithoutVat, expenseSheetLine.accountingTotalWithoutVat) &&
        Objects.equals(this.totalVat, expenseSheetLine.totalVat) &&
        Objects.equals(this.totalVatRecoverable, expenseSheetLine.totalVatRecoverable) &&
        Objects.equals(this.totalInvoiceAgain, expenseSheetLine.totalInvoiceAgain) &&
        Objects.equals(this.reinvoiceable, expenseSheetLine.reinvoiceable) &&
        Objects.equals(this.startingAddress, expenseSheetLine.startingAddress) &&
        Objects.equals(this.arrivalAddress, expenseSheetLine.arrivalAddress) &&
        Objects.equals(this.distanceFromOSM, expenseSheetLine.distanceFromOSM) &&
        Objects.equals(this.roundTrip, expenseSheetLine.roundTrip) &&
        Objects.equals(this.account, expenseSheetLine.account) &&
        Objects.equals(this.vehicle, expenseSheetLine.vehicle) &&
        Objects.equals(this.distanceToDate, expenseSheetLine.distanceToDate) &&
        Objects.equals(this.nonRefundable, expenseSheetLine.nonRefundable) &&
        Objects.equals(this.documentCount, expenseSheetLine.documentCount) &&
        Objects.equals(this.updatedBy, expenseSheetLine.updatedBy) &&
        Objects.equals(this.updatedOnTime, expenseSheetLine.updatedOnTime) &&
        Objects.equals(this.createdOnTime, expenseSheetLine.createdOnTime) &&
        Objects.equals(this.extraData, expenseSheetLine.extraData) &&
        Objects.equals(this.documentMandatory, expenseSheetLine.documentMandatory) &&
        Objects.equals(this.guestMandatory, expenseSheetLine.guestMandatory) &&
        Objects.equals(this.ceiling, expenseSheetLine.ceiling) &&
        Objects.equals(this.totalWithoutVatReal1, expenseSheetLine.totalWithoutVatReal1) &&
        Objects.equals(this.totalWithoutVatReal2, expenseSheetLine.totalWithoutVatReal2) &&
        Objects.equals(this.totalWithoutVatReal3, expenseSheetLine.totalWithoutVatReal3) &&
        Objects.equals(this.totalVat1, expenseSheetLine.totalVat1) &&
        Objects.equals(this.totalVat2, expenseSheetLine.totalVat2) &&
        Objects.equals(this.totalVat3, expenseSheetLine.totalVat3) &&
        Objects.equals(this.vat1, expenseSheetLine.vat1) &&
        Objects.equals(this.vat2, expenseSheetLine.vat2) &&
        Objects.equals(this.vat3, expenseSheetLine.vat3) &&
        Objects.equals(this.totalVat1NonRecoverable, expenseSheetLine.totalVat1NonRecoverable) &&
        Objects.equals(this.totalVat2NonRecoverable, expenseSheetLine.totalVat2NonRecoverable) &&
        Objects.equals(this.totalVat3NonRecoverable, expenseSheetLine.totalVat3NonRecoverable) &&
        Objects.equals(this.totalVat1Recoverable, expenseSheetLine.totalVat1Recoverable) &&
        Objects.equals(this.totalVat2Recoverable, expenseSheetLine.totalVat2Recoverable) &&
        Objects.equals(this.totalVat3Recoverable, expenseSheetLine.totalVat3Recoverable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, expenseSheet, date, project, type, projectLine, missionOrder, title, comment, place, lettering, quantity, currency, amount, totalIncludingVat, totalWithoutVatReal, totalVatNonRecoverable, accountingTotalWithoutVat, totalVat, totalVatRecoverable, totalInvoiceAgain, reinvoiceable, startingAddress, arrivalAddress, distanceFromOSM, roundTrip, account, vehicle, distanceToDate, nonRefundable, documentCount, updatedBy, updatedOnTime, createdOnTime, extraData, documentMandatory, guestMandatory, ceiling, totalWithoutVatReal1, totalWithoutVatReal2, totalWithoutVatReal3, totalVat1, totalVat2, totalVat3, vat1, vat2, vat3, totalVat1NonRecoverable, totalVat2NonRecoverable, totalVat3NonRecoverable, totalVat1Recoverable, totalVat2Recoverable, totalVat3Recoverable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpenseSheetLine {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    expenseSheet: ").append(toIndentedString(expenseSheet)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    projectLine: ").append(toIndentedString(projectLine)).append("\n");
    sb.append("    missionOrder: ").append(toIndentedString(missionOrder)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    place: ").append(toIndentedString(place)).append("\n");
    sb.append("    lettering: ").append(toIndentedString(lettering)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    totalIncludingVat: ").append(toIndentedString(totalIncludingVat)).append("\n");
    sb.append("    totalWithoutVatReal: ").append(toIndentedString(totalWithoutVatReal)).append("\n");
    sb.append("    totalVatNonRecoverable: ").append(toIndentedString(totalVatNonRecoverable)).append("\n");
    sb.append("    accountingTotalWithoutVat: ").append(toIndentedString(accountingTotalWithoutVat)).append("\n");
    sb.append("    totalVat: ").append(toIndentedString(totalVat)).append("\n");
    sb.append("    totalVatRecoverable: ").append(toIndentedString(totalVatRecoverable)).append("\n");
    sb.append("    totalInvoiceAgain: ").append(toIndentedString(totalInvoiceAgain)).append("\n");
    sb.append("    reinvoiceable: ").append(toIndentedString(reinvoiceable)).append("\n");
    sb.append("    startingAddress: ").append(toIndentedString(startingAddress)).append("\n");
    sb.append("    arrivalAddress: ").append(toIndentedString(arrivalAddress)).append("\n");
    sb.append("    distanceFromOSM: ").append(toIndentedString(distanceFromOSM)).append("\n");
    sb.append("    roundTrip: ").append(toIndentedString(roundTrip)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    vehicle: ").append(toIndentedString(vehicle)).append("\n");
    sb.append("    distanceToDate: ").append(toIndentedString(distanceToDate)).append("\n");
    sb.append("    nonRefundable: ").append(toIndentedString(nonRefundable)).append("\n");
    sb.append("    documentCount: ").append(toIndentedString(documentCount)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("    documentMandatory: ").append(toIndentedString(documentMandatory)).append("\n");
    sb.append("    guestMandatory: ").append(toIndentedString(guestMandatory)).append("\n");
    sb.append("    ceiling: ").append(toIndentedString(ceiling)).append("\n");
    sb.append("    totalWithoutVatReal1: ").append(toIndentedString(totalWithoutVatReal1)).append("\n");
    sb.append("    totalWithoutVatReal2: ").append(toIndentedString(totalWithoutVatReal2)).append("\n");
    sb.append("    totalWithoutVatReal3: ").append(toIndentedString(totalWithoutVatReal3)).append("\n");
    sb.append("    totalVat1: ").append(toIndentedString(totalVat1)).append("\n");
    sb.append("    totalVat2: ").append(toIndentedString(totalVat2)).append("\n");
    sb.append("    totalVat3: ").append(toIndentedString(totalVat3)).append("\n");
    sb.append("    vat1: ").append(toIndentedString(vat1)).append("\n");
    sb.append("    vat2: ").append(toIndentedString(vat2)).append("\n");
    sb.append("    vat3: ").append(toIndentedString(vat3)).append("\n");
    sb.append("    totalVat1NonRecoverable: ").append(toIndentedString(totalVat1NonRecoverable)).append("\n");
    sb.append("    totalVat2NonRecoverable: ").append(toIndentedString(totalVat2NonRecoverable)).append("\n");
    sb.append("    totalVat3NonRecoverable: ").append(toIndentedString(totalVat3NonRecoverable)).append("\n");
    sb.append("    totalVat1Recoverable: ").append(toIndentedString(totalVat1Recoverable)).append("\n");
    sb.append("    totalVat2Recoverable: ").append(toIndentedString(totalVat2Recoverable)).append("\n");
    sb.append("    totalVat3Recoverable: ").append(toIndentedString(totalVat3Recoverable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

