/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.01.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.everwin.sx.client.model.CurrencyDataLink;
import fr.everwin.sx.client.model.ProjectActivityCategoryDataLink;
import fr.everwin.sx.client.model.ProjectPhaseDataLink;
import fr.everwin.sx.client.model.SpecificData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import fr.everwin.sx.client.JSON;


/**
 * ProjectActivity
 */
@JsonPropertyOrder({
  ProjectActivity.JSON_PROPERTY_ID,
  ProjectActivity.JSON_PROPERTY_CODE,
  ProjectActivity.JSON_PROPERTY_LABEL,
  ProjectActivity.JSON_PROPERTY_PHASE,
  ProjectActivity.JSON_PROPERTY_ORDER,
  ProjectActivity.JSON_PROPERTY_INITIAL_START_DATE,
  ProjectActivity.JSON_PROPERTY_INITIAL_END_DATE,
  ProjectActivity.JSON_PROPERTY_UPDATED_START_DATE,
  ProjectActivity.JSON_PROPERTY_UPDATED_END_DATE,
  ProjectActivity.JSON_PROPERTY_REAL_START_DATE,
  ProjectActivity.JSON_PROPERTY_REAL_END_DATE,
  ProjectActivity.JSON_PROPERTY_COMMENT,
  ProjectActivity.JSON_PROPERTY_CATEGORY,
  ProjectActivity.JSON_PROPERTY_DEFAULT_LINE_CURRENCY,
  ProjectActivity.JSON_PROPERTY_UPDATED_ON_TIME,
  ProjectActivity.JSON_PROPERTY_EXTRA_DATA
})
@JsonTypeName("project-activity")
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-05-22T08:24:46.022483900+02:00[Europe/Paris]")
public class ProjectActivity {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_PHASE = "phase";
  private ProjectPhaseDataLink phase;

  public static final String JSON_PROPERTY_ORDER = "order";
  private Integer order;

  public static final String JSON_PROPERTY_INITIAL_START_DATE = "initialStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialStartDate;

  public static final String JSON_PROPERTY_INITIAL_END_DATE = "initialEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime initialEndDate;

  public static final String JSON_PROPERTY_UPDATED_START_DATE = "updatedStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedStartDate;

  public static final String JSON_PROPERTY_UPDATED_END_DATE = "updatedEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedEndDate;

  public static final String JSON_PROPERTY_REAL_START_DATE = "realStartDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime realStartDate;

  public static final String JSON_PROPERTY_REAL_END_DATE = "realEndDate";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime realEndDate;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private ProjectActivityCategoryDataLink category;

  public static final String JSON_PROPERTY_DEFAULT_LINE_CURRENCY = "defaultLineCurrency";
  private CurrencyDataLink defaultLineCurrency;

  public static final String JSON_PROPERTY_UPDATED_ON_TIME = "updatedOnTime";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime updatedOnTime;

  public static final String JSON_PROPERTY_EXTRA_DATA = "extraData";
  private List<SpecificData> extraData;

  public ProjectActivity() { 
  }

  @JsonCreator
  public ProjectActivity(
    @JsonProperty(JSON_PROPERTY_REAL_START_DATE) java.time.LocalDateTime realStartDate, 
    @JsonProperty(JSON_PROPERTY_REAL_END_DATE) java.time.LocalDateTime realEndDate, 
    @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME) java.time.LocalDateTime updatedOnTime
  ) {
    this();
    this.realStartDate = realStartDate;
    this.realEndDate = realEndDate;
    this.updatedOnTime = updatedOnTime;
  }

  public ProjectActivity id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public ProjectActivity code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the project activity
   * @return code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public ProjectActivity label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label of the project activity
   * @return label
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public ProjectActivity phase(ProjectPhaseDataLink phase) {
    this.phase = phase;
    return this;
  }

   /**
   * Get phase
   * @return phase
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PHASE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProjectPhaseDataLink getPhase() {
    return phase;
  }


  @JsonProperty(JSON_PROPERTY_PHASE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPhase(ProjectPhaseDataLink phase) {
    this.phase = phase;
  }


  public ProjectActivity order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Order of the project activity
   * @return order
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(Integer order) {
    this.order = order;
  }


  public ProjectActivity initialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
    return this;
  }

   /**
   * Initial start date of the project activity
   * @return initialStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialStartDate() {
    return initialStartDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialStartDate(java.time.LocalDateTime initialStartDate) {
    this.initialStartDate = initialStartDate;
  }


  public ProjectActivity initialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
    return this;
  }

   /**
   * Initial end date of the project activity
   * @return initialEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getInitialEndDate() {
    return initialEndDate;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialEndDate(java.time.LocalDateTime initialEndDate) {
    this.initialEndDate = initialEndDate;
  }


  public ProjectActivity updatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
    return this;
  }

   /**
   * Updated start date of the project activity
   * @return updatedStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedStartDate() {
    return updatedStartDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedStartDate(java.time.LocalDateTime updatedStartDate) {
    this.updatedStartDate = updatedStartDate;
  }


  public ProjectActivity updatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
    return this;
  }

   /**
   * Updated end date of the project activity
   * @return updatedEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedEndDate() {
    return updatedEndDate;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedEndDate(java.time.LocalDateTime updatedEndDate) {
    this.updatedEndDate = updatedEndDate;
  }


   /**
   * Real start date of the project activity
   * @return realStartDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getRealStartDate() {
    return realStartDate;
  }




   /**
   * Real end date of the project activity
   * @return realEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getRealEndDate() {
    return realEndDate;
  }




  public ProjectActivity comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment of the project activity
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public ProjectActivity category(ProjectActivityCategoryDataLink category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProjectActivityCategoryDataLink getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(ProjectActivityCategoryDataLink category) {
    this.category = category;
  }


  public ProjectActivity defaultLineCurrency(CurrencyDataLink defaultLineCurrency) {
    this.defaultLineCurrency = defaultLineCurrency;
    return this;
  }

   /**
   * Get defaultLineCurrency
   * @return defaultLineCurrency
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_LINE_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CurrencyDataLink getDefaultLineCurrency() {
    return defaultLineCurrency;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_LINE_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultLineCurrency(CurrencyDataLink defaultLineCurrency) {
    this.defaultLineCurrency = defaultLineCurrency;
  }


   /**
   * Date &amp; time of the last update of the project activity
   * @return updatedOnTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_ON_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getUpdatedOnTime() {
    return updatedOnTime;
  }




  public ProjectActivity extraData(List<SpecificData> extraData) {
    this.extraData = extraData;
    return this;
  }

  public ProjectActivity addExtraDataItem(SpecificData extraDataItem) {
    if (this.extraData == null) {
      this.extraData = new ArrayList<>();
    }
    this.extraData.add(extraDataItem);
    return this;
  }

   /**
   * Extra data of the project activity. For more information, see Extra data section
   * @return extraData
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificData> getExtraData() {
    return extraData;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtraData(List<SpecificData> extraData) {
    this.extraData = extraData;
  }


  /**
   * Return true if this project-activity object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectActivity projectActivity = (ProjectActivity) o;
    return Objects.equals(this.id, projectActivity.id) &&
        Objects.equals(this.code, projectActivity.code) &&
        Objects.equals(this.label, projectActivity.label) &&
        Objects.equals(this.phase, projectActivity.phase) &&
        Objects.equals(this.order, projectActivity.order) &&
        Objects.equals(this.initialStartDate, projectActivity.initialStartDate) &&
        Objects.equals(this.initialEndDate, projectActivity.initialEndDate) &&
        Objects.equals(this.updatedStartDate, projectActivity.updatedStartDate) &&
        Objects.equals(this.updatedEndDate, projectActivity.updatedEndDate) &&
        Objects.equals(this.realStartDate, projectActivity.realStartDate) &&
        Objects.equals(this.realEndDate, projectActivity.realEndDate) &&
        Objects.equals(this.comment, projectActivity.comment) &&
        Objects.equals(this.category, projectActivity.category) &&
        Objects.equals(this.defaultLineCurrency, projectActivity.defaultLineCurrency) &&
        Objects.equals(this.updatedOnTime, projectActivity.updatedOnTime) &&
        Objects.equals(this.extraData, projectActivity.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, label, phase, order, initialStartDate, initialEndDate, updatedStartDate, updatedEndDate, realStartDate, realEndDate, comment, category, defaultLineCurrency, updatedOnTime, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectActivity {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    initialStartDate: ").append(toIndentedString(initialStartDate)).append("\n");
    sb.append("    initialEndDate: ").append(toIndentedString(initialEndDate)).append("\n");
    sb.append("    updatedStartDate: ").append(toIndentedString(updatedStartDate)).append("\n");
    sb.append("    updatedEndDate: ").append(toIndentedString(updatedEndDate)).append("\n");
    sb.append("    realStartDate: ").append(toIndentedString(realStartDate)).append("\n");
    sb.append("    realEndDate: ").append(toIndentedString(realEndDate)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    defaultLineCurrency: ").append(toIndentedString(defaultLineCurrency)).append("\n");
    sb.append("    updatedOnTime: ").append(toIndentedString(updatedOnTime)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

