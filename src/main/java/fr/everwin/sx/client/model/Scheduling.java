/*
 * Everwin API documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.02.00
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.everwin.sx.client.model;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;


/**
 * Scheduling
 */
@JsonPropertyOrder({
  Scheduling.JSON_PROPERTY_ID,
  Scheduling.JSON_PROPERTY_DATE,
  Scheduling.JSON_PROPERTY_PROJECT,
  Scheduling.JSON_PROPERTY_PROJECT_LINE,
  Scheduling.JSON_PROPERTY_PROJECT_SUB_LINE,
  Scheduling.JSON_PROPERTY_HOURS,
  Scheduling.JSON_PROPERTY_DAYS
})
@jakarta.annotation.Generated(value = "fr.everwin.sx.openapi.codegen.CustomJavaClientCodegen", date = "2025-10-06T08:58:20.555636300+02:00[Europe/Paris]")
public class Scheduling {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_DATE = "date";
  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss", timezone = "CET")
  private java.time.LocalDateTime date;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private DataLink project;

  public static final String JSON_PROPERTY_PROJECT_LINE = "projectLine";
  private DataLink projectLine;

  public static final String JSON_PROPERTY_PROJECT_SUB_LINE = "projectSubLine";
  private DataLink projectSubLine;

  public static final String JSON_PROPERTY_HOURS = "hours";
  private Double hours;

  public static final String JSON_PROPERTY_DAYS = "days";
  private Double days;

  public Scheduling() { 
  }

  public Scheduling id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of the object
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public Scheduling date(java.time.LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the week or month of the timesheet
   * @return date
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.time.LocalDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(java.time.LocalDateTime date) {
    this.date = date;
  }


  public Scheduling project(DataLink project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProject(DataLink project) {
    this.project = project;
  }


  public Scheduling projectLine(DataLink projectLine) {
    this.projectLine = projectLine;
    return this;
  }

   /**
   * Get projectLine
   * @return projectLine
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getProjectLine() {
    return projectLine;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectLine(DataLink projectLine) {
    this.projectLine = projectLine;
  }


  public Scheduling projectSubLine(DataLink projectSubLine) {
    this.projectSubLine = projectSubLine;
    return this;
  }

   /**
   * Get projectSubLine
   * @return projectSubLine
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT_SUB_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataLink getProjectSubLine() {
    return projectSubLine;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_SUB_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectSubLine(DataLink projectSubLine) {
    this.projectSubLine = projectSubLine;
  }


  public Scheduling hours(Double hours) {
    this.hours = hours;
    return this;
  }

   /**
   * Duration in hours (affair) of planification
   * @return hours
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getHours() {
    return hours;
  }


  @JsonProperty(JSON_PROPERTY_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHours(Double hours) {
    this.hours = hours;
  }


  public Scheduling days(Double days) {
    this.days = days;
    return this;
  }

   /**
   * Duration in days of planification
   * @return days
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getDays() {
    return days;
  }


  @JsonProperty(JSON_PROPERTY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDays(Double days) {
    this.days = days;
  }


  /**
   * Return true if this Scheduling object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scheduling scheduling = (Scheduling) o;
    return Objects.equals(this.id, scheduling.id) &&
        Objects.equals(this.date, scheduling.date) &&
        Objects.equals(this.project, scheduling.project) &&
        Objects.equals(this.projectLine, scheduling.projectLine) &&
        Objects.equals(this.projectSubLine, scheduling.projectSubLine) &&
        Objects.equals(this.hours, scheduling.hours) &&
        Objects.equals(this.days, scheduling.days);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, date, project, projectLine, projectSubLine, hours, days);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scheduling {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectLine: ").append(toIndentedString(projectLine)).append("\n");
    sb.append("    projectSubLine: ").append(toIndentedString(projectSubLine)).append("\n");
    sb.append("    hours: ").append(toIndentedString(hours)).append("\n");
    sb.append("    days: ").append(toIndentedString(days)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

